// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.3
// source: dhs.proto

package dhs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GamePlayerState int32

const (
	GamePlayerState_NULL    GamePlayerState = 0
	GamePlayerState_AUTH    GamePlayerState = 1
	GamePlayerState_SYNCING GamePlayerState = 2
	GamePlayerState_READY   GamePlayerState = 3
)

// Enum value maps for GamePlayerState.
var (
	GamePlayerState_name = map[int32]string{
		0: "NULL",
		1: "AUTH",
		2: "SYNCING",
		3: "READY",
	}
	GamePlayerState_value = map[string]int32{
		"NULL":    0,
		"AUTH":    1,
		"SYNCING": 2,
		"READY":   3,
	}
)

func (x GamePlayerState) Enum() *GamePlayerState {
	p := new(GamePlayerState)
	*p = x
	return p
}

func (x GamePlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GamePlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_dhs_proto_enumTypes[0].Descriptor()
}

func (GamePlayerState) Type() protoreflect.EnumType {
	return &file_dhs_proto_enumTypes[0]
}

func (x GamePlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GamePlayerState.Descriptor instead.
func (GamePlayerState) EnumDescriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{0}
}

type CustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId           uint32   `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	CreatorId          uint32   `protobuf:"varint,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	ContestId          uint32   `protobuf:"varint,3,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ContestName        string   `protobuf:"bytes,4,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	State              uint32   `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	CreateTime         uint32   `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartTime          uint32   `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime         uint32   `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Open               bool     `protobuf:"varint,9,opt,name=open,proto3" json:"open,omitempty"`
	RankRule           uint32   `protobuf:"varint,10,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule,omitempty"`
	Deadline           uint32   `protobuf:"varint,11,opt,name=deadline,proto3" json:"deadline,omitempty"`
	AutoMatch          bool     `protobuf:"varint,12,opt,name=auto_match,json=autoMatch,proto3" json:"auto_match,omitempty"`
	AutoDisableEndChat bool     `protobuf:"varint,13,opt,name=auto_disable_end_chat,json=autoDisableEndChat,proto3" json:"auto_disable_end_chat,omitempty"`
	ContestType        uint32   `protobuf:"varint,14,opt,name=contest_type,json=contestType,proto3" json:"contest_type,omitempty"`
	HiddenZones        []uint32 `protobuf:"varint,15,rep,packed,name=hidden_zones,json=hiddenZones,proto3" json:"hidden_zones,omitempty"`
	BannedZones        []uint32 `protobuf:"varint,16,rep,packed,name=banned_zones,json=bannedZones,proto3" json:"banned_zones,omitempty"`
	ObserverSwitch     uint32   `protobuf:"varint,17,opt,name=observer_switch,json=observerSwitch,proto3" json:"observer_switch,omitempty"`
	EmojiSwitch        uint32   `protobuf:"varint,18,opt,name=emoji_switch,json=emojiSwitch,proto3" json:"emoji_switch,omitempty"`
	PlayerRosterType   uint32   `protobuf:"varint,19,opt,name=player_roster_type,json=playerRosterType,proto3" json:"player_roster_type,omitempty"`
}

func (x *CustomizedContest) Reset() {
	*x = CustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContest) ProtoMessage() {}

func (x *CustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContest.ProtoReflect.Descriptor instead.
func (*CustomizedContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{0}
}

func (x *CustomizedContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContest) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContest) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContest) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContest) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContest) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContest) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContest) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContest) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContest) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *CustomizedContest) GetDeadline() uint32 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *CustomizedContest) GetAutoMatch() bool {
	if x != nil {
		return x.AutoMatch
	}
	return false
}

func (x *CustomizedContest) GetAutoDisableEndChat() bool {
	if x != nil {
		return x.AutoDisableEndChat
	}
	return false
}

func (x *CustomizedContest) GetContestType() uint32 {
	if x != nil {
		return x.ContestType
	}
	return 0
}

func (x *CustomizedContest) GetHiddenZones() []uint32 {
	if x != nil {
		return x.HiddenZones
	}
	return nil
}

func (x *CustomizedContest) GetBannedZones() []uint32 {
	if x != nil {
		return x.BannedZones
	}
	return nil
}

func (x *CustomizedContest) GetObserverSwitch() uint32 {
	if x != nil {
		return x.ObserverSwitch
	}
	return 0
}

func (x *CustomizedContest) GetEmojiSwitch() uint32 {
	if x != nil {
		return x.EmojiSwitch
	}
	return 0
}

func (x *CustomizedContest) GetPlayerRosterType() uint32 {
	if x != nil {
		return x.PlayerRosterType
	}
	return 0
}

type ContestGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid  string                    `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
	Players   []*ContestGameInfo_Player `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	StartTime uint32                    `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint32                    `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ContestGameInfo) Reset() {
	*x = ContestGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestGameInfo) ProtoMessage() {}

func (x *ContestGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestGameInfo.ProtoReflect.Descriptor instead.
func (*ContestGameInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{1}
}

func (x *ContestGameInfo) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *ContestGameInfo) GetPlayers() []*ContestGameInfo_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ContestGameInfo) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ContestGameInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ContestPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ContestPlayerInfo) Reset() {
	*x = ContestPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestPlayerInfo) ProtoMessage() {}

func (x *ContestPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestPlayerInfo.ProtoReflect.Descriptor instead.
func (*ContestPlayerInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{2}
}

func (x *ContestPlayerInfo) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ContestPlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ContestMatchingPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32                            `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname   string                            `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Controller *ContestMatchingPlayer_Controller `protobuf:"bytes,3,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *ContestMatchingPlayer) Reset() {
	*x = ContestMatchingPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestMatchingPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestMatchingPlayer) ProtoMessage() {}

func (x *ContestMatchingPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestMatchingPlayer.ProtoReflect.Descriptor instead.
func (*ContestMatchingPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{3}
}

func (x *ContestMatchingPlayer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ContestMatchingPlayer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ContestMatchingPlayer) GetController() *ContestMatchingPlayer_Controller {
	if x != nil {
		return x.Controller
	}
	return nil
}

type ReqContestManageLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account        string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password       string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	GenAccessToken bool   `protobuf:"varint,3,opt,name=gen_access_token,json=genAccessToken,proto3" json:"gen_access_token,omitempty"`
	Type           uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReqContestManageLogin) Reset() {
	*x = ReqContestManageLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqContestManageLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqContestManageLogin) ProtoMessage() {}

func (x *ReqContestManageLogin) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqContestManageLogin.ProtoReflect.Descriptor instead.
func (*ReqContestManageLogin) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{4}
}

func (x *ReqContestManageLogin) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqContestManageLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqContestManageLogin) GetGenAccessToken() bool {
	if x != nil {
		return x.GenAccessToken
	}
	return false
}

func (x *ReqContestManageLogin) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResContestManageLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	AccountId      uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname       string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AccessToken    string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Diamond        uint32 `protobuf:"varint,5,opt,name=diamond,proto3" json:"diamond,omitempty"`
	LastCreateTime uint32 `protobuf:"varint,6,opt,name=last_create_time,json=lastCreateTime,proto3" json:"last_create_time,omitempty"`
}

func (x *ResContestManageLogin) Reset() {
	*x = ResContestManageLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResContestManageLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResContestManageLogin) ProtoMessage() {}

func (x *ResContestManageLogin) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResContestManageLogin.ProtoReflect.Descriptor instead.
func (*ResContestManageLogin) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{5}
}

func (x *ResContestManageLogin) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResContestManageLogin) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResContestManageLogin) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ResContestManageLogin) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ResContestManageLogin) GetDiamond() uint32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *ResContestManageLogin) GetLastCreateTime() uint32 {
	if x != nil {
		return x.LastCreateTime
	}
	return 0
}

type ReqContestManageOauth2Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Uid  string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqContestManageOauth2Auth) Reset() {
	*x = ReqContestManageOauth2Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqContestManageOauth2Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqContestManageOauth2Auth) ProtoMessage() {}

func (x *ReqContestManageOauth2Auth) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqContestManageOauth2Auth.ProtoReflect.Descriptor instead.
func (*ReqContestManageOauth2Auth) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{6}
}

func (x *ReqContestManageOauth2Auth) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqContestManageOauth2Auth) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReqContestManageOauth2Auth) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ResContestManageOauth2Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *ResContestManageOauth2Auth) Reset() {
	*x = ResContestManageOauth2Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResContestManageOauth2Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResContestManageOauth2Auth) ProtoMessage() {}

func (x *ResContestManageOauth2Auth) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResContestManageOauth2Auth.ProtoReflect.Descriptor instead.
func (*ResContestManageOauth2Auth) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{7}
}

func (x *ResContestManageOauth2Auth) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResContestManageOauth2Auth) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type ReqContestManageOauth2Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Reconnect   bool   `protobuf:"varint,3,opt,name=reconnect,proto3" json:"reconnect,omitempty"`
}

func (x *ReqContestManageOauth2Login) Reset() {
	*x = ReqContestManageOauth2Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqContestManageOauth2Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqContestManageOauth2Login) ProtoMessage() {}

func (x *ReqContestManageOauth2Login) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqContestManageOauth2Login.ProtoReflect.Descriptor instead.
func (*ReqContestManageOauth2Login) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{8}
}

func (x *ReqContestManageOauth2Login) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqContestManageOauth2Login) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReqContestManageOauth2Login) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

type ResContestManageOauth2Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	AccountId      uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname       string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AccessToken    string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Diamond        uint32 `protobuf:"varint,5,opt,name=diamond,proto3" json:"diamond,omitempty"`
	LastCreateTime uint32 `protobuf:"varint,6,opt,name=last_create_time,json=lastCreateTime,proto3" json:"last_create_time,omitempty"`
}

func (x *ResContestManageOauth2Login) Reset() {
	*x = ResContestManageOauth2Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResContestManageOauth2Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResContestManageOauth2Login) ProtoMessage() {}

func (x *ResContestManageOauth2Login) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResContestManageOauth2Login.ProtoReflect.Descriptor instead.
func (*ResContestManageOauth2Login) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{9}
}

func (x *ResContestManageOauth2Login) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResContestManageOauth2Login) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResContestManageOauth2Login) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ResContestManageOauth2Login) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ResContestManageOauth2Login) GetDiamond() uint32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *ResContestManageOauth2Login) GetLastCreateTime() uint32 {
	if x != nil {
		return x.LastCreateTime
	}
	return 0
}

type ResFetchRelatedContestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Contests []*CustomizedContest `protobuf:"bytes,2,rep,name=contests,proto3" json:"contests,omitempty"`
}

func (x *ResFetchRelatedContestList) Reset() {
	*x = ResFetchRelatedContestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchRelatedContestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchRelatedContestList) ProtoMessage() {}

func (x *ResFetchRelatedContestList) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchRelatedContestList.ProtoReflect.Descriptor instead.
func (*ResFetchRelatedContestList) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{10}
}

func (x *ResFetchRelatedContestList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchRelatedContestList) GetContests() []*CustomizedContest {
	if x != nil {
		return x.Contests
	}
	return nil
}

type ReqCreateCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestName     string           `protobuf:"bytes,1,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	StartTime       uint32           `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime      uint32           `protobuf:"varint,3,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Open            bool             `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"`
	RankRule        uint32           `protobuf:"varint,5,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule,omitempty"`
	GameRuleSetting *GameRuleSetting `protobuf:"bytes,6,opt,name=game_rule_setting,json=gameRuleSetting,proto3" json:"game_rule_setting,omitempty"`
}

func (x *ReqCreateCustomizedContest) Reset() {
	*x = ReqCreateCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateCustomizedContest) ProtoMessage() {}

func (x *ReqCreateCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateCustomizedContest.ProtoReflect.Descriptor instead.
func (*ReqCreateCustomizedContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{11}
}

func (x *ReqCreateCustomizedContest) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *ReqCreateCustomizedContest) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqCreateCustomizedContest) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *ReqCreateCustomizedContest) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *ReqCreateCustomizedContest) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *ReqCreateCustomizedContest) GetGameRuleSetting() *GameRuleSetting {
	if x != nil {
		return x.GameRuleSetting
	}
	return nil
}

type ResCreateCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Contest *CustomizedContest `protobuf:"bytes,2,opt,name=contest,proto3" json:"contest,omitempty"`
	Diamond uint32             `protobuf:"varint,3,opt,name=diamond,proto3" json:"diamond,omitempty"`
}

func (x *ResCreateCustomizedContest) Reset() {
	*x = ResCreateCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateCustomizedContest) ProtoMessage() {}

func (x *ResCreateCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateCustomizedContest.ProtoReflect.Descriptor instead.
func (*ResCreateCustomizedContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{12}
}

func (x *ResCreateCustomizedContest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateCustomizedContest) GetContest() *CustomizedContest {
	if x != nil {
		return x.Contest
	}
	return nil
}

func (x *ResCreateCustomizedContest) GetDiamond() uint32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

type ReqDeleteCustomizedContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
}

func (x *ReqDeleteCustomizedContest) Reset() {
	*x = ReqDeleteCustomizedContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteCustomizedContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteCustomizedContest) ProtoMessage() {}

func (x *ReqDeleteCustomizedContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteCustomizedContest.ProtoReflect.Descriptor instead.
func (*ReqDeleteCustomizedContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{13}
}

func (x *ReqDeleteCustomizedContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ReqProlongContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
}

func (x *ReqProlongContest) Reset() {
	*x = ReqProlongContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqProlongContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqProlongContest) ProtoMessage() {}

func (x *ReqProlongContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqProlongContest.ProtoReflect.Descriptor instead.
func (*ReqProlongContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{14}
}

func (x *ReqProlongContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResProlongContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Deadline uint32 `protobuf:"varint,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *ResProlongContest) Reset() {
	*x = ResProlongContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResProlongContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResProlongContest) ProtoMessage() {}

func (x *ResProlongContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResProlongContest.ProtoReflect.Descriptor instead.
func (*ResProlongContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{15}
}

func (x *ResProlongContest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResProlongContest) GetDeadline() uint32 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

type ReqManageContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
}

func (x *ReqManageContest) Reset() {
	*x = ReqManageContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqManageContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqManageContest) ProtoMessage() {}

func (x *ReqManageContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqManageContest.ProtoReflect.Descriptor instead.
func (*ReqManageContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{16}
}

func (x *ReqManageContest) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type ResManageContest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Contest *CustomizedContest `protobuf:"bytes,2,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *ResManageContest) Reset() {
	*x = ResManageContest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResManageContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResManageContest) ProtoMessage() {}

func (x *ResManageContest) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResManageContest.ProtoReflect.Descriptor instead.
func (*ResManageContest) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{17}
}

func (x *ResManageContest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResManageContest) GetContest() *CustomizedContest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type ResFetchContestGameRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	GameRuleSetting *GameRuleSetting `protobuf:"bytes,2,opt,name=game_rule_setting,json=gameRuleSetting,proto3" json:"game_rule_setting,omitempty"`
}

func (x *ResFetchContestGameRule) Reset() {
	*x = ResFetchContestGameRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestGameRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestGameRule) ProtoMessage() {}

func (x *ResFetchContestGameRule) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestGameRule.ProtoReflect.Descriptor instead.
func (*ResFetchContestGameRule) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{18}
}

func (x *ResFetchContestGameRule) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchContestGameRule) GetGameRuleSetting() *GameRuleSetting {
	if x != nil {
		return x.GameRuleSetting
	}
	return nil
}

type ReqUpdateContestGameRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestName        string           `protobuf:"bytes,1,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	StartTime          uint32           `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime         uint32           `protobuf:"varint,3,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Open               bool             `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"`
	RankRule           uint32           `protobuf:"varint,5,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule,omitempty"`
	GameRuleSetting    *GameRuleSetting `protobuf:"bytes,6,opt,name=game_rule_setting,json=gameRuleSetting,proto3" json:"game_rule_setting,omitempty"`
	AutoMatch          bool             `protobuf:"varint,7,opt,name=auto_match,json=autoMatch,proto3" json:"auto_match,omitempty"`
	AutoDisableEndChat bool             `protobuf:"varint,8,opt,name=auto_disable_end_chat,json=autoDisableEndChat,proto3" json:"auto_disable_end_chat,omitempty"`
	ContestType        uint32           `protobuf:"varint,9,opt,name=contest_type,json=contestType,proto3" json:"contest_type,omitempty"`
	BannedZones        string           `protobuf:"bytes,10,opt,name=banned_zones,json=bannedZones,proto3" json:"banned_zones,omitempty"`
	HiddenZones        string           `protobuf:"bytes,11,opt,name=hidden_zones,json=hiddenZones,proto3" json:"hidden_zones,omitempty"`
	EmojiSwitch        bool             `protobuf:"varint,12,opt,name=emoji_switch,json=emojiSwitch,proto3" json:"emoji_switch,omitempty"`
	PlayerRosterType   uint32           `protobuf:"varint,13,opt,name=player_roster_type,json=playerRosterType,proto3" json:"player_roster_type,omitempty"`
}

func (x *ReqUpdateContestGameRule) Reset() {
	*x = ReqUpdateContestGameRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateContestGameRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateContestGameRule) ProtoMessage() {}

func (x *ReqUpdateContestGameRule) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateContestGameRule.ProtoReflect.Descriptor instead.
func (*ReqUpdateContestGameRule) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{19}
}

func (x *ReqUpdateContestGameRule) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *ReqUpdateContestGameRule) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqUpdateContestGameRule) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *ReqUpdateContestGameRule) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *ReqUpdateContestGameRule) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *ReqUpdateContestGameRule) GetGameRuleSetting() *GameRuleSetting {
	if x != nil {
		return x.GameRuleSetting
	}
	return nil
}

func (x *ReqUpdateContestGameRule) GetAutoMatch() bool {
	if x != nil {
		return x.AutoMatch
	}
	return false
}

func (x *ReqUpdateContestGameRule) GetAutoDisableEndChat() bool {
	if x != nil {
		return x.AutoDisableEndChat
	}
	return false
}

func (x *ReqUpdateContestGameRule) GetContestType() uint32 {
	if x != nil {
		return x.ContestType
	}
	return 0
}

func (x *ReqUpdateContestGameRule) GetBannedZones() string {
	if x != nil {
		return x.BannedZones
	}
	return ""
}

func (x *ReqUpdateContestGameRule) GetHiddenZones() string {
	if x != nil {
		return x.HiddenZones
	}
	return ""
}

func (x *ReqUpdateContestGameRule) GetEmojiSwitch() bool {
	if x != nil {
		return x.EmojiSwitch
	}
	return false
}

func (x *ReqUpdateContestGameRule) GetPlayerRosterType() uint32 {
	if x != nil {
		return x.PlayerRosterType
	}
	return 0
}

type ReqSearchAccountByNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryNicknames []string `protobuf:"bytes,1,rep,name=query_nicknames,json=queryNicknames,proto3" json:"query_nicknames,omitempty"`
}

func (x *ReqSearchAccountByNickname) Reset() {
	*x = ReqSearchAccountByNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSearchAccountByNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSearchAccountByNickname) ProtoMessage() {}

func (x *ReqSearchAccountByNickname) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSearchAccountByNickname.ProtoReflect.Descriptor instead.
func (*ReqSearchAccountByNickname) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{20}
}

func (x *ReqSearchAccountByNickname) GetQueryNicknames() []string {
	if x != nil {
		return x.QueryNicknames
	}
	return nil
}

type ResSearchAccountByNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error                             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SearchResult []*ResSearchAccountByNickname_Item `protobuf:"bytes,3,rep,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
}

func (x *ResSearchAccountByNickname) Reset() {
	*x = ResSearchAccountByNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSearchAccountByNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSearchAccountByNickname) ProtoMessage() {}

func (x *ResSearchAccountByNickname) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSearchAccountByNickname.ProtoReflect.Descriptor instead.
func (*ResSearchAccountByNickname) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{21}
}

func (x *ResSearchAccountByNickname) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSearchAccountByNickname) GetSearchResult() []*ResSearchAccountByNickname_Item {
	if x != nil {
		return x.SearchResult
	}
	return nil
}

type ReqSearchAccountByEid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eids []uint32 `protobuf:"varint,1,rep,packed,name=eids,proto3" json:"eids,omitempty"`
}

func (x *ReqSearchAccountByEid) Reset() {
	*x = ReqSearchAccountByEid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSearchAccountByEid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSearchAccountByEid) ProtoMessage() {}

func (x *ReqSearchAccountByEid) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSearchAccountByEid.ProtoReflect.Descriptor instead.
func (*ReqSearchAccountByEid) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{22}
}

func (x *ReqSearchAccountByEid) GetEids() []uint32 {
	if x != nil {
		return x.Eids
	}
	return nil
}

type ResSearchAccountByEid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        *Error                        `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SearchResult []*ResSearchAccountByEid_Item `protobuf:"bytes,3,rep,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
}

func (x *ResSearchAccountByEid) Reset() {
	*x = ResSearchAccountByEid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSearchAccountByEid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSearchAccountByEid) ProtoMessage() {}

func (x *ResSearchAccountByEid) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSearchAccountByEid.ProtoReflect.Descriptor instead.
func (*ResSearchAccountByEid) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{23}
}

func (x *ResSearchAccountByEid) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResSearchAccountByEid) GetSearchResult() []*ResSearchAccountByEid_Item {
	if x != nil {
		return x.SearchResult
	}
	return nil
}

type ResFetchCustomizedContestPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Players []*ContestPlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *ResFetchCustomizedContestPlayer) Reset() {
	*x = ResFetchCustomizedContestPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestPlayer) ProtoMessage() {}

func (x *ResFetchCustomizedContestPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestPlayer.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{24}
}

func (x *ResFetchCustomizedContestPlayer) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestPlayer) GetPlayers() []*ContestPlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type ReqUpdateCustomizedContestPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingType uint32   `protobuf:"varint,1,opt,name=setting_type,json=settingType,proto3" json:"setting_type,omitempty"`
	Nicknames   []string `protobuf:"bytes,2,rep,name=nicknames,proto3" json:"nicknames,omitempty"`
	AccountIds  []uint32 `protobuf:"varint,3,rep,packed,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
}

func (x *ReqUpdateCustomizedContestPlayer) Reset() {
	*x = ReqUpdateCustomizedContestPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCustomizedContestPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCustomizedContestPlayer) ProtoMessage() {}

func (x *ReqUpdateCustomizedContestPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCustomizedContestPlayer.ProtoReflect.Descriptor instead.
func (*ReqUpdateCustomizedContestPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{25}
}

func (x *ReqUpdateCustomizedContestPlayer) GetSettingType() uint32 {
	if x != nil {
		return x.SettingType
	}
	return 0
}

func (x *ReqUpdateCustomizedContestPlayer) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

func (x *ReqUpdateCustomizedContestPlayer) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type ResUpdateCustomizedContestPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	FailedIndex []uint32 `protobuf:"varint,2,rep,packed,name=failed_index,json=failedIndex,proto3" json:"failed_index,omitempty"`
}

func (x *ResUpdateCustomizedContestPlayer) Reset() {
	*x = ResUpdateCustomizedContestPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateCustomizedContestPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateCustomizedContestPlayer) ProtoMessage() {}

func (x *ResUpdateCustomizedContestPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateCustomizedContestPlayer.ProtoReflect.Descriptor instead.
func (*ResUpdateCustomizedContestPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{26}
}

func (x *ResUpdateCustomizedContestPlayer) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUpdateCustomizedContestPlayer) GetFailedIndex() []uint32 {
	if x != nil {
		return x.FailedIndex
	}
	return nil
}

type ResStartManageGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Players []*ContestMatchingPlayer `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Games   []*ContestGameInfo       `protobuf:"bytes,3,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *ResStartManageGame) Reset() {
	*x = ResStartManageGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResStartManageGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResStartManageGame) ProtoMessage() {}

func (x *ResStartManageGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResStartManageGame.ProtoReflect.Descriptor instead.
func (*ResStartManageGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{27}
}

func (x *ResStartManageGame) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResStartManageGame) GetPlayers() []*ContestMatchingPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ResStartManageGame) GetGames() []*ContestGameInfo {
	if x != nil {
		return x.Games
	}
	return nil
}

type ReqLockGamePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ReqLockGamePlayer) Reset() {
	*x = ReqLockGamePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLockGamePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLockGamePlayer) ProtoMessage() {}

func (x *ReqLockGamePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLockGamePlayer.ProtoReflect.Descriptor instead.
func (*ReqLockGamePlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{28}
}

func (x *ReqLockGamePlayer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ReqUnlockGamePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ReqUnlockGamePlayer) Reset() {
	*x = ReqUnlockGamePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUnlockGamePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUnlockGamePlayer) ProtoMessage() {}

func (x *ReqUnlockGamePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUnlockGamePlayer.ProtoReflect.Descriptor instead.
func (*ReqUnlockGamePlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{29}
}

func (x *ReqUnlockGamePlayer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ReqCreateContestGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots               []*ReqCreateContestGame_Slot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
	Tag                 string                       `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	RandomPosition      bool                         `protobuf:"varint,3,opt,name=random_position,json=randomPosition,proto3" json:"random_position,omitempty"`
	OpenLive            bool                         `protobuf:"varint,4,opt,name=open_live,json=openLive,proto3" json:"open_live,omitempty"`
	ChatBroadcastForEnd bool                         `protobuf:"varint,5,opt,name=chat_broadcast_for_end,json=chatBroadcastForEnd,proto3" json:"chat_broadcast_for_end,omitempty"`
	AiLevel             uint32                       `protobuf:"varint,6,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level,omitempty"`
}

func (x *ReqCreateContestGame) Reset() {
	*x = ReqCreateContestGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateContestGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateContestGame) ProtoMessage() {}

func (x *ReqCreateContestGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateContestGame.ProtoReflect.Descriptor instead.
func (*ReqCreateContestGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{30}
}

func (x *ReqCreateContestGame) GetSlots() []*ReqCreateContestGame_Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *ReqCreateContestGame) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ReqCreateContestGame) GetRandomPosition() bool {
	if x != nil {
		return x.RandomPosition
	}
	return false
}

func (x *ReqCreateContestGame) GetOpenLive() bool {
	if x != nil {
		return x.OpenLive
	}
	return false
}

func (x *ReqCreateContestGame) GetChatBroadcastForEnd() bool {
	if x != nil {
		return x.ChatBroadcastForEnd
	}
	return false
}

func (x *ReqCreateContestGame) GetAiLevel() uint32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

type ResCreateContestGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	GameUuid string `protobuf:"bytes,2,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
}

func (x *ResCreateContestGame) Reset() {
	*x = ResCreateContestGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateContestGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateContestGame) ProtoMessage() {}

func (x *ResCreateContestGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateContestGame.ProtoReflect.Descriptor instead.
func (*ResCreateContestGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{31}
}

func (x *ResCreateContestGame) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCreateContestGame) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

type ReqFetchCustomizedContestGameRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastIndex uint32 `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
}

func (x *ReqFetchCustomizedContestGameRecordList) Reset() {
	*x = ReqFetchCustomizedContestGameRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchCustomizedContestGameRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchCustomizedContestGameRecordList) ProtoMessage() {}

func (x *ReqFetchCustomizedContestGameRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchCustomizedContestGameRecordList.ProtoReflect.Descriptor instead.
func (*ReqFetchCustomizedContestGameRecordList) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{32}
}

func (x *ReqFetchCustomizedContestGameRecordList) GetLastIndex() uint32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

type ResFetchCustomizedContestGameRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error                                          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	NextIndex  uint32                                          `protobuf:"varint,2,opt,name=next_index,json=nextIndex,proto3" json:"next_index,omitempty"`
	RecordList []*ResFetchCustomizedContestGameRecordList_Item `protobuf:"bytes,3,rep,name=record_list,json=recordList,proto3" json:"record_list,omitempty"`
}

func (x *ResFetchCustomizedContestGameRecordList) Reset() {
	*x = ResFetchCustomizedContestGameRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestGameRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestGameRecordList) ProtoMessage() {}

func (x *ResFetchCustomizedContestGameRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestGameRecordList.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestGameRecordList) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{33}
}

func (x *ResFetchCustomizedContestGameRecordList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestGameRecordList) GetNextIndex() uint32 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

func (x *ResFetchCustomizedContestGameRecordList) GetRecordList() []*ResFetchCustomizedContestGameRecordList_Item {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type ReqRemoveContestGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ReqRemoveContestGameRecord) Reset() {
	*x = ReqRemoveContestGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRemoveContestGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRemoveContestGameRecord) ProtoMessage() {}

func (x *ReqRemoveContestGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRemoveContestGameRecord.ProtoReflect.Descriptor instead.
func (*ReqRemoveContestGameRecord) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{34}
}

func (x *ReqRemoveContestGameRecord) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ReqFetchContestNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTypes []uint32 `protobuf:"varint,1,rep,packed,name=notice_types,json=noticeTypes,proto3" json:"notice_types,omitempty"`
}

func (x *ReqFetchContestNotice) Reset() {
	*x = ReqFetchContestNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFetchContestNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFetchContestNotice) ProtoMessage() {}

func (x *ReqFetchContestNotice) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFetchContestNotice.ProtoReflect.Descriptor instead.
func (*ReqFetchContestNotice) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{35}
}

func (x *ReqFetchContestNotice) GetNoticeTypes() []uint32 {
	if x != nil {
		return x.NoticeTypes
	}
	return nil
}

type ResFetchContestNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Notices []string `protobuf:"bytes,2,rep,name=notices,proto3" json:"notices,omitempty"`
}

func (x *ResFetchContestNotice) Reset() {
	*x = ResFetchContestNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestNotice) ProtoMessage() {}

func (x *ResFetchContestNotice) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestNotice.ProtoReflect.Descriptor instead.
func (*ResFetchContestNotice) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{36}
}

func (x *ResFetchContestNotice) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchContestNotice) GetNotices() []string {
	if x != nil {
		return x.Notices
	}
	return nil
}

type ReqUpdateCustomizedContestNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeType uint32 `protobuf:"varint,1,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ReqUpdateCustomizedContestNotice) Reset() {
	*x = ReqUpdateCustomizedContestNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCustomizedContestNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCustomizedContestNotice) ProtoMessage() {}

func (x *ReqUpdateCustomizedContestNotice) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCustomizedContestNotice.ProtoReflect.Descriptor instead.
func (*ReqUpdateCustomizedContestNotice) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{37}
}

func (x *ReqUpdateCustomizedContestNotice) GetNoticeType() uint32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *ReqUpdateCustomizedContestNotice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ResFetchCustomizedContestManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Players []*ContestPlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *ResFetchCustomizedContestManager) Reset() {
	*x = ResFetchCustomizedContestManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestManager) ProtoMessage() {}

func (x *ResFetchCustomizedContestManager) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestManager.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestManager) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{38}
}

func (x *ResFetchCustomizedContestManager) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCustomizedContestManager) GetPlayers() []*ContestPlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type ReqUpdateCustomizedContestManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingType uint32   `protobuf:"varint,1,opt,name=setting_type,json=settingType,proto3" json:"setting_type,omitempty"`
	Nicknames   []string `protobuf:"bytes,2,rep,name=nicknames,proto3" json:"nicknames,omitempty"`
	AccountIds  []uint32 `protobuf:"varint,3,rep,packed,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
}

func (x *ReqUpdateCustomizedContestManager) Reset() {
	*x = ReqUpdateCustomizedContestManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCustomizedContestManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCustomizedContestManager) ProtoMessage() {}

func (x *ReqUpdateCustomizedContestManager) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCustomizedContestManager.ProtoReflect.Descriptor instead.
func (*ReqUpdateCustomizedContestManager) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{39}
}

func (x *ReqUpdateCustomizedContestManager) GetSettingType() uint32 {
	if x != nil {
		return x.SettingType
	}
	return 0
}

func (x *ReqUpdateCustomizedContestManager) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

func (x *ReqUpdateCustomizedContestManager) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type ResCustomizedContestChatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error                               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ChatLimitType   uint32                               `protobuf:"varint,2,opt,name=chat_limit_type,json=chatLimitType,proto3" json:"chat_limit_type,omitempty"`
	ChatLimitRoster []*ResCustomizedContestChatInfo_Item `protobuf:"bytes,3,rep,name=chat_limit_roster,json=chatLimitRoster,proto3" json:"chat_limit_roster,omitempty"`
}

func (x *ResCustomizedContestChatInfo) Reset() {
	*x = ResCustomizedContestChatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCustomizedContestChatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCustomizedContestChatInfo) ProtoMessage() {}

func (x *ResCustomizedContestChatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCustomizedContestChatInfo.ProtoReflect.Descriptor instead.
func (*ResCustomizedContestChatInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{40}
}

func (x *ResCustomizedContestChatInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResCustomizedContestChatInfo) GetChatLimitType() uint32 {
	if x != nil {
		return x.ChatLimitType
	}
	return 0
}

func (x *ResCustomizedContestChatInfo) GetChatLimitRoster() []*ResCustomizedContestChatInfo_Item {
	if x != nil {
		return x.ChatLimitRoster
	}
	return nil
}

type ReqUpdateCustomizedContestChatSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingType   uint32   `protobuf:"varint,1,opt,name=setting_type,json=settingType,proto3" json:"setting_type,omitempty"`
	Nicknames     []string `protobuf:"bytes,2,rep,name=nicknames,proto3" json:"nicknames,omitempty"`
	AccountIds    []uint32 `protobuf:"varint,3,rep,packed,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
	ChatLimitType uint32   `protobuf:"varint,4,opt,name=chat_limit_type,json=chatLimitType,proto3" json:"chat_limit_type,omitempty"`
}

func (x *ReqUpdateCustomizedContestChatSetting) Reset() {
	*x = ReqUpdateCustomizedContestChatSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCustomizedContestChatSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCustomizedContestChatSetting) ProtoMessage() {}

func (x *ReqUpdateCustomizedContestChatSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCustomizedContestChatSetting.ProtoReflect.Descriptor instead.
func (*ReqUpdateCustomizedContestChatSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{41}
}

func (x *ReqUpdateCustomizedContestChatSetting) GetSettingType() uint32 {
	if x != nil {
		return x.SettingType
	}
	return 0
}

func (x *ReqUpdateCustomizedContestChatSetting) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

func (x *ReqUpdateCustomizedContestChatSetting) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

func (x *ReqUpdateCustomizedContestChatSetting) GetChatLimitType() uint32 {
	if x != nil {
		return x.ChatLimitType
	}
	return 0
}

type ResUpdateCustomizedContestChatSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	FailedIndex []uint32 `protobuf:"varint,2,rep,packed,name=failed_index,json=failedIndex,proto3" json:"failed_index,omitempty"`
}

func (x *ResUpdateCustomizedContestChatSetting) Reset() {
	*x = ResUpdateCustomizedContestChatSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateCustomizedContestChatSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateCustomizedContestChatSetting) ProtoMessage() {}

func (x *ResUpdateCustomizedContestChatSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateCustomizedContestChatSetting.ProtoReflect.Descriptor instead.
func (*ResUpdateCustomizedContestChatSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{42}
}

func (x *ResUpdateCustomizedContestChatSetting) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResUpdateCustomizedContestChatSetting) GetFailedIndex() []uint32 {
	if x != nil {
		return x.FailedIndex
	}
	return nil
}

type ReqUpdateGameTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ReqUpdateGameTag) Reset() {
	*x = ReqUpdateGameTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateGameTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateGameTag) ProtoMessage() {}

func (x *ReqUpdateGameTag) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateGameTag.ProtoReflect.Descriptor instead.
func (*ReqUpdateGameTag) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{43}
}

func (x *ReqUpdateGameTag) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ReqUpdateGameTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ReqTerminateContestGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ReqTerminateContestGame) Reset() {
	*x = ReqTerminateContestGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTerminateContestGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTerminateContestGame) ProtoMessage() {}

func (x *ReqTerminateContestGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTerminateContestGame.ProtoReflect.Descriptor instead.
func (*ReqTerminateContestGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{44}
}

func (x *ReqTerminateContestGame) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ReqPauseContestGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ReqPauseContestGame) Reset() {
	*x = ReqPauseContestGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPauseContestGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPauseContestGame) ProtoMessage() {}

func (x *ReqPauseContestGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPauseContestGame.ProtoReflect.Descriptor instead.
func (*ReqPauseContestGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{45}
}

func (x *ReqPauseContestGame) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ReqResumeContestGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ReqResumeContestGame) Reset() {
	*x = ReqResumeContestGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqResumeContestGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqResumeContestGame) ProtoMessage() {}

func (x *ReqResumeContestGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqResumeContestGame.ProtoReflect.Descriptor instead.
func (*ReqResumeContestGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{46}
}

func (x *ReqResumeContestGame) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ResFetchCurrentRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error                                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	RankList []*ResFetchCurrentRankList_AccountRankData `protobuf:"bytes,2,rep,name=rank_list,json=rankList,proto3" json:"rank_list,omitempty"`
	RankRule uint32                                     `protobuf:"varint,3,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule,omitempty"`
}

func (x *ResFetchCurrentRankList) Reset() {
	*x = ResFetchCurrentRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCurrentRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCurrentRankList) ProtoMessage() {}

func (x *ResFetchCurrentRankList) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCurrentRankList.ProtoReflect.Descriptor instead.
func (*ResFetchCurrentRankList) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{47}
}

func (x *ResFetchCurrentRankList) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchCurrentRankList) GetRankList() []*ResFetchCurrentRankList_AccountRankData {
	if x != nil {
		return x.RankList
	}
	return nil
}

func (x *ResFetchCurrentRankList) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

type ResFetchContestLastModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modify *ResFetchContestLastModify_ContestLastModify `protobuf:"bytes,1,opt,name=modify,proto3" json:"modify,omitempty"`
}

func (x *ResFetchContestLastModify) Reset() {
	*x = ResFetchContestLastModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestLastModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestLastModify) ProtoMessage() {}

func (x *ResFetchContestLastModify) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestLastModify.ProtoReflect.Descriptor instead.
func (*ResFetchContestLastModify) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{48}
}

func (x *ResFetchContestLastModify) GetModify() *ResFetchContestLastModify_ContestLastModify {
	if x != nil {
		return x.Modify
	}
	return nil
}

type ResFetchContestObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error                              `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Observers []*ResFetchContestObserver_Observer `protobuf:"bytes,2,rep,name=observers,proto3" json:"observers,omitempty"`
}

func (x *ResFetchContestObserver) Reset() {
	*x = ResFetchContestObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestObserver) ProtoMessage() {}

func (x *ResFetchContestObserver) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestObserver.ProtoReflect.Descriptor instead.
func (*ResFetchContestObserver) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{49}
}

func (x *ResFetchContestObserver) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchContestObserver) GetObservers() []*ResFetchContestObserver_Observer {
	if x != nil {
		return x.Observers
	}
	return nil
}

type ReqAddContestObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Observers []*ReqAddContestObserver_Observer `protobuf:"bytes,1,rep,name=observers,proto3" json:"observers,omitempty"`
}

func (x *ReqAddContestObserver) Reset() {
	*x = ReqAddContestObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddContestObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddContestObserver) ProtoMessage() {}

func (x *ReqAddContestObserver) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddContestObserver.ProtoReflect.Descriptor instead.
func (*ReqAddContestObserver) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{50}
}

func (x *ReqAddContestObserver) GetObservers() []*ReqAddContestObserver_Observer {
	if x != nil {
		return x.Observers
	}
	return nil
}

type ResAddContestObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error                            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Success []*ResAddContestObserver_Observer `protobuf:"bytes,2,rep,name=success,proto3" json:"success,omitempty"`
}

func (x *ResAddContestObserver) Reset() {
	*x = ResAddContestObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAddContestObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAddContestObserver) ProtoMessage() {}

func (x *ResAddContestObserver) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAddContestObserver.ProtoReflect.Descriptor instead.
func (*ResAddContestObserver) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{51}
}

func (x *ResAddContestObserver) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAddContestObserver) GetSuccess() []*ResAddContestObserver_Observer {
	if x != nil {
		return x.Success
	}
	return nil
}

type ReqRemoveContestObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Observers []uint32 `protobuf:"varint,1,rep,packed,name=observers,proto3" json:"observers,omitempty"`
}

func (x *ReqRemoveContestObserver) Reset() {
	*x = ReqRemoveContestObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRemoveContestObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRemoveContestObserver) ProtoMessage() {}

func (x *ReqRemoveContestObserver) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRemoveContestObserver.ProtoReflect.Descriptor instead.
func (*ReqRemoveContestObserver) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{52}
}

func (x *ReqRemoveContestObserver) GetObservers() []uint32 {
	if x != nil {
		return x.Observers
	}
	return nil
}

type ResFetchContestChatHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ChatHistory [][]byte `protobuf:"bytes,2,rep,name=chat_history,json=chatHistory,proto3" json:"chat_history,omitempty"`
}

func (x *ResFetchContestChatHistory) Reset() {
	*x = ResFetchContestChatHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestChatHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestChatHistory) ProtoMessage() {}

func (x *ResFetchContestChatHistory) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestChatHistory.ProtoReflect.Descriptor instead.
func (*ResFetchContestChatHistory) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{53}
}

func (x *ResFetchContestChatHistory) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResFetchContestChatHistory) GetChatHistory() [][]byte {
	if x != nil {
		return x.ChatHistory
	}
	return nil
}

type NotifyContestMatchingPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Type      uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	AccountId uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *NotifyContestMatchingPlayer) Reset() {
	*x = NotifyContestMatchingPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyContestMatchingPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyContestMatchingPlayer) ProtoMessage() {}

func (x *NotifyContestMatchingPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyContestMatchingPlayer.ProtoReflect.Descriptor instead.
func (*NotifyContestMatchingPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{54}
}

func (x *NotifyContestMatchingPlayer) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyContestMatchingPlayer) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyContestMatchingPlayer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyContestMatchingPlayer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type NotifyContestMatchingPlayerLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Type      uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	AccountId uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ManagerId uint32 `protobuf:"varint,4,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
}

func (x *NotifyContestMatchingPlayerLock) Reset() {
	*x = NotifyContestMatchingPlayerLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyContestMatchingPlayerLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyContestMatchingPlayerLock) ProtoMessage() {}

func (x *NotifyContestMatchingPlayerLock) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyContestMatchingPlayerLock.ProtoReflect.Descriptor instead.
func (*NotifyContestMatchingPlayerLock) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{55}
}

func (x *NotifyContestMatchingPlayerLock) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyContestMatchingPlayerLock) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyContestMatchingPlayerLock) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyContestMatchingPlayerLock) GetManagerId() uint32 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

type NotifyContestGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32           `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	GameInfo *ContestGameInfo `protobuf:"bytes,2,opt,name=game_info,json=gameInfo,proto3" json:"game_info,omitempty"`
}

func (x *NotifyContestGameStart) Reset() {
	*x = NotifyContestGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyContestGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyContestGameStart) ProtoMessage() {}

func (x *NotifyContestGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyContestGameStart.ProtoReflect.Descriptor instead.
func (*NotifyContestGameStart) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{56}
}

func (x *NotifyContestGameStart) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyContestGameStart) GetGameInfo() *ContestGameInfo {
	if x != nil {
		return x.GameInfo
	}
	return nil
}

type NotifyContestGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	GameUuid string `protobuf:"bytes,2,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
}

func (x *NotifyContestGameEnd) Reset() {
	*x = NotifyContestGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyContestGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyContestGameEnd) ProtoMessage() {}

func (x *NotifyContestGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyContestGameEnd.ProtoReflect.Descriptor instead.
func (*NotifyContestGameEnd) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{57}
}

func (x *NotifyContestGameEnd) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyContestGameEnd) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

type NotifyContestNoticeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	NoticeType uint32 `protobuf:"varint,2,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NotifyContestNoticeUpdate) Reset() {
	*x = NotifyContestNoticeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyContestNoticeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyContestNoticeUpdate) ProtoMessage() {}

func (x *NotifyContestNoticeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyContestNoticeUpdate.ProtoReflect.Descriptor instead.
func (*NotifyContestNoticeUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{58}
}

func (x *NotifyContestNoticeUpdate) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyContestNoticeUpdate) GetNoticeType() uint32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *NotifyContestNoticeUpdate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NotifyContestManagerKick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason uint32 `protobuf:"varint,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *NotifyContestManagerKick) Reset() {
	*x = NotifyContestManagerKick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyContestManagerKick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyContestManagerKick) ProtoMessage() {}

func (x *NotifyContestManagerKick) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyContestManagerKick.ProtoReflect.Descriptor instead.
func (*NotifyContestManagerKick) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{59}
}

func (x *NotifyContestManagerKick) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	U32Params []uint32 `protobuf:"varint,2,rep,packed,name=u32_params,json=u32Params,proto3" json:"u32_params,omitempty"`
	StrParams []string `protobuf:"bytes,3,rep,name=str_params,json=strParams,proto3" json:"str_params,omitempty"`
	JsonParam string   `protobuf:"bytes,4,opt,name=json_param,json=jsonParam,proto3" json:"json_param,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{60}
}

func (x *Error) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetU32Params() []uint32 {
	if x != nil {
		return x.U32Params
	}
	return nil
}

func (x *Error) GetStrParams() []string {
	if x != nil {
		return x.StrParams
	}
	return nil
}

func (x *Error) GetJsonParam() string {
	if x != nil {
		return x.JsonParam
	}
	return ""
}

type Wrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Wrapper) Reset() {
	*x = Wrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wrapper) ProtoMessage() {}

func (x *Wrapper) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wrapper.ProtoReflect.Descriptor instead.
func (*Wrapper) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{61}
}

func (x *Wrapper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Wrapper) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type NetworkEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Family  string `protobuf:"bytes,1,opt,name=family,proto3" json:"family,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port    uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *NetworkEndpoint) Reset() {
	*x = NetworkEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpoint) ProtoMessage() {}

func (x *NetworkEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEndpoint.ProtoReflect.Descriptor instead.
func (*NetworkEndpoint) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{62}
}

func (x *NetworkEndpoint) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *NetworkEndpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NetworkEndpoint) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ReqCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqCommon) Reset() {
	*x = ReqCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCommon) ProtoMessage() {}

func (x *ReqCommon) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCommon.ProtoReflect.Descriptor instead.
func (*ReqCommon) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{63}
}

type ResCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResCommon) Reset() {
	*x = ResCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommon) ProtoMessage() {}

func (x *ResCommon) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommon.ProtoReflect.Descriptor instead.
func (*ResCommon) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{64}
}

func (x *ResCommon) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ResAccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *Error         `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Update *AccountUpdate `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *ResAccountUpdate) Reset() {
	*x = ResAccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountUpdate) ProtoMessage() {}

func (x *ResAccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountUpdate.ProtoReflect.Descriptor instead.
func (*ResAccountUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{65}
}

func (x *ResAccountUpdate) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResAccountUpdate) GetUpdate() *AccountUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type AntiAddiction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineDuration uint32 `protobuf:"varint,1,opt,name=online_duration,json=onlineDuration,proto3" json:"online_duration,omitempty"`
}

func (x *AntiAddiction) Reset() {
	*x = AntiAddiction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiAddiction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiAddiction) ProtoMessage() {}

func (x *AntiAddiction) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiAddiction.ProtoReflect.Descriptor instead.
func (*AntiAddiction) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{66}
}

func (x *AntiAddiction) GetOnlineDuration() uint32 {
	if x != nil {
		return x.OnlineDuration
	}
	return 0
}

type AccountMahjongStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalPositionCounts []uint32                                 `protobuf:"varint,1,rep,packed,name=final_position_counts,json=finalPositionCounts,proto3" json:"final_position_counts,omitempty"`
	RecentRound         *AccountMahjongStatistic_RoundSummary    `protobuf:"bytes,2,opt,name=recent_round,json=recentRound,proto3" json:"recent_round,omitempty"`
	RecentHu            *AccountMahjongStatistic_HuSummary       `protobuf:"bytes,3,opt,name=recent_hu,json=recentHu,proto3" json:"recent_hu,omitempty"`
	HighestHu           *AccountMahjongStatistic_HighestHuRecord `protobuf:"bytes,4,opt,name=highest_hu,json=highestHu,proto3" json:"highest_hu,omitempty"`
	Recent_20HuSummary  *AccountMahjongStatistic_Liqi20Summary   `protobuf:"bytes,6,opt,name=recent_20_hu_summary,json=recent20HuSummary,proto3" json:"recent_20_hu_summary,omitempty"`
	Recent_10HuSummary  *AccountMahjongStatistic_LiQi10Summary   `protobuf:"bytes,7,opt,name=recent_10_hu_summary,json=recent10HuSummary,proto3" json:"recent_10_hu_summary,omitempty"`
	Recent_10GameResult []*AccountMahjongStatistic_GameResult    `protobuf:"bytes,8,rep,name=recent_10_game_result,json=recent10GameResult,proto3" json:"recent_10_game_result,omitempty"`
}

func (x *AccountMahjongStatistic) Reset() {
	*x = AccountMahjongStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic) ProtoMessage() {}

func (x *AccountMahjongStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67}
}

func (x *AccountMahjongStatistic) GetFinalPositionCounts() []uint32 {
	if x != nil {
		return x.FinalPositionCounts
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecentRound() *AccountMahjongStatistic_RoundSummary {
	if x != nil {
		return x.RecentRound
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecentHu() *AccountMahjongStatistic_HuSummary {
	if x != nil {
		return x.RecentHu
	}
	return nil
}

func (x *AccountMahjongStatistic) GetHighestHu() *AccountMahjongStatistic_HighestHuRecord {
	if x != nil {
		return x.HighestHu
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecent_20HuSummary() *AccountMahjongStatistic_Liqi20Summary {
	if x != nil {
		return x.Recent_20HuSummary
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecent_10HuSummary() *AccountMahjongStatistic_LiQi10Summary {
	if x != nil {
		return x.Recent_10HuSummary
	}
	return nil
}

func (x *AccountMahjongStatistic) GetRecent_10GameResult() []*AccountMahjongStatistic_GameResult {
	if x != nil {
		return x.Recent_10GameResult
	}
	return nil
}

type AccountStatisticData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MahjongCategory uint32                   `protobuf:"varint,1,opt,name=mahjong_category,json=mahjongCategory,proto3" json:"mahjong_category,omitempty"`
	GameCategory    uint32                   `protobuf:"varint,2,opt,name=game_category,json=gameCategory,proto3" json:"game_category,omitempty"`
	Statistic       *AccountMahjongStatistic `protobuf:"bytes,3,opt,name=statistic,proto3" json:"statistic,omitempty"`
	GameType        uint32                   `protobuf:"varint,4,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
}

func (x *AccountStatisticData) Reset() {
	*x = AccountStatisticData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticData) ProtoMessage() {}

func (x *AccountStatisticData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticData.ProtoReflect.Descriptor instead.
func (*AccountStatisticData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{68}
}

func (x *AccountStatisticData) GetMahjongCategory() uint32 {
	if x != nil {
		return x.MahjongCategory
	}
	return 0
}

func (x *AccountStatisticData) GetGameCategory() uint32 {
	if x != nil {
		return x.GameCategory
	}
	return 0
}

func (x *AccountStatisticData) GetStatistic() *AccountMahjongStatistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

func (x *AccountStatisticData) GetGameType() uint32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

type AccountLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score uint32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *AccountLevel) Reset() {
	*x = AccountLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLevel) ProtoMessage() {}

func (x *AccountLevel) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLevel.ProtoReflect.Descriptor instead.
func (*AccountLevel) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{69}
}

func (x *AccountLevel) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountLevel) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type ViewSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot   uint32 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	ItemId uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *ViewSlot) Reset() {
	*x = ViewSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSlot) ProtoMessage() {}

func (x *ViewSlot) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSlot.ProtoReflect.Descriptor instead.
func (*ViewSlot) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{70}
}

func (x *ViewSlot) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ViewSlot) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId          uint32                        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname           string                        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	LoginTime          uint32                        `protobuf:"varint,3,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LogoutTime         uint32                        `protobuf:"varint,4,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time,omitempty"`
	RoomId             uint32                        `protobuf:"varint,5,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	AntiAddiction      *AntiAddiction                `protobuf:"bytes,6,opt,name=anti_addiction,json=antiAddiction,proto3" json:"anti_addiction,omitempty"`
	Title              uint32                        `protobuf:"varint,7,opt,name=title,proto3" json:"title,omitempty"`
	Signature          string                        `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	Email              string                        `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerify        uint32                        `protobuf:"varint,10,opt,name=email_verify,json=emailVerify,proto3" json:"email_verify,omitempty"`
	Gold               uint32                        `protobuf:"varint,11,opt,name=gold,proto3" json:"gold,omitempty"`
	Diamond            uint32                        `protobuf:"varint,12,opt,name=diamond,proto3" json:"diamond,omitempty"`
	AvatarId           uint32                        `protobuf:"varint,13,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Vip                uint32                        `protobuf:"varint,14,opt,name=vip,proto3" json:"vip,omitempty"`
	Birthday           int32                         `protobuf:"varint,15,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Phone              string                        `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone,omitempty"`
	PhoneVerify        uint32                        `protobuf:"varint,17,opt,name=phone_verify,json=phoneVerify,proto3" json:"phone_verify,omitempty"`
	PlatformDiamond    []*Account_PlatformDiamond    `protobuf:"bytes,18,rep,name=platform_diamond,json=platformDiamond,proto3" json:"platform_diamond,omitempty"`
	Level              *AccountLevel                 `protobuf:"bytes,21,opt,name=level,proto3" json:"level,omitempty"`
	Level3             *AccountLevel                 `protobuf:"bytes,22,opt,name=level3,proto3" json:"level3,omitempty"`
	AvatarFrame        uint32                        `protobuf:"varint,23,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	SkinTicket         uint32                        `protobuf:"varint,24,opt,name=skin_ticket,json=skinTicket,proto3" json:"skin_ticket,omitempty"`
	PlatformSkinTicket []*Account_PlatformSkinTicket `protobuf:"bytes,25,rep,name=platform_skin_ticket,json=platformSkinTicket,proto3" json:"platform_skin_ticket,omitempty"`
	Verified           uint32                        `protobuf:"varint,26,opt,name=verified,proto3" json:"verified,omitempty"`
	ChallengeLevels    []*Account_ChallengeLevel     `protobuf:"bytes,27,rep,name=challenge_levels,json=challengeLevels,proto3" json:"challenge_levels,omitempty"`
	AchievementCount   []*Account_AchievementCount   `protobuf:"bytes,28,rep,name=achievement_count,json=achievementCount,proto3" json:"achievement_count,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{71}
}

func (x *Account) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Account) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Account) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *Account) GetLogoutTime() uint32 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *Account) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Account) GetAntiAddiction() *AntiAddiction {
	if x != nil {
		return x.AntiAddiction
	}
	return nil
}

func (x *Account) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *Account) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetEmailVerify() uint32 {
	if x != nil {
		return x.EmailVerify
	}
	return 0
}

func (x *Account) GetGold() uint32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *Account) GetDiamond() uint32 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *Account) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *Account) GetVip() uint32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *Account) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *Account) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Account) GetPhoneVerify() uint32 {
	if x != nil {
		return x.PhoneVerify
	}
	return 0
}

func (x *Account) GetPlatformDiamond() []*Account_PlatformDiamond {
	if x != nil {
		return x.PlatformDiamond
	}
	return nil
}

func (x *Account) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *Account) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *Account) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *Account) GetSkinTicket() uint32 {
	if x != nil {
		return x.SkinTicket
	}
	return 0
}

func (x *Account) GetPlatformSkinTicket() []*Account_PlatformSkinTicket {
	if x != nil {
		return x.PlatformSkinTicket
	}
	return nil
}

func (x *Account) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *Account) GetChallengeLevels() []*Account_ChallengeLevel {
	if x != nil {
		return x.ChallengeLevels
	}
	return nil
}

func (x *Account) GetAchievementCount() []*Account_AchievementCount {
	if x != nil {
		return x.AchievementCount
	}
	return nil
}

type AccountOwnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockCharacters []uint32 `protobuf:"varint,1,rep,packed,name=unlock_characters,json=unlockCharacters,proto3" json:"unlock_characters,omitempty"`
}

func (x *AccountOwnerData) Reset() {
	*x = AccountOwnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountOwnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountOwnerData) ProtoMessage() {}

func (x *AccountOwnerData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountOwnerData.ProtoReflect.Descriptor instead.
func (*AccountOwnerData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{72}
}

func (x *AccountOwnerData) GetUnlockCharacters() []uint32 {
	if x != nil {
		return x.UnlockCharacters
	}
	return nil
}

type AccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numerical          []*AccountUpdate_NumericalUpdate      `protobuf:"bytes,1,rep,name=numerical,proto3" json:"numerical,omitempty"`
	Character          *AccountUpdate_CharacterUpdate        `protobuf:"bytes,2,opt,name=character,proto3" json:"character,omitempty"`
	Bag                *BagUpdate                            `protobuf:"bytes,3,opt,name=bag,proto3" json:"bag,omitempty"`
	Achievement        *AccountUpdate_AchievementUpdate      `protobuf:"bytes,4,opt,name=achievement,proto3" json:"achievement,omitempty"`
	Shilian            *AccountShiLian                       `protobuf:"bytes,5,opt,name=shilian,proto3" json:"shilian,omitempty"`
	DailyTask          *AccountUpdate_DailyTaskUpdate        `protobuf:"bytes,6,opt,name=daily_task,json=dailyTask,proto3" json:"daily_task,omitempty"`
	Title              *AccountUpdate_TitleUpdate            `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	NewRechargedList   []uint32                              `protobuf:"varint,8,rep,packed,name=new_recharged_list,json=newRechargedList,proto3" json:"new_recharged_list,omitempty"`
	ActivityTask       *AccountUpdate_TaskUpdate             `protobuf:"bytes,9,opt,name=activity_task,json=activityTask,proto3" json:"activity_task,omitempty"`
	ActivityFlipTask   *AccountUpdate_TaskUpdate             `protobuf:"bytes,10,opt,name=activity_flip_task,json=activityFlipTask,proto3" json:"activity_flip_task,omitempty"`
	ActivityPeriodTask *AccountUpdate_TaskUpdate             `protobuf:"bytes,11,opt,name=activity_period_task,json=activityPeriodTask,proto3" json:"activity_period_task,omitempty"`
	ActivityRandomTask *AccountUpdate_TaskUpdate             `protobuf:"bytes,12,opt,name=activity_random_task,json=activityRandomTask,proto3" json:"activity_random_task,omitempty"`
	Challenge          *AccountUpdate_AccountChallengeUpdate `protobuf:"bytes,13,opt,name=challenge,proto3" json:"challenge,omitempty"`
	AbMatch            *AccountUpdate_AccountABMatchUpdate   `protobuf:"bytes,14,opt,name=ab_match,json=abMatch,proto3" json:"ab_match,omitempty"`
}

func (x *AccountUpdate) Reset() {
	*x = AccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate) ProtoMessage() {}

func (x *AccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73}
}

func (x *AccountUpdate) GetNumerical() []*AccountUpdate_NumericalUpdate {
	if x != nil {
		return x.Numerical
	}
	return nil
}

func (x *AccountUpdate) GetCharacter() *AccountUpdate_CharacterUpdate {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *AccountUpdate) GetBag() *BagUpdate {
	if x != nil {
		return x.Bag
	}
	return nil
}

func (x *AccountUpdate) GetAchievement() *AccountUpdate_AchievementUpdate {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *AccountUpdate) GetShilian() *AccountShiLian {
	if x != nil {
		return x.Shilian
	}
	return nil
}

func (x *AccountUpdate) GetDailyTask() *AccountUpdate_DailyTaskUpdate {
	if x != nil {
		return x.DailyTask
	}
	return nil
}

func (x *AccountUpdate) GetTitle() *AccountUpdate_TitleUpdate {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *AccountUpdate) GetNewRechargedList() []uint32 {
	if x != nil {
		return x.NewRechargedList
	}
	return nil
}

func (x *AccountUpdate) GetActivityTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityTask
	}
	return nil
}

func (x *AccountUpdate) GetActivityFlipTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityFlipTask
	}
	return nil
}

func (x *AccountUpdate) GetActivityPeriodTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityPeriodTask
	}
	return nil
}

func (x *AccountUpdate) GetActivityRandomTask() *AccountUpdate_TaskUpdate {
	if x != nil {
		return x.ActivityRandomTask
	}
	return nil
}

func (x *AccountUpdate) GetChallenge() *AccountUpdate_AccountChallengeUpdate {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *AccountUpdate) GetAbMatch() *AccountUpdate_AccountABMatchUpdate {
	if x != nil {
		return x.AbMatch
	}
	return nil
}

type GameMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ModeId     uint32 `protobuf:"varint,2,opt,name=mode_id,json=modeId,proto3" json:"mode_id,omitempty"`
	ContestUid uint32 `protobuf:"varint,3,opt,name=contest_uid,json=contestUid,proto3" json:"contest_uid,omitempty"`
}

func (x *GameMetaData) Reset() {
	*x = GameMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMetaData) ProtoMessage() {}

func (x *GameMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMetaData.ProtoReflect.Descriptor instead.
func (*GameMetaData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{74}
}

func (x *GameMetaData) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameMetaData) GetModeId() uint32 {
	if x != nil {
		return x.ModeId
	}
	return 0
}

func (x *GameMetaData) GetContestUid() uint32 {
	if x != nil {
		return x.ContestUid
	}
	return 0
}

type AccountPlayingGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUuid string        `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
	Category uint32        `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`
	Meta     *GameMetaData `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *AccountPlayingGame) Reset() {
	*x = AccountPlayingGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPlayingGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPlayingGame) ProtoMessage() {}

func (x *AccountPlayingGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPlayingGame.ProtoReflect.Descriptor instead.
func (*AccountPlayingGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{75}
}

func (x *AccountPlayingGame) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *AccountPlayingGame) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AccountPlayingGame) GetMeta() *GameMetaData {
	if x != nil {
		return x.Meta
	}
	return nil
}

type AccountCacheView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheVersion uint32              `protobuf:"varint,1,opt,name=cache_version,json=cacheVersion,proto3" json:"cache_version,omitempty"`
	AccountId    uint32              `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname     string              `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	LoginTime    uint32              `protobuf:"varint,4,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LogoutTime   uint32              `protobuf:"varint,5,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time,omitempty"`
	IsOnline     bool                `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	RoomId       uint32              `protobuf:"varint,7,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Title        uint32              `protobuf:"varint,8,opt,name=title,proto3" json:"title,omitempty"`
	AvatarId     uint32              `protobuf:"varint,9,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Vip          uint32              `protobuf:"varint,10,opt,name=vip,proto3" json:"vip,omitempty"`
	Level        *AccountLevel       `protobuf:"bytes,11,opt,name=level,proto3" json:"level,omitempty"`
	PlayingGame  *AccountPlayingGame `protobuf:"bytes,12,opt,name=playing_game,json=playingGame,proto3" json:"playing_game,omitempty"`
	Level3       *AccountLevel       `protobuf:"bytes,13,opt,name=level3,proto3" json:"level3,omitempty"`
	AvatarFrame  uint32              `protobuf:"varint,14,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	Verified     uint32              `protobuf:"varint,15,opt,name=verified,proto3" json:"verified,omitempty"`
	BanDeadline  uint32              `protobuf:"varint,16,opt,name=ban_deadline,json=banDeadline,proto3" json:"ban_deadline,omitempty"`
	CommentBan   uint32              `protobuf:"varint,17,opt,name=comment_ban,json=commentBan,proto3" json:"comment_ban,omitempty"`
	BanState     uint32              `protobuf:"varint,18,opt,name=ban_state,json=banState,proto3" json:"ban_state,omitempty"`
}

func (x *AccountCacheView) Reset() {
	*x = AccountCacheView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCacheView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCacheView) ProtoMessage() {}

func (x *AccountCacheView) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCacheView.ProtoReflect.Descriptor instead.
func (*AccountCacheView) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{76}
}

func (x *AccountCacheView) GetCacheVersion() uint32 {
	if x != nil {
		return x.CacheVersion
	}
	return 0
}

func (x *AccountCacheView) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountCacheView) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AccountCacheView) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *AccountCacheView) GetLogoutTime() uint32 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *AccountCacheView) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *AccountCacheView) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *AccountCacheView) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *AccountCacheView) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AccountCacheView) GetVip() uint32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *AccountCacheView) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *AccountCacheView) GetPlayingGame() *AccountPlayingGame {
	if x != nil {
		return x.PlayingGame
	}
	return nil
}

func (x *AccountCacheView) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *AccountCacheView) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *AccountCacheView) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *AccountCacheView) GetBanDeadline() uint32 {
	if x != nil {
		return x.BanDeadline
	}
	return 0
}

func (x *AccountCacheView) GetCommentBan() uint32 {
	if x != nil {
		return x.CommentBan
	}
	return 0
}

func (x *AccountCacheView) GetBanState() uint32 {
	if x != nil {
		return x.BanState
	}
	return 0
}

type PlayerBaseView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AvatarId    uint32        `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Title       uint32        `protobuf:"varint,3,opt,name=title,proto3" json:"title,omitempty"`
	Nickname    string        `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level       *AccountLevel `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	Level3      *AccountLevel `protobuf:"bytes,6,opt,name=level3,proto3" json:"level3,omitempty"`
	AvatarFrame uint32        `protobuf:"varint,7,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	Verified    uint32        `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
	IsBanned    uint32        `protobuf:"varint,9,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
}

func (x *PlayerBaseView) Reset() {
	*x = PlayerBaseView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBaseView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBaseView) ProtoMessage() {}

func (x *PlayerBaseView) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBaseView.ProtoReflect.Descriptor instead.
func (*PlayerBaseView) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{77}
}

func (x *PlayerBaseView) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PlayerBaseView) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlayerBaseView) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *PlayerBaseView) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerBaseView) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *PlayerBaseView) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *PlayerBaseView) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PlayerBaseView) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *PlayerBaseView) GetIsBanned() uint32 {
	if x != nil {
		return x.IsBanned
	}
	return 0
}

type PlayerGameView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AvatarId    uint32        `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Title       uint32        `protobuf:"varint,3,opt,name=title,proto3" json:"title,omitempty"`
	Nickname    string        `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level       *AccountLevel `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	Character   *Character    `protobuf:"bytes,6,opt,name=character,proto3" json:"character,omitempty"`
	Level3      *AccountLevel `protobuf:"bytes,7,opt,name=level3,proto3" json:"level3,omitempty"`
	AvatarFrame uint32        `protobuf:"varint,8,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	Verified    uint32        `protobuf:"varint,9,opt,name=verified,proto3" json:"verified,omitempty"`
	Views       []*ViewSlot   `protobuf:"bytes,10,rep,name=views,proto3" json:"views,omitempty"`
}

func (x *PlayerGameView) Reset() {
	*x = PlayerGameView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameView) ProtoMessage() {}

func (x *PlayerGameView) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameView.ProtoReflect.Descriptor instead.
func (*PlayerGameView) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{78}
}

func (x *PlayerGameView) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PlayerGameView) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlayerGameView) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *PlayerGameView) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerGameView) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *PlayerGameView) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *PlayerGameView) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *PlayerGameView) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PlayerGameView) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *PlayerGameView) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

type GameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiSwitch uint32 `protobuf:"varint,1,opt,name=emoji_switch,json=emojiSwitch,proto3" json:"emoji_switch,omitempty"`
}

func (x *GameSetting) Reset() {
	*x = GameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSetting) ProtoMessage() {}

func (x *GameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSetting.ProtoReflect.Descriptor instead.
func (*GameSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{79}
}

func (x *GameSetting) GetEmojiSwitch() uint32 {
	if x != nil {
		return x.EmojiSwitch
	}
	return 0
}

type GameMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode               uint32                     `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Ai                 bool                       `protobuf:"varint,4,opt,name=ai,proto3" json:"ai,omitempty"`
	Extendinfo         string                     `protobuf:"bytes,5,opt,name=extendinfo,proto3" json:"extendinfo,omitempty"`
	DetailRule         *GameDetailRule            `protobuf:"bytes,6,opt,name=detail_rule,json=detailRule,proto3" json:"detail_rule,omitempty"`
	TestingEnvironment *GameTestingEnvironmentSet `protobuf:"bytes,7,opt,name=testing_environment,json=testingEnvironment,proto3" json:"testing_environment,omitempty"`
	GameSetting        *GameSetting               `protobuf:"bytes,8,opt,name=game_setting,json=gameSetting,proto3" json:"game_setting,omitempty"`
}

func (x *GameMode) Reset() {
	*x = GameMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMode) ProtoMessage() {}

func (x *GameMode) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMode.ProtoReflect.Descriptor instead.
func (*GameMode) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{80}
}

func (x *GameMode) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *GameMode) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *GameMode) GetExtendinfo() string {
	if x != nil {
		return x.Extendinfo
	}
	return ""
}

func (x *GameMode) GetDetailRule() *GameDetailRule {
	if x != nil {
		return x.DetailRule
	}
	return nil
}

func (x *GameMode) GetTestingEnvironment() *GameTestingEnvironmentSet {
	if x != nil {
		return x.TestingEnvironment
	}
	return nil
}

func (x *GameMode) GetGameSetting() *GameSetting {
	if x != nil {
		return x.GameSetting
	}
	return nil
}

type GameTestingEnvironmentSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paixing   uint32 `protobuf:"varint,1,opt,name=paixing,proto3" json:"paixing,omitempty"`
	LeftCount uint32 `protobuf:"varint,2,opt,name=left_count,json=leftCount,proto3" json:"left_count,omitempty"`
}

func (x *GameTestingEnvironmentSet) Reset() {
	*x = GameTestingEnvironmentSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameTestingEnvironmentSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameTestingEnvironmentSet) ProtoMessage() {}

func (x *GameTestingEnvironmentSet) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameTestingEnvironmentSet.ProtoReflect.Descriptor instead.
func (*GameTestingEnvironmentSet) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{81}
}

func (x *GameTestingEnvironmentSet) GetPaixing() uint32 {
	if x != nil {
		return x.Paixing
	}
	return 0
}

func (x *GameTestingEnvironmentSet) GetLeftCount() uint32 {
	if x != nil {
		return x.LeftCount
	}
	return 0
}

type GameDetailRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFixed               uint32 `protobuf:"varint,1,opt,name=time_fixed,json=timeFixed,proto3" json:"time_fixed,omitempty"`
	TimeAdd                 uint32 `protobuf:"varint,2,opt,name=time_add,json=timeAdd,proto3" json:"time_add,omitempty"`
	DoraCount               uint32 `protobuf:"varint,3,opt,name=dora_count,json=doraCount,proto3" json:"dora_count,omitempty"`
	Shiduan                 uint32 `protobuf:"varint,4,opt,name=shiduan,proto3" json:"shiduan,omitempty"`
	InitPoint               uint32 `protobuf:"varint,5,opt,name=init_point,json=initPoint,proto3" json:"init_point,omitempty"`
	Fandian                 uint32 `protobuf:"varint,6,opt,name=fandian,proto3" json:"fandian,omitempty"`
	CanJifei                bool   `protobuf:"varint,7,opt,name=can_jifei,json=canJifei,proto3" json:"can_jifei,omitempty"`
	TianbianValue           uint32 `protobuf:"varint,8,opt,name=tianbian_value,json=tianbianValue,proto3" json:"tianbian_value,omitempty"`
	LiqibangValue           uint32 `protobuf:"varint,9,opt,name=liqibang_value,json=liqibangValue,proto3" json:"liqibang_value,omitempty"`
	ChangbangValue          uint32 `protobuf:"varint,10,opt,name=changbang_value,json=changbangValue,proto3" json:"changbang_value,omitempty"`
	NotingFafu_1            uint32 `protobuf:"varint,11,opt,name=noting_fafu_1,json=notingFafu1,proto3" json:"noting_fafu_1,omitempty"`
	NotingFafu_2            uint32 `protobuf:"varint,12,opt,name=noting_fafu_2,json=notingFafu2,proto3" json:"noting_fafu_2,omitempty"`
	NotingFafu_3            uint32 `protobuf:"varint,13,opt,name=noting_fafu_3,json=notingFafu3,proto3" json:"noting_fafu_3,omitempty"`
	HaveLiujumanguan        bool   `protobuf:"varint,14,opt,name=have_liujumanguan,json=haveLiujumanguan,proto3" json:"have_liujumanguan,omitempty"`
	HaveQieshangmanguan     bool   `protobuf:"varint,15,opt,name=have_qieshangmanguan,json=haveQieshangmanguan,proto3" json:"have_qieshangmanguan,omitempty"`
	HaveBiaoDora            bool   `protobuf:"varint,16,opt,name=have_biao_dora,json=haveBiaoDora,proto3" json:"have_biao_dora,omitempty"`
	HaveGangBiaoDora        bool   `protobuf:"varint,17,opt,name=have_gang_biao_dora,json=haveGangBiaoDora,proto3" json:"have_gang_biao_dora,omitempty"`
	MingDoraImmediatelyOpen bool   `protobuf:"varint,18,opt,name=ming_dora_immediately_open,json=mingDoraImmediatelyOpen,proto3" json:"ming_dora_immediately_open,omitempty"`
	HaveLiDora              bool   `protobuf:"varint,19,opt,name=have_li_dora,json=haveLiDora,proto3" json:"have_li_dora,omitempty"`
	HaveGangLiDora          bool   `protobuf:"varint,20,opt,name=have_gang_li_dora,json=haveGangLiDora,proto3" json:"have_gang_li_dora,omitempty"`
	HaveSifenglianda        bool   `protobuf:"varint,21,opt,name=have_sifenglianda,json=haveSifenglianda,proto3" json:"have_sifenglianda,omitempty"`
	HaveSigangsanle         bool   `protobuf:"varint,22,opt,name=have_sigangsanle,json=haveSigangsanle,proto3" json:"have_sigangsanle,omitempty"`
	HaveSijializhi          bool   `protobuf:"varint,23,opt,name=have_sijializhi,json=haveSijializhi,proto3" json:"have_sijializhi,omitempty"`
	HaveJiuzhongjiupai      bool   `protobuf:"varint,24,opt,name=have_jiuzhongjiupai,json=haveJiuzhongjiupai,proto3" json:"have_jiuzhongjiupai,omitempty"`
	HaveSanjiahele          bool   `protobuf:"varint,25,opt,name=have_sanjiahele,json=haveSanjiahele,proto3" json:"have_sanjiahele,omitempty"`
	HaveToutiao             bool   `protobuf:"varint,26,opt,name=have_toutiao,json=haveToutiao,proto3" json:"have_toutiao,omitempty"`
	HaveHelelianzhuang      bool   `protobuf:"varint,27,opt,name=have_helelianzhuang,json=haveHelelianzhuang,proto3" json:"have_helelianzhuang,omitempty"`
	HaveHelezhongju         bool   `protobuf:"varint,28,opt,name=have_helezhongju,json=haveHelezhongju,proto3" json:"have_helezhongju,omitempty"`
	HaveTingpailianzhuang   bool   `protobuf:"varint,29,opt,name=have_tingpailianzhuang,json=haveTingpailianzhuang,proto3" json:"have_tingpailianzhuang,omitempty"`
	HaveTingpaizhongju      bool   `protobuf:"varint,30,opt,name=have_tingpaizhongju,json=haveTingpaizhongju,proto3" json:"have_tingpaizhongju,omitempty"`
	HaveYifa                bool   `protobuf:"varint,31,opt,name=have_yifa,json=haveYifa,proto3" json:"have_yifa,omitempty"`
	HaveNanruxiru           bool   `protobuf:"varint,32,opt,name=have_nanruxiru,json=haveNanruxiru,proto3" json:"have_nanruxiru,omitempty"`
	Jingsuanyuandian        uint32 `protobuf:"varint,33,opt,name=jingsuanyuandian,proto3" json:"jingsuanyuandian,omitempty"`
	Shunweima_2             int32  `protobuf:"varint,34,opt,name=shunweima_2,json=shunweima2,proto3" json:"shunweima_2,omitempty"`
	Shunweima_3             int32  `protobuf:"varint,35,opt,name=shunweima_3,json=shunweima3,proto3" json:"shunweima_3,omitempty"`
	Shunweima_4             int32  `protobuf:"varint,36,opt,name=shunweima_4,json=shunweima4,proto3" json:"shunweima_4,omitempty"`
	Bianjietishi            bool   `protobuf:"varint,37,opt,name=bianjietishi,proto3" json:"bianjietishi,omitempty"`
	AiLevel                 uint32 `protobuf:"varint,38,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level,omitempty"`
	HaveZimosun             bool   `protobuf:"varint,39,opt,name=have_zimosun,json=haveZimosun,proto3" json:"have_zimosun,omitempty"`
	DisableMultiYukaman     bool   `protobuf:"varint,40,opt,name=disable_multi_yukaman,json=disableMultiYukaman,proto3" json:"disable_multi_yukaman,omitempty"`
	Fanfu                   uint32 `protobuf:"varint,41,opt,name=fanfu,proto3" json:"fanfu,omitempty"`
	GuyiMode                uint32 `protobuf:"varint,42,opt,name=guyi_mode,json=guyiMode,proto3" json:"guyi_mode,omitempty"`
	Dora3Mode               uint32 `protobuf:"varint,43,opt,name=dora3_mode,json=dora3Mode,proto3" json:"dora3_mode,omitempty"`
	BeginOpenMode           uint32 `protobuf:"varint,44,opt,name=begin_open_mode,json=beginOpenMode,proto3" json:"begin_open_mode,omitempty"`
	JiuchaoMode             uint32 `protobuf:"varint,45,opt,name=jiuchao_mode,json=jiuchaoMode,proto3" json:"jiuchao_mode,omitempty"`
	MuyuMode                uint32 `protobuf:"varint,46,opt,name=muyu_mode,json=muyuMode,proto3" json:"muyu_mode,omitempty"`
	OpenHand                uint32 `protobuf:"varint,47,opt,name=open_hand,json=openHand,proto3" json:"open_hand,omitempty"`
	DisableLeijiyiman       bool   `protobuf:"varint,60,opt,name=disable_leijiyiman,json=disableLeijiyiman,proto3" json:"disable_leijiyiman,omitempty"`
}

func (x *GameDetailRule) Reset() {
	*x = GameDetailRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailRule) ProtoMessage() {}

func (x *GameDetailRule) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailRule.ProtoReflect.Descriptor instead.
func (*GameDetailRule) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{82}
}

func (x *GameDetailRule) GetTimeFixed() uint32 {
	if x != nil {
		return x.TimeFixed
	}
	return 0
}

func (x *GameDetailRule) GetTimeAdd() uint32 {
	if x != nil {
		return x.TimeAdd
	}
	return 0
}

func (x *GameDetailRule) GetDoraCount() uint32 {
	if x != nil {
		return x.DoraCount
	}
	return 0
}

func (x *GameDetailRule) GetShiduan() uint32 {
	if x != nil {
		return x.Shiduan
	}
	return 0
}

func (x *GameDetailRule) GetInitPoint() uint32 {
	if x != nil {
		return x.InitPoint
	}
	return 0
}

func (x *GameDetailRule) GetFandian() uint32 {
	if x != nil {
		return x.Fandian
	}
	return 0
}

func (x *GameDetailRule) GetCanJifei() bool {
	if x != nil {
		return x.CanJifei
	}
	return false
}

func (x *GameDetailRule) GetTianbianValue() uint32 {
	if x != nil {
		return x.TianbianValue
	}
	return 0
}

func (x *GameDetailRule) GetLiqibangValue() uint32 {
	if x != nil {
		return x.LiqibangValue
	}
	return 0
}

func (x *GameDetailRule) GetChangbangValue() uint32 {
	if x != nil {
		return x.ChangbangValue
	}
	return 0
}

func (x *GameDetailRule) GetNotingFafu_1() uint32 {
	if x != nil {
		return x.NotingFafu_1
	}
	return 0
}

func (x *GameDetailRule) GetNotingFafu_2() uint32 {
	if x != nil {
		return x.NotingFafu_2
	}
	return 0
}

func (x *GameDetailRule) GetNotingFafu_3() uint32 {
	if x != nil {
		return x.NotingFafu_3
	}
	return 0
}

func (x *GameDetailRule) GetHaveLiujumanguan() bool {
	if x != nil {
		return x.HaveLiujumanguan
	}
	return false
}

func (x *GameDetailRule) GetHaveQieshangmanguan() bool {
	if x != nil {
		return x.HaveQieshangmanguan
	}
	return false
}

func (x *GameDetailRule) GetHaveBiaoDora() bool {
	if x != nil {
		return x.HaveBiaoDora
	}
	return false
}

func (x *GameDetailRule) GetHaveGangBiaoDora() bool {
	if x != nil {
		return x.HaveGangBiaoDora
	}
	return false
}

func (x *GameDetailRule) GetMingDoraImmediatelyOpen() bool {
	if x != nil {
		return x.MingDoraImmediatelyOpen
	}
	return false
}

func (x *GameDetailRule) GetHaveLiDora() bool {
	if x != nil {
		return x.HaveLiDora
	}
	return false
}

func (x *GameDetailRule) GetHaveGangLiDora() bool {
	if x != nil {
		return x.HaveGangLiDora
	}
	return false
}

func (x *GameDetailRule) GetHaveSifenglianda() bool {
	if x != nil {
		return x.HaveSifenglianda
	}
	return false
}

func (x *GameDetailRule) GetHaveSigangsanle() bool {
	if x != nil {
		return x.HaveSigangsanle
	}
	return false
}

func (x *GameDetailRule) GetHaveSijializhi() bool {
	if x != nil {
		return x.HaveSijializhi
	}
	return false
}

func (x *GameDetailRule) GetHaveJiuzhongjiupai() bool {
	if x != nil {
		return x.HaveJiuzhongjiupai
	}
	return false
}

func (x *GameDetailRule) GetHaveSanjiahele() bool {
	if x != nil {
		return x.HaveSanjiahele
	}
	return false
}

func (x *GameDetailRule) GetHaveToutiao() bool {
	if x != nil {
		return x.HaveToutiao
	}
	return false
}

func (x *GameDetailRule) GetHaveHelelianzhuang() bool {
	if x != nil {
		return x.HaveHelelianzhuang
	}
	return false
}

func (x *GameDetailRule) GetHaveHelezhongju() bool {
	if x != nil {
		return x.HaveHelezhongju
	}
	return false
}

func (x *GameDetailRule) GetHaveTingpailianzhuang() bool {
	if x != nil {
		return x.HaveTingpailianzhuang
	}
	return false
}

func (x *GameDetailRule) GetHaveTingpaizhongju() bool {
	if x != nil {
		return x.HaveTingpaizhongju
	}
	return false
}

func (x *GameDetailRule) GetHaveYifa() bool {
	if x != nil {
		return x.HaveYifa
	}
	return false
}

func (x *GameDetailRule) GetHaveNanruxiru() bool {
	if x != nil {
		return x.HaveNanruxiru
	}
	return false
}

func (x *GameDetailRule) GetJingsuanyuandian() uint32 {
	if x != nil {
		return x.Jingsuanyuandian
	}
	return 0
}

func (x *GameDetailRule) GetShunweima_2() int32 {
	if x != nil {
		return x.Shunweima_2
	}
	return 0
}

func (x *GameDetailRule) GetShunweima_3() int32 {
	if x != nil {
		return x.Shunweima_3
	}
	return 0
}

func (x *GameDetailRule) GetShunweima_4() int32 {
	if x != nil {
		return x.Shunweima_4
	}
	return 0
}

func (x *GameDetailRule) GetBianjietishi() bool {
	if x != nil {
		return x.Bianjietishi
	}
	return false
}

func (x *GameDetailRule) GetAiLevel() uint32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

func (x *GameDetailRule) GetHaveZimosun() bool {
	if x != nil {
		return x.HaveZimosun
	}
	return false
}

func (x *GameDetailRule) GetDisableMultiYukaman() bool {
	if x != nil {
		return x.DisableMultiYukaman
	}
	return false
}

func (x *GameDetailRule) GetFanfu() uint32 {
	if x != nil {
		return x.Fanfu
	}
	return 0
}

func (x *GameDetailRule) GetGuyiMode() uint32 {
	if x != nil {
		return x.GuyiMode
	}
	return 0
}

func (x *GameDetailRule) GetDora3Mode() uint32 {
	if x != nil {
		return x.Dora3Mode
	}
	return 0
}

func (x *GameDetailRule) GetBeginOpenMode() uint32 {
	if x != nil {
		return x.BeginOpenMode
	}
	return 0
}

func (x *GameDetailRule) GetJiuchaoMode() uint32 {
	if x != nil {
		return x.JiuchaoMode
	}
	return 0
}

func (x *GameDetailRule) GetMuyuMode() uint32 {
	if x != nil {
		return x.MuyuMode
	}
	return 0
}

func (x *GameDetailRule) GetOpenHand() uint32 {
	if x != nil {
		return x.OpenHand
	}
	return 0
}

func (x *GameDetailRule) GetDisableLeijiyiman() bool {
	if x != nil {
		return x.DisableLeijiyiman
	}
	return false
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         uint32            `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	OwnerId        uint32            `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Mode           *GameMode         `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	MaxPlayerCount uint32            `protobuf:"varint,4,opt,name=max_player_count,json=maxPlayerCount,proto3" json:"max_player_count,omitempty"`
	Persons        []*PlayerGameView `protobuf:"bytes,5,rep,name=persons,proto3" json:"persons,omitempty"`
	ReadyList      []uint32          `protobuf:"varint,6,rep,packed,name=ready_list,json=readyList,proto3" json:"ready_list,omitempty"`
	IsPlaying      bool              `protobuf:"varint,7,opt,name=is_playing,json=isPlaying,proto3" json:"is_playing,omitempty"`
	PublicLive     bool              `protobuf:"varint,8,opt,name=public_live,json=publicLive,proto3" json:"public_live,omitempty"`
	RobotCount     uint32            `protobuf:"varint,9,opt,name=robot_count,json=robotCount,proto3" json:"robot_count,omitempty"`
	TournamentId   uint32            `protobuf:"varint,10,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
	Seq            uint32            `protobuf:"varint,11,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{83}
}

func (x *Room) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Room) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Room) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *Room) GetMaxPlayerCount() uint32 {
	if x != nil {
		return x.MaxPlayerCount
	}
	return 0
}

func (x *Room) GetPersons() []*PlayerGameView {
	if x != nil {
		return x.Persons
	}
	return nil
}

func (x *Room) GetReadyList() []uint32 {
	if x != nil {
		return x.ReadyList
	}
	return nil
}

func (x *Room) GetIsPlaying() bool {
	if x != nil {
		return x.IsPlaying
	}
	return false
}

func (x *Room) GetPublicLive() bool {
	if x != nil {
		return x.PublicLive
	}
	return false
}

func (x *Room) GetRobotCount() uint32 {
	if x != nil {
		return x.RobotCount
	}
	return 0
}

func (x *Room) GetTournamentId() uint32 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

func (x *Room) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type GameEndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*GameEndResult_PlayerItem `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *GameEndResult) Reset() {
	*x = GameEndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndResult) ProtoMessage() {}

func (x *GameEndResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndResult.ProtoReflect.Descriptor instead.
func (*GameEndResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{84}
}

func (x *GameEndResult) GetPlayers() []*GameEndResult_PlayerItem {
	if x != nil {
		return x.Players
	}
	return nil
}

type GameConnectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken,proto3" json:"connect_token,omitempty"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
	Location     string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GameConnectInfo) Reset() {
	*x = GameConnectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConnectInfo) ProtoMessage() {}

func (x *GameConnectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConnectInfo.ProtoReflect.Descriptor instead.
func (*GameConnectInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{85}
}

func (x *GameConnectInfo) GetConnectToken() string {
	if x != nil {
		return x.ConnectToken
	}
	return ""
}

func (x *GameConnectInfo) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *GameConnectInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ItemGainRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Count  uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ItemGainRecord) Reset() {
	*x = ItemGainRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGainRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGainRecord) ProtoMessage() {}

func (x *ItemGainRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGainRecord.ProtoReflect.Descriptor instead.
func (*ItemGainRecord) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{86}
}

func (x *ItemGainRecord) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemGainRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ItemGainRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordTime    uint32            `protobuf:"varint,1,opt,name=record_time,json=recordTime,proto3" json:"record_time,omitempty"`
	LimitSourceId uint32            `protobuf:"varint,2,opt,name=limit_source_id,json=limitSourceId,proto3" json:"limit_source_id,omitempty"`
	Records       []*ItemGainRecord `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ItemGainRecords) Reset() {
	*x = ItemGainRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGainRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGainRecords) ProtoMessage() {}

func (x *ItemGainRecords) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGainRecords.ProtoReflect.Descriptor instead.
func (*ItemGainRecords) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{87}
}

func (x *ItemGainRecords) GetRecordTime() uint32 {
	if x != nil {
		return x.RecordTime
	}
	return 0
}

func (x *ItemGainRecords) GetLimitSourceId() uint32 {
	if x != nil {
		return x.LimitSourceId
	}
	return 0
}

func (x *ItemGainRecords) GetRecords() []*ItemGainRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Stack  uint32 `protobuf:"varint,2,opt,name=stack,proto3" json:"stack,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{88}
}

func (x *Item) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Item) GetStack() uint32 {
	if x != nil {
		return x.Stack
	}
	return 0
}

type Bag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items           []*Item            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	DailyGainRecord []*ItemGainRecords `protobuf:"bytes,2,rep,name=daily_gain_record,json=dailyGainRecord,proto3" json:"daily_gain_record,omitempty"`
}

func (x *Bag) Reset() {
	*x = Bag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bag) ProtoMessage() {}

func (x *Bag) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bag.ProtoReflect.Descriptor instead.
func (*Bag) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{89}
}

func (x *Bag) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Bag) GetDailyGainRecord() []*ItemGainRecords {
	if x != nil {
		return x.DailyGainRecord
	}
	return nil
}

type BagUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateItems           []*Item            `protobuf:"bytes,1,rep,name=update_items,json=updateItems,proto3" json:"update_items,omitempty"`
	UpdateDailyGainRecord []*ItemGainRecords `protobuf:"bytes,2,rep,name=update_daily_gain_record,json=updateDailyGainRecord,proto3" json:"update_daily_gain_record,omitempty"`
}

func (x *BagUpdate) Reset() {
	*x = BagUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BagUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BagUpdate) ProtoMessage() {}

func (x *BagUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BagUpdate.ProtoReflect.Descriptor instead.
func (*BagUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{90}
}

func (x *BagUpdate) GetUpdateItems() []*Item {
	if x != nil {
		return x.UpdateItems
	}
	return nil
}

func (x *BagUpdate) GetUpdateDailyGainRecord() []*ItemGainRecords {
	if x != nil {
		return x.UpdateDailyGainRecord
	}
	return nil
}

type RewardSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RewardSlot) Reset() {
	*x = RewardSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardSlot) ProtoMessage() {}

func (x *RewardSlot) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardSlot.ProtoReflect.Descriptor instead.
func (*RewardSlot) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{91}
}

func (x *RewardSlot) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RewardSlot) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type OpenResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward  *RewardSlot `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
	Replace *RewardSlot `protobuf:"bytes,2,opt,name=replace,proto3" json:"replace,omitempty"`
}

func (x *OpenResult) Reset() {
	*x = OpenResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResult) ProtoMessage() {}

func (x *OpenResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResult.ProtoReflect.Descriptor instead.
func (*OpenResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{92}
}

func (x *OpenResult) GetReward() *RewardSlot {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *OpenResult) GetReplace() *RewardSlot {
	if x != nil {
		return x.Replace
	}
	return nil
}

type RewardPlusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count    uint32                     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Exchange *RewardPlusResult_Exchange `protobuf:"bytes,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *RewardPlusResult) Reset() {
	*x = RewardPlusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPlusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPlusResult) ProtoMessage() {}

func (x *RewardPlusResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPlusResult.ProtoReflect.Descriptor instead.
func (*RewardPlusResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{93}
}

func (x *RewardPlusResult) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RewardPlusResult) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RewardPlusResult) GetExchange() *RewardPlusResult_Exchange {
	if x != nil {
		return x.Exchange
	}
	return nil
}

type ExecuteReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward       *RewardSlot `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
	Replace      *RewardSlot `protobuf:"bytes,2,opt,name=replace,proto3" json:"replace,omitempty"`
	ReplaceCount uint32      `protobuf:"varint,3,opt,name=replace_count,json=replaceCount,proto3" json:"replace_count,omitempty"`
}

func (x *ExecuteReward) Reset() {
	*x = ExecuteReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteReward) ProtoMessage() {}

func (x *ExecuteReward) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteReward.ProtoReflect.Descriptor instead.
func (*ExecuteReward) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{94}
}

func (x *ExecuteReward) GetReward() *RewardSlot {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ExecuteReward) GetReplace() *RewardSlot {
	if x != nil {
		return x.Replace
	}
	return nil
}

func (x *ExecuteReward) GetReplaceCount() uint32 {
	if x != nil {
		return x.ReplaceCount
	}
	return 0
}

type Mail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId         uint32              `protobuf:"varint,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
	State          uint32              `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	TakeAttachment bool                `protobuf:"varint,3,opt,name=take_attachment,json=takeAttachment,proto3" json:"take_attachment,omitempty"`
	Title          string              `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content        string              `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Attachments    []*RewardSlot       `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
	CreateTime     uint32              `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime     uint32              `protobuf:"varint,8,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	ReferenceId    uint32              `protobuf:"varint,9,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	TitleI18N      []*Mail_I18NContext `protobuf:"bytes,10,rep,name=title_i18n,json=titleI18n,proto3" json:"title_i18n,omitempty"`
	ContentI18N    []*Mail_I18NContext `protobuf:"bytes,11,rep,name=content_i18n,json=contentI18n,proto3" json:"content_i18n,omitempty"`
}

func (x *Mail) Reset() {
	*x = Mail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{95}
}

func (x *Mail) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

func (x *Mail) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Mail) GetTakeAttachment() bool {
	if x != nil {
		return x.TakeAttachment
	}
	return false
}

func (x *Mail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Mail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Mail) GetAttachments() []*RewardSlot {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Mail) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Mail) GetExpireTime() uint32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Mail) GetReferenceId() uint32 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

func (x *Mail) GetTitleI18N() []*Mail_I18NContext {
	if x != nil {
		return x.TitleI18N
	}
	return nil
}

func (x *Mail) GetContentI18N() []*Mail_I18NContext {
	if x != nil {
		return x.ContentI18N
	}
	return nil
}

type AchievementProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Counter      uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	Achieved     bool   `protobuf:"varint,3,opt,name=achieved,proto3" json:"achieved,omitempty"`
	Rewarded     bool   `protobuf:"varint,4,opt,name=rewarded,proto3" json:"rewarded,omitempty"`
	AchievedTime uint32 `protobuf:"varint,5,opt,name=achieved_time,json=achievedTime,proto3" json:"achieved_time,omitempty"`
}

func (x *AchievementProgress) Reset() {
	*x = AchievementProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementProgress) ProtoMessage() {}

func (x *AchievementProgress) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementProgress.ProtoReflect.Descriptor instead.
func (*AchievementProgress) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{96}
}

func (x *AchievementProgress) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AchievementProgress) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *AchievementProgress) GetAchieved() bool {
	if x != nil {
		return x.Achieved
	}
	return false
}

func (x *AchievementProgress) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *AchievementProgress) GetAchievedTime() uint32 {
	if x != nil {
		return x.AchievedTime
	}
	return 0
}

type AccountStatisticByGameMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode              uint32                                     `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	GameCountSum      uint32                                     `protobuf:"varint,2,opt,name=game_count_sum,json=gameCountSum,proto3" json:"game_count_sum,omitempty"`
	GameFinalPosition []uint32                                   `protobuf:"varint,3,rep,packed,name=game_final_position,json=gameFinalPosition,proto3" json:"game_final_position,omitempty"`
	FlyCount          uint32                                     `protobuf:"varint,4,opt,name=fly_count,json=flyCount,proto3" json:"fly_count,omitempty"`
	GoldEarnSum       float32                                    `protobuf:"fixed32,5,opt,name=gold_earn_sum,json=goldEarnSum,proto3" json:"gold_earn_sum,omitempty"`
	RoundCountSum     uint32                                     `protobuf:"varint,6,opt,name=round_count_sum,json=roundCountSum,proto3" json:"round_count_sum,omitempty"`
	DadianSum         float32                                    `protobuf:"fixed32,7,opt,name=dadian_sum,json=dadianSum,proto3" json:"dadian_sum,omitempty"`
	RoundEnd          []*AccountStatisticByGameMode_RoundEndData `protobuf:"bytes,8,rep,name=round_end,json=roundEnd,proto3" json:"round_end,omitempty"`
	MingCountSum      uint32                                     `protobuf:"varint,9,opt,name=ming_count_sum,json=mingCountSum,proto3" json:"ming_count_sum,omitempty"`
	LiqiCountSum      uint32                                     `protobuf:"varint,10,opt,name=liqi_count_sum,json=liqiCountSum,proto3" json:"liqi_count_sum,omitempty"`
	XunCountSum       uint32                                     `protobuf:"varint,11,opt,name=xun_count_sum,json=xunCountSum,proto3" json:"xun_count_sum,omitempty"`
	HighestLianzhuang uint32                                     `protobuf:"varint,12,opt,name=highest_lianzhuang,json=highestLianzhuang,proto3" json:"highest_lianzhuang,omitempty"`
	ScoreEarnSum      uint32                                     `protobuf:"varint,13,opt,name=score_earn_sum,json=scoreEarnSum,proto3" json:"score_earn_sum,omitempty"`
	RankScore         []*AccountStatisticByGameMode_RankScore    `protobuf:"bytes,14,rep,name=rank_score,json=rankScore,proto3" json:"rank_score,omitempty"`
}

func (x *AccountStatisticByGameMode) Reset() {
	*x = AccountStatisticByGameMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByGameMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByGameMode) ProtoMessage() {}

func (x *AccountStatisticByGameMode) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByGameMode.ProtoReflect.Descriptor instead.
func (*AccountStatisticByGameMode) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{97}
}

func (x *AccountStatisticByGameMode) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetGameCountSum() uint32 {
	if x != nil {
		return x.GameCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetGameFinalPosition() []uint32 {
	if x != nil {
		return x.GameFinalPosition
	}
	return nil
}

func (x *AccountStatisticByGameMode) GetFlyCount() uint32 {
	if x != nil {
		return x.FlyCount
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetGoldEarnSum() float32 {
	if x != nil {
		return x.GoldEarnSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetRoundCountSum() uint32 {
	if x != nil {
		return x.RoundCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetDadianSum() float32 {
	if x != nil {
		return x.DadianSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetRoundEnd() []*AccountStatisticByGameMode_RoundEndData {
	if x != nil {
		return x.RoundEnd
	}
	return nil
}

func (x *AccountStatisticByGameMode) GetMingCountSum() uint32 {
	if x != nil {
		return x.MingCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetLiqiCountSum() uint32 {
	if x != nil {
		return x.LiqiCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetXunCountSum() uint32 {
	if x != nil {
		return x.XunCountSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetHighestLianzhuang() uint32 {
	if x != nil {
		return x.HighestLianzhuang
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetScoreEarnSum() uint32 {
	if x != nil {
		return x.ScoreEarnSum
	}
	return 0
}

func (x *AccountStatisticByGameMode) GetRankScore() []*AccountStatisticByGameMode_RankScore {
	if x != nil {
		return x.RankScore
	}
	return nil
}

type AccountStatisticByFan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanId uint32 `protobuf:"varint,1,opt,name=fan_id,json=fanId,proto3" json:"fan_id,omitempty"`
	Sum   uint32 `protobuf:"varint,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AccountStatisticByFan) Reset() {
	*x = AccountStatisticByFan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByFan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByFan) ProtoMessage() {}

func (x *AccountStatisticByFan) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByFan.ProtoReflect.Descriptor instead.
func (*AccountStatisticByFan) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{98}
}

func (x *AccountStatisticByFan) GetFanId() uint32 {
	if x != nil {
		return x.FanId
	}
	return 0
}

func (x *AccountStatisticByFan) GetSum() uint32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AccountFanAchieved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MahjongCategory uint32                   `protobuf:"varint,1,opt,name=mahjong_category,json=mahjongCategory,proto3" json:"mahjong_category,omitempty"`
	Fan             []*AccountStatisticByFan `protobuf:"bytes,2,rep,name=fan,proto3" json:"fan,omitempty"`
	Liujumanguan    uint32                   `protobuf:"varint,3,opt,name=liujumanguan,proto3" json:"liujumanguan,omitempty"`
}

func (x *AccountFanAchieved) Reset() {
	*x = AccountFanAchieved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountFanAchieved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFanAchieved) ProtoMessage() {}

func (x *AccountFanAchieved) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFanAchieved.ProtoReflect.Descriptor instead.
func (*AccountFanAchieved) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{99}
}

func (x *AccountFanAchieved) GetMahjongCategory() uint32 {
	if x != nil {
		return x.MahjongCategory
	}
	return 0
}

func (x *AccountFanAchieved) GetFan() []*AccountStatisticByFan {
	if x != nil {
		return x.Fan
	}
	return nil
}

func (x *AccountFanAchieved) GetLiujumanguan() uint32 {
	if x != nil {
		return x.Liujumanguan
	}
	return 0
}

type AccountDetailStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameMode     []*AccountStatisticByGameMode `protobuf:"bytes,1,rep,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	Fan          []*AccountStatisticByFan      `protobuf:"bytes,2,rep,name=fan,proto3" json:"fan,omitempty"`
	Liujumanguan uint32                        `protobuf:"varint,3,opt,name=liujumanguan,proto3" json:"liujumanguan,omitempty"`
	FanAchieved  []*AccountFanAchieved         `protobuf:"bytes,4,rep,name=fan_achieved,json=fanAchieved,proto3" json:"fan_achieved,omitempty"`
}

func (x *AccountDetailStatistic) Reset() {
	*x = AccountDetailStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatistic) ProtoMessage() {}

func (x *AccountDetailStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatistic) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{100}
}

func (x *AccountDetailStatistic) GetGameMode() []*AccountStatisticByGameMode {
	if x != nil {
		return x.GameMode
	}
	return nil
}

func (x *AccountDetailStatistic) GetFan() []*AccountStatisticByFan {
	if x != nil {
		return x.Fan
	}
	return nil
}

func (x *AccountDetailStatistic) GetLiujumanguan() uint32 {
	if x != nil {
		return x.Liujumanguan
	}
	return 0
}

func (x *AccountDetailStatistic) GetFanAchieved() []*AccountFanAchieved {
	if x != nil {
		return x.FanAchieved
	}
	return nil
}

type AccountDetailStatisticByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category        uint32                  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	DetailStatistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=detail_statistic,json=detailStatistic,proto3" json:"detail_statistic,omitempty"`
}

func (x *AccountDetailStatisticByCategory) Reset() {
	*x = AccountDetailStatisticByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticByCategory) ProtoMessage() {}

func (x *AccountDetailStatisticByCategory) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticByCategory.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticByCategory) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{101}
}

func (x *AccountDetailStatisticByCategory) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AccountDetailStatisticByCategory) GetDetailStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.DetailStatistic
	}
	return nil
}

type AccountDetailStatisticV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRoomStatistic        *AccountDetailStatistic                              `protobuf:"bytes,1,opt,name=friend_room_statistic,json=friendRoomStatistic,proto3" json:"friend_room_statistic,omitempty"`
	RankStatistic              *AccountDetailStatisticV2_RankStatistic              `protobuf:"bytes,2,opt,name=rank_statistic,json=rankStatistic,proto3" json:"rank_statistic,omitempty"`
	CustomizedContestStatistic *AccountDetailStatisticV2_CustomizedContestStatistic `protobuf:"bytes,3,opt,name=customized_contest_statistic,json=customizedContestStatistic,proto3" json:"customized_contest_statistic,omitempty"`
	LeisureMatchStatistic      *AccountDetailStatistic                              `protobuf:"bytes,4,opt,name=leisure_match_statistic,json=leisureMatchStatistic,proto3" json:"leisure_match_statistic,omitempty"`
	ChallengeMatchStatistic    *AccountDetailStatisticV2_ChallengeStatistic         `protobuf:"bytes,5,opt,name=challenge_match_statistic,json=challengeMatchStatistic,proto3" json:"challenge_match_statistic,omitempty"`
}

func (x *AccountDetailStatisticV2) Reset() {
	*x = AccountDetailStatisticV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2) ProtoMessage() {}

func (x *AccountDetailStatisticV2) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102}
}

func (x *AccountDetailStatisticV2) GetFriendRoomStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.FriendRoomStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetRankStatistic() *AccountDetailStatisticV2_RankStatistic {
	if x != nil {
		return x.RankStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetCustomizedContestStatistic() *AccountDetailStatisticV2_CustomizedContestStatistic {
	if x != nil {
		return x.CustomizedContestStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetLeisureMatchStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.LeisureMatchStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2) GetChallengeMatchStatistic() *AccountDetailStatisticV2_ChallengeStatistic {
	if x != nil {
		return x.ChallengeMatchStatistic
	}
	return nil
}

type AccountShiLian struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step  uint32 `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"`
	State uint32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *AccountShiLian) Reset() {
	*x = AccountShiLian{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountShiLian) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountShiLian) ProtoMessage() {}

func (x *AccountShiLian) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountShiLian.ProtoReflect.Descriptor instead.
func (*AccountShiLian) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{103}
}

func (x *AccountShiLian) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *AccountShiLian) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ClientDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform       string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Hardware       string `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware,omitempty"`
	Os             string `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion      string `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	IsBrowser      bool   `protobuf:"varint,5,opt,name=is_browser,json=isBrowser,proto3" json:"is_browser,omitempty"`
	Software       string `protobuf:"bytes,6,opt,name=software,proto3" json:"software,omitempty"`
	SalePlatform   string `protobuf:"bytes,7,opt,name=sale_platform,json=salePlatform,proto3" json:"sale_platform,omitempty"`
	HardwareVendor string `protobuf:"bytes,8,opt,name=hardware_vendor,json=hardwareVendor,proto3" json:"hardware_vendor,omitempty"`
	ModelNumber    string `protobuf:"bytes,9,opt,name=model_number,json=modelNumber,proto3" json:"model_number,omitempty"`
}

func (x *ClientDeviceInfo) Reset() {
	*x = ClientDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientDeviceInfo) ProtoMessage() {}

func (x *ClientDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientDeviceInfo.ProtoReflect.Descriptor instead.
func (*ClientDeviceInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{104}
}

func (x *ClientDeviceInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ClientDeviceInfo) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

func (x *ClientDeviceInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ClientDeviceInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *ClientDeviceInfo) GetIsBrowser() bool {
	if x != nil {
		return x.IsBrowser
	}
	return false
}

func (x *ClientDeviceInfo) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *ClientDeviceInfo) GetSalePlatform() string {
	if x != nil {
		return x.SalePlatform
	}
	return ""
}

func (x *ClientDeviceInfo) GetHardwareVendor() string {
	if x != nil {
		return x.HardwareVendor
	}
	return ""
}

func (x *ClientDeviceInfo) GetModelNumber() string {
	if x != nil {
		return x.ModelNumber
	}
	return ""
}

type ClientVersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Package  string `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *ClientVersionInfo) Reset() {
	*x = ClientVersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionInfo) ProtoMessage() {}

func (x *ClientVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionInfo.ProtoReflect.Descriptor instead.
func (*ClientVersionInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{105}
}

func (x *ClientVersionInfo) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ClientVersionInfo) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

type Announcement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Announcement) Reset() {
	*x = Announcement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Announcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Announcement) ProtoMessage() {}

func (x *Announcement) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Announcement.ProtoReflect.Descriptor instead.
func (*Announcement) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{106}
}

func (x *Announcement) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Announcement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Announcement) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type TaskProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Counter  uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	Achieved bool   `protobuf:"varint,3,opt,name=achieved,proto3" json:"achieved,omitempty"`
	Rewarded bool   `protobuf:"varint,4,opt,name=rewarded,proto3" json:"rewarded,omitempty"`
	Failed   bool   `protobuf:"varint,5,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *TaskProgress) Reset() {
	*x = TaskProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgress) ProtoMessage() {}

func (x *TaskProgress) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgress.ProtoReflect.Descriptor instead.
func (*TaskProgress) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{107}
}

func (x *TaskProgress) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskProgress) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *TaskProgress) GetAchieved() bool {
	if x != nil {
		return x.Achieved
	}
	return false
}

func (x *TaskProgress) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *TaskProgress) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

type GameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category uint32        `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Mode     *GameMode     `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Meta     *GameMetaData `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GameConfig) Reset() {
	*x = GameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfig) ProtoMessage() {}

func (x *GameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfig.ProtoReflect.Descriptor instead.
func (*GameConfig) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{108}
}

func (x *GameConfig) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GameConfig) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *GameConfig) GetMeta() *GameMetaData {
	if x != nil {
		return x.Meta
	}
	return nil
}

type AccountActiveState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32              `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	LoginTime  uint32              `protobuf:"varint,2,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LogoutTime uint32              `protobuf:"varint,3,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time,omitempty"`
	IsOnline   bool                `protobuf:"varint,4,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	Playing    *AccountPlayingGame `protobuf:"bytes,5,opt,name=playing,proto3" json:"playing,omitempty"`
}

func (x *AccountActiveState) Reset() {
	*x = AccountActiveState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountActiveState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountActiveState) ProtoMessage() {}

func (x *AccountActiveState) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountActiveState.ProtoReflect.Descriptor instead.
func (*AccountActiveState) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{109}
}

func (x *AccountActiveState) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountActiveState) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *AccountActiveState) GetLogoutTime() uint32 {
	if x != nil {
		return x.LogoutTime
	}
	return 0
}

func (x *AccountActiveState) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *AccountActiveState) GetPlaying() *AccountPlayingGame {
	if x != nil {
		return x.Playing
	}
	return nil
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *PlayerBaseView     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	State *AccountActiveState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{110}
}

func (x *Friend) GetBase() *PlayerBaseView {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Friend) GetState() *AccountActiveState {
	if x != nil {
		return x.State
	}
	return nil
}

type GameLiveUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ActionCategory uint32 `protobuf:"varint,2,opt,name=action_category,json=actionCategory,proto3" json:"action_category,omitempty"`
	ActionData     []byte `protobuf:"bytes,3,opt,name=action_data,json=actionData,proto3" json:"action_data,omitempty"`
}

func (x *GameLiveUnit) Reset() {
	*x = GameLiveUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveUnit) ProtoMessage() {}

func (x *GameLiveUnit) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveUnit.ProtoReflect.Descriptor instead.
func (*GameLiveUnit) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{111}
}

func (x *GameLiveUnit) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameLiveUnit) GetActionCategory() uint32 {
	if x != nil {
		return x.ActionCategory
	}
	return 0
}

func (x *GameLiveUnit) GetActionData() []byte {
	if x != nil {
		return x.ActionData
	}
	return nil
}

type GameLiveSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*GameLiveUnit `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GameLiveSegment) Reset() {
	*x = GameLiveSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveSegment) ProtoMessage() {}

func (x *GameLiveSegment) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveSegment.ProtoReflect.Descriptor instead.
func (*GameLiveSegment) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{112}
}

func (x *GameLiveSegment) GetActions() []*GameLiveUnit {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GameLiveSegmentUri struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentId  uint32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	SegmentUri string `protobuf:"bytes,2,opt,name=segment_uri,json=segmentUri,proto3" json:"segment_uri,omitempty"`
}

func (x *GameLiveSegmentUri) Reset() {
	*x = GameLiveSegmentUri{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveSegmentUri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveSegmentUri) ProtoMessage() {}

func (x *GameLiveSegmentUri) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveSegmentUri.ProtoReflect.Descriptor instead.
func (*GameLiveSegmentUri) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{113}
}

func (x *GameLiveSegmentUri) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *GameLiveSegmentUri) GetSegmentUri() string {
	if x != nil {
		return x.SegmentUri
	}
	return ""
}

type GameLiveHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	StartTime  uint32            `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	GameConfig *GameConfig       `protobuf:"bytes,3,opt,name=game_config,json=gameConfig,proto3" json:"game_config,omitempty"`
	Players    []*PlayerGameView `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	SeatList   []uint32          `protobuf:"varint,5,rep,packed,name=seat_list,json=seatList,proto3" json:"seat_list,omitempty"`
}

func (x *GameLiveHead) Reset() {
	*x = GameLiveHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLiveHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLiveHead) ProtoMessage() {}

func (x *GameLiveHead) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLiveHead.ProtoReflect.Descriptor instead.
func (*GameLiveHead) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{114}
}

func (x *GameLiveHead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameLiveHead) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameLiveHead) GetGameConfig() *GameConfig {
	if x != nil {
		return x.GameConfig
	}
	return nil
}

func (x *GameLiveHead) GetPlayers() []*PlayerGameView {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameLiveHead) GetSeatList() []uint32 {
	if x != nil {
		return x.SeatList
	}
	return nil
}

type GameNewRoundState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatStates []uint32 `protobuf:"varint,1,rep,packed,name=seat_states,json=seatStates,proto3" json:"seat_states,omitempty"`
}

func (x *GameNewRoundState) Reset() {
	*x = GameNewRoundState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNewRoundState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNewRoundState) ProtoMessage() {}

func (x *GameNewRoundState) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNewRoundState.ProtoReflect.Descriptor instead.
func (*GameNewRoundState) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{115}
}

func (x *GameNewRoundState) GetSeatStates() []uint32 {
	if x != nil {
		return x.SeatStates
	}
	return nil
}

type GameEndAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GameEndAction) Reset() {
	*x = GameEndAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndAction) ProtoMessage() {}

func (x *GameEndAction) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndAction.ProtoReflect.Descriptor instead.
func (*GameEndAction) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{116}
}

func (x *GameEndAction) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type GameNoopAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameNoopAction) Reset() {
	*x = GameNoopAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNoopAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNoopAction) ProtoMessage() {}

func (x *GameNoopAction) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNoopAction.ProtoReflect.Descriptor instead.
func (*GameNoopAction) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{117}
}

type CommentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId uint32          `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Timestamp uint32          `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Commenter *PlayerBaseView `protobuf:"bytes,3,opt,name=commenter,proto3" json:"commenter,omitempty"`
	Content   string          `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	IsBanned  uint32          `protobuf:"varint,5,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
}

func (x *CommentItem) Reset() {
	*x = CommentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentItem) ProtoMessage() {}

func (x *CommentItem) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentItem.ProtoReflect.Descriptor instead.
func (*CommentItem) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{118}
}

func (x *CommentItem) GetCommentId() uint32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentItem) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommentItem) GetCommenter() *PlayerBaseView {
	if x != nil {
		return x.Commenter
	}
	return nil
}

func (x *CommentItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentItem) GetIsBanned() uint32 {
	if x != nil {
		return x.IsBanned
	}
	return 0
}

type RollingNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content        string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	StartTime      uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	RepeatInterval uint32 `protobuf:"varint,5,opt,name=repeat_interval,json=repeatInterval,proto3" json:"repeat_interval,omitempty"`
	Lang           string `protobuf:"bytes,6,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *RollingNotice) Reset() {
	*x = RollingNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollingNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollingNotice) ProtoMessage() {}

func (x *RollingNotice) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollingNotice.ProtoReflect.Descriptor instead.
func (*RollingNotice) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{119}
}

func (x *RollingNotice) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RollingNotice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RollingNotice) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RollingNotice) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RollingNotice) GetRepeatInterval() uint32 {
	if x != nil {
		return x.RepeatInterval
	}
	return 0
}

func (x *RollingNotice) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type BillingGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc          string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Icon          string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	ResourceId    uint32 `protobuf:"varint,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceCount uint32 `protobuf:"varint,6,opt,name=resource_count,json=resourceCount,proto3" json:"resource_count,omitempty"`
}

func (x *BillingGoods) Reset() {
	*x = BillingGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingGoods) ProtoMessage() {}

func (x *BillingGoods) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingGoods.ProtoReflect.Descriptor instead.
func (*BillingGoods) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{120}
}

func (x *BillingGoods) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BillingGoods) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BillingGoods) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BillingGoods) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *BillingGoods) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *BillingGoods) GetResourceCount() uint32 {
	if x != nil {
		return x.ResourceCount
	}
	return 0
}

type BillShortcut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count     uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	DealPrice uint32 `protobuf:"varint,3,opt,name=deal_price,json=dealPrice,proto3" json:"deal_price,omitempty"`
}

func (x *BillShortcut) Reset() {
	*x = BillShortcut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillShortcut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillShortcut) ProtoMessage() {}

func (x *BillShortcut) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillShortcut.ProtoReflect.Descriptor instead.
func (*BillShortcut) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{121}
}

func (x *BillShortcut) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BillShortcut) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BillShortcut) GetDealPrice() uint32 {
	if x != nil {
		return x.DealPrice
	}
	return 0
}

type BillingProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods         *BillingGoods `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods,omitempty"`
	CurrencyCode  string        `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencyPrice uint32        `protobuf:"varint,3,opt,name=currency_price,json=currencyPrice,proto3" json:"currency_price,omitempty"`
	SortWeight    uint32        `protobuf:"varint,4,opt,name=sort_weight,json=sortWeight,proto3" json:"sort_weight,omitempty"`
}

func (x *BillingProduct) Reset() {
	*x = BillingProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingProduct) ProtoMessage() {}

func (x *BillingProduct) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingProduct.ProtoReflect.Descriptor instead.
func (*BillingProduct) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{122}
}

func (x *BillingProduct) GetGoods() *BillingGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *BillingProduct) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *BillingProduct) GetCurrencyPrice() uint32 {
	if x != nil {
		return x.CurrencyPrice
	}
	return 0
}

func (x *BillingProduct) GetSortWeight() uint32 {
	if x != nil {
		return x.SortWeight
	}
	return 0
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charid     uint32      `protobuf:"varint,1,opt,name=charid,proto3" json:"charid,omitempty"`
	Level      uint32      `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Exp        uint32      `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	Views      []*ViewSlot `protobuf:"bytes,4,rep,name=views,proto3" json:"views,omitempty"`
	Skin       uint32      `protobuf:"varint,5,opt,name=skin,proto3" json:"skin,omitempty"`
	IsUpgraded bool        `protobuf:"varint,6,opt,name=is_upgraded,json=isUpgraded,proto3" json:"is_upgraded,omitempty"`
	ExtraEmoji []uint32    `protobuf:"varint,7,rep,packed,name=extra_emoji,json=extraEmoji,proto3" json:"extra_emoji,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{123}
}

func (x *Character) GetCharid() uint32 {
	if x != nil {
		return x.Charid
	}
	return 0
}

func (x *Character) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Character) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *Character) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *Character) GetSkin() uint32 {
	if x != nil {
		return x.Skin
	}
	return 0
}

func (x *Character) GetIsUpgraded() bool {
	if x != nil {
		return x.IsUpgraded
	}
	return false
}

func (x *Character) GetExtraEmoji() []uint32 {
	if x != nil {
		return x.ExtraEmoji
	}
	return nil
}

type BuyRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BuyRecord) Reset() {
	*x = BuyRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyRecord) ProtoMessage() {}

func (x *BuyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyRecord.ProtoReflect.Descriptor instead.
func (*BuyRecord) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{124}
}

func (x *BuyRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuyRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ZHPShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods       []uint32              `protobuf:"varint,1,rep,packed,name=goods,proto3" json:"goods,omitempty"`
	BuyRecords  []*BuyRecord          `protobuf:"bytes,2,rep,name=buy_records,json=buyRecords,proto3" json:"buy_records,omitempty"`
	FreeRefresh *ZHPShop_RefreshCount `protobuf:"bytes,3,opt,name=free_refresh,json=freeRefresh,proto3" json:"free_refresh,omitempty"`
	CostRefresh *ZHPShop_RefreshCount `protobuf:"bytes,4,opt,name=cost_refresh,json=costRefresh,proto3" json:"cost_refresh,omitempty"`
}

func (x *ZHPShop) Reset() {
	*x = ZHPShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZHPShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZHPShop) ProtoMessage() {}

func (x *ZHPShop) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZHPShop.ProtoReflect.Descriptor instead.
func (*ZHPShop) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{125}
}

func (x *ZHPShop) GetGoods() []uint32 {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *ZHPShop) GetBuyRecords() []*BuyRecord {
	if x != nil {
		return x.BuyRecords
	}
	return nil
}

func (x *ZHPShop) GetFreeRefresh() *ZHPShop_RefreshCount {
	if x != nil {
		return x.FreeRefresh
	}
	return nil
}

func (x *ZHPShop) GetCostRefresh() *ZHPShop_RefreshCount {
	if x != nil {
		return x.CostRefresh
	}
	return nil
}

type MonthTicketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EndTime     uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LastPayTime uint32 `protobuf:"varint,3,opt,name=last_pay_time,json=lastPayTime,proto3" json:"last_pay_time,omitempty"`
}

func (x *MonthTicketInfo) Reset() {
	*x = MonthTicketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthTicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthTicketInfo) ProtoMessage() {}

func (x *MonthTicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthTicketInfo.ProtoReflect.Descriptor instead.
func (*MonthTicketInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{126}
}

func (x *MonthTicketInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MonthTicketInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MonthTicketInfo) GetLastPayTime() uint32 {
	if x != nil {
		return x.LastPayTime
	}
	return 0
}

type ShopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zhp             *ZHPShop     `protobuf:"bytes,1,opt,name=zhp,proto3" json:"zhp,omitempty"`
	BuyRecords      []*BuyRecord `protobuf:"bytes,2,rep,name=buy_records,json=buyRecords,proto3" json:"buy_records,omitempty"`
	LastRefreshTime uint32       `protobuf:"varint,3,opt,name=last_refresh_time,json=lastRefreshTime,proto3" json:"last_refresh_time,omitempty"`
}

func (x *ShopInfo) Reset() {
	*x = ShopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInfo) ProtoMessage() {}

func (x *ShopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInfo.ProtoReflect.Descriptor instead.
func (*ShopInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{127}
}

func (x *ShopInfo) GetZhp() *ZHPShop {
	if x != nil {
		return x.Zhp
	}
	return nil
}

func (x *ShopInfo) GetBuyRecords() []*BuyRecord {
	if x != nil {
		return x.BuyRecords
	}
	return nil
}

func (x *ShopInfo) GetLastRefreshTime() uint32 {
	if x != nil {
		return x.LastRefreshTime
	}
	return 0
}

type ChangeNicknameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Time uint32 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ChangeNicknameRecord) Reset() {
	*x = ChangeNicknameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNicknameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNicknameRecord) ProtoMessage() {}

func (x *ChangeNicknameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNicknameRecord.ProtoReflect.Descriptor instead.
func (*ChangeNicknameRecord) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{128}
}

func (x *ChangeNicknameRecord) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ChangeNicknameRecord) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ChangeNicknameRecord) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ServerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSetting   *PaymentSetting   `protobuf:"bytes,3,opt,name=payment_setting,json=paymentSetting,proto3" json:"payment_setting,omitempty"`
	PaymentSettingV2 *PaymentSettingV2 `protobuf:"bytes,4,opt,name=payment_setting_v2,json=paymentSettingV2,proto3" json:"payment_setting_v2,omitempty"`
}

func (x *ServerSettings) Reset() {
	*x = ServerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSettings) ProtoMessage() {}

func (x *ServerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSettings.ProtoReflect.Descriptor instead.
func (*ServerSettings) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{129}
}

func (x *ServerSettings) GetPaymentSetting() *PaymentSetting {
	if x != nil {
		return x.PaymentSetting
	}
	return nil
}

func (x *ServerSettings) GetPaymentSettingV2() *PaymentSettingV2 {
	if x != nil {
		return x.PaymentSettingV2
	}
	return nil
}

type PaymentSettingV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayment      uint32                                 `protobuf:"varint,1,opt,name=open_payment,json=openPayment,proto3" json:"open_payment,omitempty"`
	PaymentPlatforms []*PaymentSettingV2_PaymentSettingUnit `protobuf:"bytes,2,rep,name=payment_platforms,json=paymentPlatforms,proto3" json:"payment_platforms,omitempty"`
}

func (x *PaymentSettingV2) Reset() {
	*x = PaymentSettingV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSettingV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSettingV2) ProtoMessage() {}

func (x *PaymentSettingV2) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSettingV2.ProtoReflect.Descriptor instead.
func (*PaymentSettingV2) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{130}
}

func (x *PaymentSettingV2) GetOpenPayment() uint32 {
	if x != nil {
		return x.OpenPayment
	}
	return 0
}

func (x *PaymentSettingV2) GetPaymentPlatforms() []*PaymentSettingV2_PaymentSettingUnit {
	if x != nil {
		return x.PaymentPlatforms
	}
	return nil
}

type PaymentSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayment         uint32                     `protobuf:"varint,1,opt,name=open_payment,json=openPayment,proto3" json:"open_payment,omitempty"`
	PaymentInfoShowType uint32                     `protobuf:"varint,2,opt,name=payment_info_show_type,json=paymentInfoShowType,proto3" json:"payment_info_show_type,omitempty"`
	PaymentInfo         string                     `protobuf:"bytes,3,opt,name=payment_info,json=paymentInfo,proto3" json:"payment_info,omitempty"`
	Wechat              *PaymentSetting_WechatData `protobuf:"bytes,4,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Alipay              *PaymentSetting_AlipayData `protobuf:"bytes,5,opt,name=alipay,proto3" json:"alipay,omitempty"`
}

func (x *PaymentSetting) Reset() {
	*x = PaymentSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSetting) ProtoMessage() {}

func (x *PaymentSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSetting.ProtoReflect.Descriptor instead.
func (*PaymentSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{131}
}

func (x *PaymentSetting) GetOpenPayment() uint32 {
	if x != nil {
		return x.OpenPayment
	}
	return 0
}

func (x *PaymentSetting) GetPaymentInfoShowType() uint32 {
	if x != nil {
		return x.PaymentInfoShowType
	}
	return 0
}

func (x *PaymentSetting) GetPaymentInfo() string {
	if x != nil {
		return x.PaymentInfo
	}
	return ""
}

func (x *PaymentSetting) GetWechat() *PaymentSetting_WechatData {
	if x != nil {
		return x.Wechat
	}
	return nil
}

func (x *PaymentSetting) GetAlipay() *PaymentSetting_AlipayData {
	if x != nil {
		return x.Alipay
	}
	return nil
}

type AccountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AccountSetting) Reset() {
	*x = AccountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSetting) ProtoMessage() {}

func (x *AccountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSetting.ProtoReflect.Descriptor instead.
func (*AccountSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{132}
}

func (x *AccountSetting) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *AccountSetting) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ChestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId        uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id,omitempty"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count,omitempty"`
	ConsumeCount   uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount,proto3" json:"consume_count,omitempty"`
	FaceBlackCount uint32 `protobuf:"varint,4,opt,name=face_black_count,json=faceBlackCount,proto3" json:"face_black_count,omitempty"`
}

func (x *ChestData) Reset() {
	*x = ChestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChestData) ProtoMessage() {}

func (x *ChestData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChestData.ProtoReflect.Descriptor instead.
func (*ChestData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{133}
}

func (x *ChestData) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *ChestData) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *ChestData) GetConsumeCount() uint32 {
	if x != nil {
		return x.ConsumeCount
	}
	return 0
}

func (x *ChestData) GetFaceBlackCount() uint32 {
	if x != nil {
		return x.FaceBlackCount
	}
	return 0
}

type ChestDataV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestId        uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId,proto3" json:"chest_id,omitempty"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count,omitempty"`
	FaceBlackCount uint32 `protobuf:"varint,3,opt,name=face_black_count,json=faceBlackCount,proto3" json:"face_black_count,omitempty"`
}

func (x *ChestDataV2) Reset() {
	*x = ChestDataV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChestDataV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChestDataV2) ProtoMessage() {}

func (x *ChestDataV2) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChestDataV2.ProtoReflect.Descriptor instead.
func (*ChestDataV2) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{134}
}

func (x *ChestDataV2) GetChestId() uint32 {
	if x != nil {
		return x.ChestId
	}
	return 0
}

func (x *ChestDataV2) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *ChestDataV2) GetFaceBlackCount() uint32 {
	if x != nil {
		return x.FaceBlackCount
	}
	return 0
}

type FaithData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaithId        uint32 `protobuf:"varint,1,opt,name=faith_id,json=faithId,proto3" json:"faith_id,omitempty"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount,proto3" json:"total_open_count,omitempty"`
	ConsumeCount   uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount,proto3" json:"consume_count,omitempty"`
	ModifyCount    int32  `protobuf:"varint,4,opt,name=modify_count,json=modifyCount,proto3" json:"modify_count,omitempty"`
}

func (x *FaithData) Reset() {
	*x = FaithData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaithData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaithData) ProtoMessage() {}

func (x *FaithData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaithData.ProtoReflect.Descriptor instead.
func (*FaithData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{135}
}

func (x *FaithData) GetFaithId() uint32 {
	if x != nil {
		return x.FaithId
	}
	return 0
}

func (x *FaithData) GetTotalOpenCount() uint32 {
	if x != nil {
		return x.TotalOpenCount
	}
	return 0
}

func (x *FaithData) GetConsumeCount() uint32 {
	if x != nil {
		return x.ConsumeCount
	}
	return 0
}

func (x *FaithData) GetModifyCount() int32 {
	if x != nil {
		return x.ModifyCount
	}
	return 0
}

type CustomizedContestBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	ContestId   uint32 `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ContestName string `protobuf:"bytes,3,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	State       uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatorId   uint32 `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreateTime  uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartTime   uint32 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime  uint32 `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Open        bool   `protobuf:"varint,9,opt,name=open,proto3" json:"open,omitempty"`
	ContestType uint32 `protobuf:"varint,10,opt,name=contest_type,json=contestType,proto3" json:"contest_type,omitempty"`
}

func (x *CustomizedContestBase) Reset() {
	*x = CustomizedContestBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestBase) ProtoMessage() {}

func (x *CustomizedContestBase) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestBase.ProtoReflect.Descriptor instead.
func (*CustomizedContestBase) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{136}
}

func (x *CustomizedContestBase) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestBase) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContestBase) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContestBase) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContestBase) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContestBase) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContestBase) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContestBase) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContestBase) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContestBase) GetContestType() uint32 {
	if x != nil {
		return x.ContestType
	}
	return 0
}

type CustomizedContestExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId     uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	PublicNotice string `protobuf:"bytes,2,opt,name=public_notice,json=publicNotice,proto3" json:"public_notice,omitempty"`
}

func (x *CustomizedContestExtend) Reset() {
	*x = CustomizedContestExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestExtend) ProtoMessage() {}

func (x *CustomizedContestExtend) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestExtend.ProtoReflect.Descriptor instead.
func (*CustomizedContestExtend) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{137}
}

func (x *CustomizedContestExtend) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestExtend) GetPublicNotice() string {
	if x != nil {
		return x.PublicNotice
	}
	return ""
}

type CustomizedContestAbstract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId     uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	ContestId    uint32 `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ContestName  string `protobuf:"bytes,3,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	State        uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatorId    uint32 `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreateTime   uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartTime    uint32 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime   uint32 `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Open         bool   `protobuf:"varint,9,opt,name=open,proto3" json:"open,omitempty"`
	PublicNotice string `protobuf:"bytes,10,opt,name=public_notice,json=publicNotice,proto3" json:"public_notice,omitempty"`
}

func (x *CustomizedContestAbstract) Reset() {
	*x = CustomizedContestAbstract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestAbstract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestAbstract) ProtoMessage() {}

func (x *CustomizedContestAbstract) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestAbstract.ProtoReflect.Descriptor instead.
func (*CustomizedContestAbstract) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{138}
}

func (x *CustomizedContestAbstract) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestAbstract) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContestAbstract) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContestAbstract) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContestAbstract) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContestAbstract) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContestAbstract) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContestAbstract) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContestAbstract) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContestAbstract) GetPublicNotice() string {
	if x != nil {
		return x.PublicNotice
	}
	return ""
}

type CustomizedContestDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId       uint32    `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	ContestId      uint32    `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ContestName    string    `protobuf:"bytes,3,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	State          uint32    `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatorId      uint32    `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreateTime     uint32    `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartTime      uint32    `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime     uint32    `protobuf:"varint,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Open           bool      `protobuf:"varint,9,opt,name=open,proto3" json:"open,omitempty"`
	RankRule       uint32    `protobuf:"varint,10,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule,omitempty"`
	GameMode       *GameMode `protobuf:"bytes,11,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	PrivateNotice  string    `protobuf:"bytes,12,opt,name=private_notice,json=privateNotice,proto3" json:"private_notice,omitempty"`
	ObserverSwitch uint32    `protobuf:"varint,13,opt,name=observer_switch,json=observerSwitch,proto3" json:"observer_switch,omitempty"`
	EmojiSwitch    uint32    `protobuf:"varint,14,opt,name=emoji_switch,json=emojiSwitch,proto3" json:"emoji_switch,omitempty"`
}

func (x *CustomizedContestDetail) Reset() {
	*x = CustomizedContestDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestDetail) ProtoMessage() {}

func (x *CustomizedContestDetail) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestDetail.ProtoReflect.Descriptor instead.
func (*CustomizedContestDetail) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{139}
}

func (x *CustomizedContestDetail) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *CustomizedContestDetail) GetContestId() uint32 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CustomizedContestDetail) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *CustomizedContestDetail) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CustomizedContestDetail) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CustomizedContestDetail) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizedContestDetail) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CustomizedContestDetail) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *CustomizedContestDetail) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CustomizedContestDetail) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *CustomizedContestDetail) GetGameMode() *GameMode {
	if x != nil {
		return x.GameMode
	}
	return nil
}

func (x *CustomizedContestDetail) GetPrivateNotice() string {
	if x != nil {
		return x.PrivateNotice
	}
	return ""
}

func (x *CustomizedContestDetail) GetObserverSwitch() uint32 {
	if x != nil {
		return x.ObserverSwitch
	}
	return 0
}

func (x *CustomizedContestDetail) GetEmojiSwitch() uint32 {
	if x != nil {
		return x.EmojiSwitch
	}
	return 0
}

type CustomizedContestPlayerReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankRule       uint32   `protobuf:"varint,1,opt,name=rank_rule,json=rankRule,proto3" json:"rank_rule,omitempty"`
	Rank           uint32   `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Point          int32    `protobuf:"varint,3,opt,name=point,proto3" json:"point,omitempty"`
	GameRanks      []uint32 `protobuf:"varint,4,rep,packed,name=game_ranks,json=gameRanks,proto3" json:"game_ranks,omitempty"`
	TotalGameCount uint32   `protobuf:"varint,5,opt,name=total_game_count,json=totalGameCount,proto3" json:"total_game_count,omitempty"`
}

func (x *CustomizedContestPlayerReport) Reset() {
	*x = CustomizedContestPlayerReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestPlayerReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestPlayerReport) ProtoMessage() {}

func (x *CustomizedContestPlayerReport) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestPlayerReport.ProtoReflect.Descriptor instead.
func (*CustomizedContestPlayerReport) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{140}
}

func (x *CustomizedContestPlayerReport) GetRankRule() uint32 {
	if x != nil {
		return x.RankRule
	}
	return 0
}

func (x *CustomizedContestPlayerReport) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *CustomizedContestPlayerReport) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *CustomizedContestPlayerReport) GetGameRanks() []uint32 {
	if x != nil {
		return x.GameRanks
	}
	return nil
}

func (x *CustomizedContestPlayerReport) GetTotalGameCount() uint32 {
	if x != nil {
		return x.TotalGameCount
	}
	return 0
}

type RecordGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string                    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	StartTime uint32                    `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint32                    `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Config    *GameConfig               `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	Accounts  []*RecordGame_AccountInfo `protobuf:"bytes,11,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Result    *GameEndResult            `protobuf:"bytes,12,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RecordGame) Reset() {
	*x = RecordGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGame) ProtoMessage() {}

func (x *RecordGame) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGame.ProtoReflect.Descriptor instead.
func (*RecordGame) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{141}
}

func (x *RecordGame) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecordGame) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RecordGame) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RecordGame) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RecordGame) GetAccounts() []*RecordGame_AccountInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *RecordGame) GetResult() *GameEndResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CustomizedContestGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*CustomizedContestGameStart_Item `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *CustomizedContestGameStart) Reset() {
	*x = CustomizedContestGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameStart) ProtoMessage() {}

func (x *CustomizedContestGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameStart.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameStart) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{142}
}

func (x *CustomizedContestGameStart) GetPlayers() []*CustomizedContestGameStart_Item {
	if x != nil {
		return x.Players
	}
	return nil
}

type CustomizedContestGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*CustomizedContestGameEnd_Item `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *CustomizedContestGameEnd) Reset() {
	*x = CustomizedContestGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameEnd) ProtoMessage() {}

func (x *CustomizedContestGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameEnd.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameEnd) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{143}
}

func (x *CustomizedContestGameEnd) GetPlayers() []*CustomizedContestGameEnd_Item {
	if x != nil {
		return x.Players
	}
	return nil
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	StartTime  uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{144}
}

func (x *Activity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Activity) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Activity) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Activity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ExchangeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId uint32 `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ExchangeRecord) Reset() {
	*x = ExchangeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRecord) ProtoMessage() {}

func (x *ExchangeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRecord.ProtoReflect.Descriptor instead.
func (*ExchangeRecord) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{145}
}

func (x *ExchangeRecord) GetExchangeId() uint32 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *ExchangeRecord) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ActivityAccumulatedPointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId       uint32   `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Point            int32    `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	GainedRewardList []uint32 `protobuf:"varint,3,rep,packed,name=gained_reward_list,json=gainedRewardList,proto3" json:"gained_reward_list,omitempty"`
}

func (x *ActivityAccumulatedPointData) Reset() {
	*x = ActivityAccumulatedPointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityAccumulatedPointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityAccumulatedPointData) ProtoMessage() {}

func (x *ActivityAccumulatedPointData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityAccumulatedPointData.ProtoReflect.Descriptor instead.
func (*ActivityAccumulatedPointData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{146}
}

func (x *ActivityAccumulatedPointData) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityAccumulatedPointData) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ActivityAccumulatedPointData) GetGainedRewardList() []uint32 {
	if x != nil {
		return x.GainedRewardList
	}
	return nil
}

type ActivityRankPointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id,omitempty"`
	Point         int32  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	GainedReward  bool   `protobuf:"varint,3,opt,name=gained_reward,json=gainedReward,proto3" json:"gained_reward,omitempty"`
	GainableTime  uint32 `protobuf:"varint,4,opt,name=gainable_time,json=gainableTime,proto3" json:"gainable_time,omitempty"`
}

func (x *ActivityRankPointData) Reset() {
	*x = ActivityRankPointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRankPointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRankPointData) ProtoMessage() {}

func (x *ActivityRankPointData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRankPointData.ProtoReflect.Descriptor instead.
func (*ActivityRankPointData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{147}
}

func (x *ActivityRankPointData) GetLeaderboardId() uint32 {
	if x != nil {
		return x.LeaderboardId
	}
	return 0
}

func (x *ActivityRankPointData) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ActivityRankPointData) GetGainedReward() bool {
	if x != nil {
		return x.GainedReward
	}
	return false
}

func (x *ActivityRankPointData) GetGainableTime() uint32 {
	if x != nil {
		return x.GainableTime
	}
	return 0
}

type GameRoundHuData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hupai          *GameRoundHuData_HuPai `protobuf:"bytes,1,opt,name=hupai,proto3" json:"hupai,omitempty"`
	Fans           []*GameRoundHuData_Fan `protobuf:"bytes,2,rep,name=fans,proto3" json:"fans,omitempty"`
	Score          uint32                 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Xun            uint32                 `protobuf:"varint,4,opt,name=xun,proto3" json:"xun,omitempty"`
	TitleId        uint32                 `protobuf:"varint,5,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	FanSum         uint32                 `protobuf:"varint,6,opt,name=fan_sum,json=fanSum,proto3" json:"fan_sum,omitempty"`
	FuSum          uint32                 `protobuf:"varint,7,opt,name=fu_sum,json=fuSum,proto3" json:"fu_sum,omitempty"`
	YakumanCount   uint32                 `protobuf:"varint,8,opt,name=yakuman_count,json=yakumanCount,proto3" json:"yakuman_count,omitempty"`
	BiaoDoraCount  uint32                 `protobuf:"varint,9,opt,name=biao_dora_count,json=biaoDoraCount,proto3" json:"biao_dora_count,omitempty"`
	RedDoraCount   uint32                 `protobuf:"varint,10,opt,name=red_dora_count,json=redDoraCount,proto3" json:"red_dora_count,omitempty"`
	LiDoraCount    uint32                 `protobuf:"varint,11,opt,name=li_dora_count,json=liDoraCount,proto3" json:"li_dora_count,omitempty"`
	BabeiCount     uint32                 `protobuf:"varint,12,opt,name=babei_count,json=babeiCount,proto3" json:"babei_count,omitempty"`
	XuanShangCount uint32                 `protobuf:"varint,13,opt,name=xuan_shang_count,json=xuanShangCount,proto3" json:"xuan_shang_count,omitempty"`
}

func (x *GameRoundHuData) Reset() {
	*x = GameRoundHuData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundHuData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundHuData) ProtoMessage() {}

func (x *GameRoundHuData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundHuData.ProtoReflect.Descriptor instead.
func (*GameRoundHuData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{148}
}

func (x *GameRoundHuData) GetHupai() *GameRoundHuData_HuPai {
	if x != nil {
		return x.Hupai
	}
	return nil
}

func (x *GameRoundHuData) GetFans() []*GameRoundHuData_Fan {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *GameRoundHuData) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameRoundHuData) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

func (x *GameRoundHuData) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *GameRoundHuData) GetFanSum() uint32 {
	if x != nil {
		return x.FanSum
	}
	return 0
}

func (x *GameRoundHuData) GetFuSum() uint32 {
	if x != nil {
		return x.FuSum
	}
	return 0
}

func (x *GameRoundHuData) GetYakumanCount() uint32 {
	if x != nil {
		return x.YakumanCount
	}
	return 0
}

func (x *GameRoundHuData) GetBiaoDoraCount() uint32 {
	if x != nil {
		return x.BiaoDoraCount
	}
	return 0
}

func (x *GameRoundHuData) GetRedDoraCount() uint32 {
	if x != nil {
		return x.RedDoraCount
	}
	return 0
}

func (x *GameRoundHuData) GetLiDoraCount() uint32 {
	if x != nil {
		return x.LiDoraCount
	}
	return 0
}

func (x *GameRoundHuData) GetBabeiCount() uint32 {
	if x != nil {
		return x.BabeiCount
	}
	return 0
}

func (x *GameRoundHuData) GetXuanShangCount() uint32 {
	if x != nil {
		return x.XuanShangCount
	}
	return 0
}

type GameRoundPlayerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           uint32           `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Hands          []string         `protobuf:"bytes,2,rep,name=hands,proto3" json:"hands,omitempty"`
	Ming           []string         `protobuf:"bytes,3,rep,name=ming,proto3" json:"ming,omitempty"`
	LiqiType       uint32           `protobuf:"varint,4,opt,name=liqi_type,json=liqiType,proto3" json:"liqi_type,omitempty"`
	IsFulu         bool             `protobuf:"varint,5,opt,name=is_fulu,json=isFulu,proto3" json:"is_fulu,omitempty"`
	IsLiujumanguan bool             `protobuf:"varint,6,opt,name=is_liujumanguan,json=isLiujumanguan,proto3" json:"is_liujumanguan,omitempty"`
	LianZhuang     uint32           `protobuf:"varint,7,opt,name=lian_zhuang,json=lianZhuang,proto3" json:"lian_zhuang,omitempty"`
	Hu             *GameRoundHuData `protobuf:"bytes,8,opt,name=hu,proto3" json:"hu,omitempty"`
}

func (x *GameRoundPlayerResult) Reset() {
	*x = GameRoundPlayerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundPlayerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundPlayerResult) ProtoMessage() {}

func (x *GameRoundPlayerResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundPlayerResult.ProtoReflect.Descriptor instead.
func (*GameRoundPlayerResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{149}
}

func (x *GameRoundPlayerResult) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameRoundPlayerResult) GetHands() []string {
	if x != nil {
		return x.Hands
	}
	return nil
}

func (x *GameRoundPlayerResult) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *GameRoundPlayerResult) GetLiqiType() uint32 {
	if x != nil {
		return x.LiqiType
	}
	return 0
}

func (x *GameRoundPlayerResult) GetIsFulu() bool {
	if x != nil {
		return x.IsFulu
	}
	return false
}

func (x *GameRoundPlayerResult) GetIsLiujumanguan() bool {
	if x != nil {
		return x.IsLiujumanguan
	}
	return false
}

func (x *GameRoundPlayerResult) GetLianZhuang() uint32 {
	if x != nil {
		return x.LianZhuang
	}
	return 0
}

func (x *GameRoundPlayerResult) GetHu() *GameRoundHuData {
	if x != nil {
		return x.Hu
	}
	return nil
}

type GameRoundPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score  int32                  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Rank   uint32                 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Result *GameRoundPlayerResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GameRoundPlayer) Reset() {
	*x = GameRoundPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundPlayer) ProtoMessage() {}

func (x *GameRoundPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundPlayer.ProtoReflect.Descriptor instead.
func (*GameRoundPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{150}
}

func (x *GameRoundPlayer) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameRoundPlayer) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameRoundPlayer) GetResult() *GameRoundPlayerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GameRoundSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ju      uint32             `protobuf:"varint,1,opt,name=ju,proto3" json:"ju,omitempty"`
	Ben     uint32             `protobuf:"varint,2,opt,name=ben,proto3" json:"ben,omitempty"`
	Players []*GameRoundPlayer `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *GameRoundSnapshot) Reset() {
	*x = GameRoundSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundSnapshot) ProtoMessage() {}

func (x *GameRoundSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundSnapshot.ProtoReflect.Descriptor instead.
func (*GameRoundSnapshot) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{151}
}

func (x *GameRoundSnapshot) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *GameRoundSnapshot) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *GameRoundSnapshot) GetPlayers() []*GameRoundPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

type GameFinalSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string                            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	State          uint32                            `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Category       uint32                            `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`
	Mode           *GameMode                         `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Meta           *GameMetaData                     `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	CalculateParam *GameFinalSnapshot_CalculateParam `protobuf:"bytes,6,opt,name=calculate_param,json=calculateParam,proto3" json:"calculate_param,omitempty"`
	CreateTime     uint32                            `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartTime      uint32                            `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime     uint32                            `protobuf:"varint,9,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Seats          []*GameFinalSnapshot_GameSeat     `protobuf:"bytes,10,rep,name=seats,proto3" json:"seats,omitempty"`
	Rounds         []*GameRoundSnapshot              `protobuf:"bytes,11,rep,name=rounds,proto3" json:"rounds,omitempty"`
	AccountViews   []*PlayerGameView                 `protobuf:"bytes,12,rep,name=account_views,json=accountViews,proto3" json:"account_views,omitempty"`
	FinalPlayers   []*GameFinalSnapshot_FinalPlayer  `protobuf:"bytes,13,rep,name=final_players,json=finalPlayers,proto3" json:"final_players,omitempty"`
	AfkInfo        []*GameFinalSnapshot_AFKInfo      `protobuf:"bytes,14,rep,name=afk_info,json=afkInfo,proto3" json:"afk_info,omitempty"`
}

func (x *GameFinalSnapshot) Reset() {
	*x = GameFinalSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot) ProtoMessage() {}

func (x *GameFinalSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{152}
}

func (x *GameFinalSnapshot) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameFinalSnapshot) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GameFinalSnapshot) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GameFinalSnapshot) GetMode() *GameMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *GameFinalSnapshot) GetMeta() *GameMetaData {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GameFinalSnapshot) GetCalculateParam() *GameFinalSnapshot_CalculateParam {
	if x != nil {
		return x.CalculateParam
	}
	return nil
}

func (x *GameFinalSnapshot) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GameFinalSnapshot) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameFinalSnapshot) GetFinishTime() uint32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *GameFinalSnapshot) GetSeats() []*GameFinalSnapshot_GameSeat {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *GameFinalSnapshot) GetRounds() []*GameRoundSnapshot {
	if x != nil {
		return x.Rounds
	}
	return nil
}

func (x *GameFinalSnapshot) GetAccountViews() []*PlayerGameView {
	if x != nil {
		return x.AccountViews
	}
	return nil
}

func (x *GameFinalSnapshot) GetFinalPlayers() []*GameFinalSnapshot_FinalPlayer {
	if x != nil {
		return x.FinalPlayers
	}
	return nil
}

func (x *GameFinalSnapshot) GetAfkInfo() []*GameFinalSnapshot_AFKInfo {
	if x != nil {
		return x.AfkInfo
	}
	return nil
}

type RecordCollectedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
	StartTime uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *RecordCollectedData) Reset() {
	*x = RecordCollectedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordCollectedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCollectedData) ProtoMessage() {}

func (x *RecordCollectedData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordCollectedData.ProtoReflect.Descriptor instead.
func (*RecordCollectedData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{153}
}

func (x *RecordCollectedData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecordCollectedData) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *RecordCollectedData) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RecordCollectedData) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ContestDetailRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitPoint               uint32 `protobuf:"varint,5,opt,name=init_point,json=initPoint,proto3" json:"init_point,omitempty"`
	Fandian                 uint32 `protobuf:"varint,6,opt,name=fandian,proto3" json:"fandian,omitempty"`
	CanJifei                bool   `protobuf:"varint,7,opt,name=can_jifei,json=canJifei,proto3" json:"can_jifei,omitempty"`
	TianbianValue           uint32 `protobuf:"varint,8,opt,name=tianbian_value,json=tianbianValue,proto3" json:"tianbian_value,omitempty"`
	LiqibangValue           uint32 `protobuf:"varint,9,opt,name=liqibang_value,json=liqibangValue,proto3" json:"liqibang_value,omitempty"`
	ChangbangValue          uint32 `protobuf:"varint,10,opt,name=changbang_value,json=changbangValue,proto3" json:"changbang_value,omitempty"`
	NotingFafu_1            uint32 `protobuf:"varint,11,opt,name=noting_fafu_1,json=notingFafu1,proto3" json:"noting_fafu_1,omitempty"`
	NotingFafu_2            uint32 `protobuf:"varint,12,opt,name=noting_fafu_2,json=notingFafu2,proto3" json:"noting_fafu_2,omitempty"`
	NotingFafu_3            uint32 `protobuf:"varint,13,opt,name=noting_fafu_3,json=notingFafu3,proto3" json:"noting_fafu_3,omitempty"`
	HaveLiujumanguan        bool   `protobuf:"varint,14,opt,name=have_liujumanguan,json=haveLiujumanguan,proto3" json:"have_liujumanguan,omitempty"`
	HaveQieshangmanguan     bool   `protobuf:"varint,15,opt,name=have_qieshangmanguan,json=haveQieshangmanguan,proto3" json:"have_qieshangmanguan,omitempty"`
	HaveBiaoDora            bool   `protobuf:"varint,16,opt,name=have_biao_dora,json=haveBiaoDora,proto3" json:"have_biao_dora,omitempty"`
	HaveGangBiaoDora        bool   `protobuf:"varint,17,opt,name=have_gang_biao_dora,json=haveGangBiaoDora,proto3" json:"have_gang_biao_dora,omitempty"`
	MingDoraImmediatelyOpen bool   `protobuf:"varint,18,opt,name=ming_dora_immediately_open,json=mingDoraImmediatelyOpen,proto3" json:"ming_dora_immediately_open,omitempty"`
	HaveLiDora              bool   `protobuf:"varint,19,opt,name=have_li_dora,json=haveLiDora,proto3" json:"have_li_dora,omitempty"`
	HaveGangLiDora          bool   `protobuf:"varint,20,opt,name=have_gang_li_dora,json=haveGangLiDora,proto3" json:"have_gang_li_dora,omitempty"`
	HaveSifenglianda        bool   `protobuf:"varint,21,opt,name=have_sifenglianda,json=haveSifenglianda,proto3" json:"have_sifenglianda,omitempty"`
	HaveSigangsanle         bool   `protobuf:"varint,22,opt,name=have_sigangsanle,json=haveSigangsanle,proto3" json:"have_sigangsanle,omitempty"`
	HaveSijializhi          bool   `protobuf:"varint,23,opt,name=have_sijializhi,json=haveSijializhi,proto3" json:"have_sijializhi,omitempty"`
	HaveJiuzhongjiupai      bool   `protobuf:"varint,24,opt,name=have_jiuzhongjiupai,json=haveJiuzhongjiupai,proto3" json:"have_jiuzhongjiupai,omitempty"`
	HaveSanjiahele          bool   `protobuf:"varint,25,opt,name=have_sanjiahele,json=haveSanjiahele,proto3" json:"have_sanjiahele,omitempty"`
	HaveToutiao             bool   `protobuf:"varint,26,opt,name=have_toutiao,json=haveToutiao,proto3" json:"have_toutiao,omitempty"`
	HaveHelelianzhuang      bool   `protobuf:"varint,27,opt,name=have_helelianzhuang,json=haveHelelianzhuang,proto3" json:"have_helelianzhuang,omitempty"`
	HaveHelezhongju         bool   `protobuf:"varint,28,opt,name=have_helezhongju,json=haveHelezhongju,proto3" json:"have_helezhongju,omitempty"`
	HaveTingpailianzhuang   bool   `protobuf:"varint,29,opt,name=have_tingpailianzhuang,json=haveTingpailianzhuang,proto3" json:"have_tingpailianzhuang,omitempty"`
	HaveTingpaizhongju      bool   `protobuf:"varint,30,opt,name=have_tingpaizhongju,json=haveTingpaizhongju,proto3" json:"have_tingpaizhongju,omitempty"`
	HaveYifa                bool   `protobuf:"varint,31,opt,name=have_yifa,json=haveYifa,proto3" json:"have_yifa,omitempty"`
	HaveNanruxiru           bool   `protobuf:"varint,32,opt,name=have_nanruxiru,json=haveNanruxiru,proto3" json:"have_nanruxiru,omitempty"`
	Jingsuanyuandian        uint32 `protobuf:"varint,33,opt,name=jingsuanyuandian,proto3" json:"jingsuanyuandian,omitempty"`
	Shunweima_2             int32  `protobuf:"varint,34,opt,name=shunweima_2,json=shunweima2,proto3" json:"shunweima_2,omitempty"`
	Shunweima_3             int32  `protobuf:"varint,35,opt,name=shunweima_3,json=shunweima3,proto3" json:"shunweima_3,omitempty"`
	Shunweima_4             int32  `protobuf:"varint,36,opt,name=shunweima_4,json=shunweima4,proto3" json:"shunweima_4,omitempty"`
	Bianjietishi            bool   `protobuf:"varint,37,opt,name=bianjietishi,proto3" json:"bianjietishi,omitempty"`
	AiLevel                 uint32 `protobuf:"varint,38,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level,omitempty"`
	HaveZimosun             bool   `protobuf:"varint,39,opt,name=have_zimosun,json=haveZimosun,proto3" json:"have_zimosun,omitempty"`
	DisableMultiYukaman     bool   `protobuf:"varint,40,opt,name=disable_multi_yukaman,json=disableMultiYukaman,proto3" json:"disable_multi_yukaman,omitempty"`
	GuyiMode                uint32 `protobuf:"varint,41,opt,name=guyi_mode,json=guyiMode,proto3" json:"guyi_mode,omitempty"`
	DisableLeijiyiman       bool   `protobuf:"varint,42,opt,name=disable_leijiyiman,json=disableLeijiyiman,proto3" json:"disable_leijiyiman,omitempty"`
}

func (x *ContestDetailRule) Reset() {
	*x = ContestDetailRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestDetailRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestDetailRule) ProtoMessage() {}

func (x *ContestDetailRule) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestDetailRule.ProtoReflect.Descriptor instead.
func (*ContestDetailRule) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{154}
}

func (x *ContestDetailRule) GetInitPoint() uint32 {
	if x != nil {
		return x.InitPoint
	}
	return 0
}

func (x *ContestDetailRule) GetFandian() uint32 {
	if x != nil {
		return x.Fandian
	}
	return 0
}

func (x *ContestDetailRule) GetCanJifei() bool {
	if x != nil {
		return x.CanJifei
	}
	return false
}

func (x *ContestDetailRule) GetTianbianValue() uint32 {
	if x != nil {
		return x.TianbianValue
	}
	return 0
}

func (x *ContestDetailRule) GetLiqibangValue() uint32 {
	if x != nil {
		return x.LiqibangValue
	}
	return 0
}

func (x *ContestDetailRule) GetChangbangValue() uint32 {
	if x != nil {
		return x.ChangbangValue
	}
	return 0
}

func (x *ContestDetailRule) GetNotingFafu_1() uint32 {
	if x != nil {
		return x.NotingFafu_1
	}
	return 0
}

func (x *ContestDetailRule) GetNotingFafu_2() uint32 {
	if x != nil {
		return x.NotingFafu_2
	}
	return 0
}

func (x *ContestDetailRule) GetNotingFafu_3() uint32 {
	if x != nil {
		return x.NotingFafu_3
	}
	return 0
}

func (x *ContestDetailRule) GetHaveLiujumanguan() bool {
	if x != nil {
		return x.HaveLiujumanguan
	}
	return false
}

func (x *ContestDetailRule) GetHaveQieshangmanguan() bool {
	if x != nil {
		return x.HaveQieshangmanguan
	}
	return false
}

func (x *ContestDetailRule) GetHaveBiaoDora() bool {
	if x != nil {
		return x.HaveBiaoDora
	}
	return false
}

func (x *ContestDetailRule) GetHaveGangBiaoDora() bool {
	if x != nil {
		return x.HaveGangBiaoDora
	}
	return false
}

func (x *ContestDetailRule) GetMingDoraImmediatelyOpen() bool {
	if x != nil {
		return x.MingDoraImmediatelyOpen
	}
	return false
}

func (x *ContestDetailRule) GetHaveLiDora() bool {
	if x != nil {
		return x.HaveLiDora
	}
	return false
}

func (x *ContestDetailRule) GetHaveGangLiDora() bool {
	if x != nil {
		return x.HaveGangLiDora
	}
	return false
}

func (x *ContestDetailRule) GetHaveSifenglianda() bool {
	if x != nil {
		return x.HaveSifenglianda
	}
	return false
}

func (x *ContestDetailRule) GetHaveSigangsanle() bool {
	if x != nil {
		return x.HaveSigangsanle
	}
	return false
}

func (x *ContestDetailRule) GetHaveSijializhi() bool {
	if x != nil {
		return x.HaveSijializhi
	}
	return false
}

func (x *ContestDetailRule) GetHaveJiuzhongjiupai() bool {
	if x != nil {
		return x.HaveJiuzhongjiupai
	}
	return false
}

func (x *ContestDetailRule) GetHaveSanjiahele() bool {
	if x != nil {
		return x.HaveSanjiahele
	}
	return false
}

func (x *ContestDetailRule) GetHaveToutiao() bool {
	if x != nil {
		return x.HaveToutiao
	}
	return false
}

func (x *ContestDetailRule) GetHaveHelelianzhuang() bool {
	if x != nil {
		return x.HaveHelelianzhuang
	}
	return false
}

func (x *ContestDetailRule) GetHaveHelezhongju() bool {
	if x != nil {
		return x.HaveHelezhongju
	}
	return false
}

func (x *ContestDetailRule) GetHaveTingpailianzhuang() bool {
	if x != nil {
		return x.HaveTingpailianzhuang
	}
	return false
}

func (x *ContestDetailRule) GetHaveTingpaizhongju() bool {
	if x != nil {
		return x.HaveTingpaizhongju
	}
	return false
}

func (x *ContestDetailRule) GetHaveYifa() bool {
	if x != nil {
		return x.HaveYifa
	}
	return false
}

func (x *ContestDetailRule) GetHaveNanruxiru() bool {
	if x != nil {
		return x.HaveNanruxiru
	}
	return false
}

func (x *ContestDetailRule) GetJingsuanyuandian() uint32 {
	if x != nil {
		return x.Jingsuanyuandian
	}
	return 0
}

func (x *ContestDetailRule) GetShunweima_2() int32 {
	if x != nil {
		return x.Shunweima_2
	}
	return 0
}

func (x *ContestDetailRule) GetShunweima_3() int32 {
	if x != nil {
		return x.Shunweima_3
	}
	return 0
}

func (x *ContestDetailRule) GetShunweima_4() int32 {
	if x != nil {
		return x.Shunweima_4
	}
	return 0
}

func (x *ContestDetailRule) GetBianjietishi() bool {
	if x != nil {
		return x.Bianjietishi
	}
	return false
}

func (x *ContestDetailRule) GetAiLevel() uint32 {
	if x != nil {
		return x.AiLevel
	}
	return 0
}

func (x *ContestDetailRule) GetHaveZimosun() bool {
	if x != nil {
		return x.HaveZimosun
	}
	return false
}

func (x *ContestDetailRule) GetDisableMultiYukaman() bool {
	if x != nil {
		return x.DisableMultiYukaman
	}
	return false
}

func (x *ContestDetailRule) GetGuyiMode() uint32 {
	if x != nil {
		return x.GuyiMode
	}
	return 0
}

func (x *ContestDetailRule) GetDisableLeijiyiman() bool {
	if x != nil {
		return x.DisableLeijiyiman
	}
	return false
}

type ContestDetailRuleV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRule  *ContestDetailRule             `protobuf:"bytes,1,opt,name=game_rule,json=gameRule,proto3" json:"game_rule,omitempty"`
	ExtraRule *ContestDetailRuleV2_ExtraRule `protobuf:"bytes,2,opt,name=extra_rule,json=extraRule,proto3" json:"extra_rule,omitempty"`
}

func (x *ContestDetailRuleV2) Reset() {
	*x = ContestDetailRuleV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestDetailRuleV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestDetailRuleV2) ProtoMessage() {}

func (x *ContestDetailRuleV2) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestDetailRuleV2.ProtoReflect.Descriptor instead.
func (*ContestDetailRuleV2) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{155}
}

func (x *ContestDetailRuleV2) GetGameRule() *ContestDetailRule {
	if x != nil {
		return x.GameRule
	}
	return nil
}

func (x *ContestDetailRuleV2) GetExtraRule() *ContestDetailRuleV2_ExtraRule {
	if x != nil {
		return x.ExtraRule
	}
	return nil
}

type GameRuleSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundType     uint32               `protobuf:"varint,1,opt,name=round_type,json=roundType,proto3" json:"round_type,omitempty"`
	Shiduan       bool                 `protobuf:"varint,2,opt,name=shiduan,proto3" json:"shiduan,omitempty"`
	DoraCount     uint32               `protobuf:"varint,3,opt,name=dora_count,json=doraCount,proto3" json:"dora_count,omitempty"`
	ThinkingType  uint32               `protobuf:"varint,4,opt,name=thinking_type,json=thinkingType,proto3" json:"thinking_type,omitempty"`
	UseDetailRule bool                 `protobuf:"varint,5,opt,name=use_detail_rule,json=useDetailRule,proto3" json:"use_detail_rule,omitempty"`
	DetailRuleV2  *ContestDetailRuleV2 `protobuf:"bytes,6,opt,name=detail_rule_v2,json=detailRuleV2,proto3" json:"detail_rule_v2,omitempty"`
}

func (x *GameRuleSetting) Reset() {
	*x = GameRuleSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRuleSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRuleSetting) ProtoMessage() {}

func (x *GameRuleSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRuleSetting.ProtoReflect.Descriptor instead.
func (*GameRuleSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{156}
}

func (x *GameRuleSetting) GetRoundType() uint32 {
	if x != nil {
		return x.RoundType
	}
	return 0
}

func (x *GameRuleSetting) GetShiduan() bool {
	if x != nil {
		return x.Shiduan
	}
	return false
}

func (x *GameRuleSetting) GetDoraCount() uint32 {
	if x != nil {
		return x.DoraCount
	}
	return 0
}

func (x *GameRuleSetting) GetThinkingType() uint32 {
	if x != nil {
		return x.ThinkingType
	}
	return 0
}

func (x *GameRuleSetting) GetUseDetailRule() bool {
	if x != nil {
		return x.UseDetailRule
	}
	return false
}

func (x *GameRuleSetting) GetDetailRuleV2() *ContestDetailRuleV2 {
	if x != nil {
		return x.DetailRuleV2
	}
	return nil
}

type RecordTingPaiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile          string `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile,omitempty"`
	Haveyi        bool   `protobuf:"varint,2,opt,name=haveyi,proto3" json:"haveyi,omitempty"`
	Yiman         bool   `protobuf:"varint,3,opt,name=yiman,proto3" json:"yiman,omitempty"`
	Count         uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Fu            uint32 `protobuf:"varint,5,opt,name=fu,proto3" json:"fu,omitempty"`
	BiaoDoraCount uint32 `protobuf:"varint,6,opt,name=biao_dora_count,json=biaoDoraCount,proto3" json:"biao_dora_count,omitempty"`
	YimanZimo     bool   `protobuf:"varint,7,opt,name=yiman_zimo,json=yimanZimo,proto3" json:"yiman_zimo,omitempty"`
	CountZimo     uint32 `protobuf:"varint,8,opt,name=count_zimo,json=countZimo,proto3" json:"count_zimo,omitempty"`
	FuZimo        uint32 `protobuf:"varint,9,opt,name=fu_zimo,json=fuZimo,proto3" json:"fu_zimo,omitempty"`
}

func (x *RecordTingPaiInfo) Reset() {
	*x = RecordTingPaiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordTingPaiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordTingPaiInfo) ProtoMessage() {}

func (x *RecordTingPaiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordTingPaiInfo.ProtoReflect.Descriptor instead.
func (*RecordTingPaiInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{157}
}

func (x *RecordTingPaiInfo) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *RecordTingPaiInfo) GetHaveyi() bool {
	if x != nil {
		return x.Haveyi
	}
	return false
}

func (x *RecordTingPaiInfo) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *RecordTingPaiInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RecordTingPaiInfo) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *RecordTingPaiInfo) GetBiaoDoraCount() uint32 {
	if x != nil {
		return x.BiaoDoraCount
	}
	return 0
}

func (x *RecordTingPaiInfo) GetYimanZimo() bool {
	if x != nil {
		return x.YimanZimo
	}
	return false
}

func (x *RecordTingPaiInfo) GetCountZimo() uint32 {
	if x != nil {
		return x.CountZimo
	}
	return 0
}

func (x *RecordTingPaiInfo) GetFuZimo() uint32 {
	if x != nil {
		return x.FuZimo
	}
	return 0
}

type RecordNoTilePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tingpai bool                 `protobuf:"varint,3,opt,name=tingpai,proto3" json:"tingpai,omitempty"`
	Hand    []string             `protobuf:"bytes,4,rep,name=hand,proto3" json:"hand,omitempty"`
	Tings   []*RecordTingPaiInfo `protobuf:"bytes,5,rep,name=tings,proto3" json:"tings,omitempty"`
}

func (x *RecordNoTilePlayerInfo) Reset() {
	*x = RecordNoTilePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoTilePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoTilePlayerInfo) ProtoMessage() {}

func (x *RecordNoTilePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoTilePlayerInfo.ProtoReflect.Descriptor instead.
func (*RecordNoTilePlayerInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{158}
}

func (x *RecordNoTilePlayerInfo) GetTingpai() bool {
	if x != nil {
		return x.Tingpai
	}
	return false
}

func (x *RecordNoTilePlayerInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *RecordNoTilePlayerInfo) GetTings() []*RecordTingPaiInfo {
	if x != nil {
		return x.Tings
	}
	return nil
}

type RecordHuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hand          []string                        `protobuf:"bytes,1,rep,name=hand,proto3" json:"hand,omitempty"`
	Ming          []string                        `protobuf:"bytes,2,rep,name=ming,proto3" json:"ming,omitempty"`
	HuTile        string                          `protobuf:"bytes,3,opt,name=hu_tile,json=huTile,proto3" json:"hu_tile,omitempty"`
	Seat          uint32                          `protobuf:"varint,4,opt,name=seat,proto3" json:"seat,omitempty"`
	Zimo          bool                            `protobuf:"varint,5,opt,name=zimo,proto3" json:"zimo,omitempty"`
	Qinjia        bool                            `protobuf:"varint,6,opt,name=qinjia,proto3" json:"qinjia,omitempty"`
	Liqi          bool                            `protobuf:"varint,7,opt,name=liqi,proto3" json:"liqi,omitempty"`
	Doras         []string                        `protobuf:"bytes,8,rep,name=doras,proto3" json:"doras,omitempty"`
	LiDoras       []string                        `protobuf:"bytes,9,rep,name=li_doras,json=liDoras,proto3" json:"li_doras,omitempty"`
	Yiman         bool                            `protobuf:"varint,10,opt,name=yiman,proto3" json:"yiman,omitempty"`
	Count         uint32                          `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	Fans          []*RecordHuleInfo_RecordFanInfo `protobuf:"bytes,12,rep,name=fans,proto3" json:"fans,omitempty"`
	Fu            uint32                          `protobuf:"varint,13,opt,name=fu,proto3" json:"fu,omitempty"`
	PointZimoQin  uint32                          `protobuf:"varint,14,opt,name=point_zimo_qin,json=pointZimoQin,proto3" json:"point_zimo_qin,omitempty"`
	PointZimoXian uint32                          `protobuf:"varint,15,opt,name=point_zimo_xian,json=pointZimoXian,proto3" json:"point_zimo_xian,omitempty"`
	TitleId       uint32                          `protobuf:"varint,16,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	PointSum      uint32                          `protobuf:"varint,17,opt,name=point_sum,json=pointSum,proto3" json:"point_sum,omitempty"`
	Dadian        uint32                          `protobuf:"varint,18,opt,name=dadian,proto3" json:"dadian,omitempty"`
	IsJueZhang    bool                            `protobuf:"varint,19,opt,name=is_jue_zhang,json=isJueZhang,proto3" json:"is_jue_zhang,omitempty"`
	Xun           uint32                          `protobuf:"varint,20,opt,name=xun,proto3" json:"xun,omitempty"`
	TingType      uint32                          `protobuf:"varint,21,opt,name=ting_type,json=tingType,proto3" json:"ting_type,omitempty"`
}

func (x *RecordHuleInfo) Reset() {
	*x = RecordHuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHuleInfo) ProtoMessage() {}

func (x *RecordHuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHuleInfo.ProtoReflect.Descriptor instead.
func (*RecordHuleInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{159}
}

func (x *RecordHuleInfo) GetHand() []string {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *RecordHuleInfo) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *RecordHuleInfo) GetHuTile() string {
	if x != nil {
		return x.HuTile
	}
	return ""
}

func (x *RecordHuleInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordHuleInfo) GetZimo() bool {
	if x != nil {
		return x.Zimo
	}
	return false
}

func (x *RecordHuleInfo) GetQinjia() bool {
	if x != nil {
		return x.Qinjia
	}
	return false
}

func (x *RecordHuleInfo) GetLiqi() bool {
	if x != nil {
		return x.Liqi
	}
	return false
}

func (x *RecordHuleInfo) GetDoras() []string {
	if x != nil {
		return x.Doras
	}
	return nil
}

func (x *RecordHuleInfo) GetLiDoras() []string {
	if x != nil {
		return x.LiDoras
	}
	return nil
}

func (x *RecordHuleInfo) GetYiman() bool {
	if x != nil {
		return x.Yiman
	}
	return false
}

func (x *RecordHuleInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RecordHuleInfo) GetFans() []*RecordHuleInfo_RecordFanInfo {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *RecordHuleInfo) GetFu() uint32 {
	if x != nil {
		return x.Fu
	}
	return 0
}

func (x *RecordHuleInfo) GetPointZimoQin() uint32 {
	if x != nil {
		return x.PointZimoQin
	}
	return 0
}

func (x *RecordHuleInfo) GetPointZimoXian() uint32 {
	if x != nil {
		return x.PointZimoXian
	}
	return 0
}

func (x *RecordHuleInfo) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *RecordHuleInfo) GetPointSum() uint32 {
	if x != nil {
		return x.PointSum
	}
	return 0
}

func (x *RecordHuleInfo) GetDadian() uint32 {
	if x != nil {
		return x.Dadian
	}
	return 0
}

func (x *RecordHuleInfo) GetIsJueZhang() bool {
	if x != nil {
		return x.IsJueZhang
	}
	return false
}

func (x *RecordHuleInfo) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

func (x *RecordHuleInfo) GetTingType() uint32 {
	if x != nil {
		return x.TingType
	}
	return 0
}

type RecordHulesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat  int32             `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Hules []*RecordHuleInfo `protobuf:"bytes,2,rep,name=hules,proto3" json:"hules,omitempty"`
}

func (x *RecordHulesInfo) Reset() {
	*x = RecordHulesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHulesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHulesInfo) ProtoMessage() {}

func (x *RecordHulesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHulesInfo.ProtoReflect.Descriptor instead.
func (*RecordHulesInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{160}
}

func (x *RecordHulesInfo) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordHulesInfo) GetHules() []*RecordHuleInfo {
	if x != nil {
		return x.Hules
	}
	return nil
}

type RecordLiujuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Type uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *RecordLiujuInfo) Reset() {
	*x = RecordLiujuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLiujuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLiujuInfo) ProtoMessage() {}

func (x *RecordLiujuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLiujuInfo.ProtoReflect.Descriptor instead.
func (*RecordLiujuInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{161}
}

func (x *RecordLiujuInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordLiujuInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RecordNoTileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liujumanguan bool                      `protobuf:"varint,1,opt,name=liujumanguan,proto3" json:"liujumanguan,omitempty"`
	Players      []*RecordNoTilePlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *RecordNoTileInfo) Reset() {
	*x = RecordNoTileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoTileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoTileInfo) ProtoMessage() {}

func (x *RecordNoTileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoTileInfo.ProtoReflect.Descriptor instead.
func (*RecordNoTileInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{162}
}

func (x *RecordNoTileInfo) GetLiujumanguan() bool {
	if x != nil {
		return x.Liujumanguan
	}
	return false
}

func (x *RecordNoTileInfo) GetPlayers() []*RecordNoTilePlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type RecordLiqiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat       uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Score      uint32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	IsW        bool   `protobuf:"varint,3,opt,name=is_w,json=isW,proto3" json:"is_w,omitempty"`
	IsZhenTing bool   `protobuf:"varint,4,opt,name=is_zhen_ting,json=isZhenTing,proto3" json:"is_zhen_ting,omitempty"`
	Xun        uint32 `protobuf:"varint,5,opt,name=xun,proto3" json:"xun,omitempty"`
	IsSuccess  bool   `protobuf:"varint,6,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *RecordLiqiInfo) Reset() {
	*x = RecordLiqiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLiqiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLiqiInfo) ProtoMessage() {}

func (x *RecordLiqiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLiqiInfo.ProtoReflect.Descriptor instead.
func (*RecordLiqiInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{163}
}

func (x *RecordLiqiInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordLiqiInfo) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RecordLiqiInfo) GetIsW() bool {
	if x != nil {
		return x.IsW
	}
	return false
}

func (x *RecordLiqiInfo) GetIsZhenTing() bool {
	if x != nil {
		return x.IsZhenTing
	}
	return false
}

func (x *RecordLiqiInfo) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

func (x *RecordLiqiInfo) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RecordGangInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Type   uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Pai    string `protobuf:"bytes,3,opt,name=pai,proto3" json:"pai,omitempty"`
	IsDora bool   `protobuf:"varint,4,opt,name=is_dora,json=isDora,proto3" json:"is_dora,omitempty"`
	Xun    uint32 `protobuf:"varint,5,opt,name=xun,proto3" json:"xun,omitempty"`
}

func (x *RecordGangInfo) Reset() {
	*x = RecordGangInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGangInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGangInfo) ProtoMessage() {}

func (x *RecordGangInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGangInfo.ProtoReflect.Descriptor instead.
func (*RecordGangInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{164}
}

func (x *RecordGangInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordGangInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecordGangInfo) GetPai() string {
	if x != nil {
		return x.Pai
	}
	return ""
}

func (x *RecordGangInfo) GetIsDora() bool {
	if x != nil {
		return x.IsDora
	}
	return false
}

func (x *RecordGangInfo) GetXun() uint32 {
	if x != nil {
		return x.Xun
	}
	return 0
}

type RecordBaBeiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat    uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	IsZiMo  bool   `protobuf:"varint,2,opt,name=is_zi_mo,json=isZiMo,proto3" json:"is_zi_mo,omitempty"`
	IsChong bool   `protobuf:"varint,3,opt,name=is_chong,json=isChong,proto3" json:"is_chong,omitempty"`
	IsBei   bool   `protobuf:"varint,4,opt,name=is_bei,json=isBei,proto3" json:"is_bei,omitempty"`
}

func (x *RecordBaBeiInfo) Reset() {
	*x = RecordBaBeiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordBaBeiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordBaBeiInfo) ProtoMessage() {}

func (x *RecordBaBeiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordBaBeiInfo.ProtoReflect.Descriptor instead.
func (*RecordBaBeiInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{165}
}

func (x *RecordBaBeiInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordBaBeiInfo) GetIsZiMo() bool {
	if x != nil {
		return x.IsZiMo
	}
	return false
}

func (x *RecordBaBeiInfo) GetIsChong() bool {
	if x != nil {
		return x.IsChong
	}
	return false
}

func (x *RecordBaBeiInfo) GetIsBei() bool {
	if x != nil {
		return x.IsBei
	}
	return false
}

type RecordPeiPaiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoraCount  uint32 `protobuf:"varint,1,opt,name=dora_count,json=doraCount,proto3" json:"dora_count,omitempty"`
	RDoraCount uint32 `protobuf:"varint,2,opt,name=r_dora_count,json=rDoraCount,proto3" json:"r_dora_count,omitempty"`
	BeiCount   uint32 `protobuf:"varint,3,opt,name=bei_count,json=beiCount,proto3" json:"bei_count,omitempty"`
}

func (x *RecordPeiPaiInfo) Reset() {
	*x = RecordPeiPaiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPeiPaiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPeiPaiInfo) ProtoMessage() {}

func (x *RecordPeiPaiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPeiPaiInfo.ProtoReflect.Descriptor instead.
func (*RecordPeiPaiInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{166}
}

func (x *RecordPeiPaiInfo) GetDoraCount() uint32 {
	if x != nil {
		return x.DoraCount
	}
	return 0
}

func (x *RecordPeiPaiInfo) GetRDoraCount() uint32 {
	if x != nil {
		return x.RDoraCount
	}
	return 0
}

func (x *RecordPeiPaiInfo) GetBeiCount() uint32 {
	if x != nil {
		return x.BeiCount
	}
	return 0
}

type RecordRoundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Chang       uint32              `protobuf:"varint,2,opt,name=chang,proto3" json:"chang,omitempty"`
	Ju          uint32              `protobuf:"varint,3,opt,name=ju,proto3" json:"ju,omitempty"`
	Ben         uint32              `protobuf:"varint,4,opt,name=ben,proto3" json:"ben,omitempty"`
	Scores      []uint32            `protobuf:"varint,5,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	LiqiInfos   []*RecordLiqiInfo   `protobuf:"bytes,7,rep,name=liqi_infos,json=liqiInfos,proto3" json:"liqi_infos,omitempty"`
	GangInfos   []*RecordGangInfo   `protobuf:"bytes,8,rep,name=gang_infos,json=gangInfos,proto3" json:"gang_infos,omitempty"`
	PeipaiInfos []*RecordPeiPaiInfo `protobuf:"bytes,9,rep,name=peipai_infos,json=peipaiInfos,proto3" json:"peipai_infos,omitempty"`
	BabaiInfos  []*RecordBaBeiInfo  `protobuf:"bytes,10,rep,name=babai_infos,json=babaiInfos,proto3" json:"babai_infos,omitempty"`
	HulesInfo   *RecordHulesInfo    `protobuf:"bytes,11,opt,name=hules_info,json=hulesInfo,proto3" json:"hules_info,omitempty"`
	LiujuInfo   *RecordLiujuInfo    `protobuf:"bytes,12,opt,name=liuju_info,json=liujuInfo,proto3" json:"liuju_info,omitempty"`
	NoTileInfo  *RecordNoTileInfo   `protobuf:"bytes,13,opt,name=no_tile_info,json=noTileInfo,proto3" json:"no_tile_info,omitempty"`
}

func (x *RecordRoundInfo) Reset() {
	*x = RecordRoundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRoundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRoundInfo) ProtoMessage() {}

func (x *RecordRoundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRoundInfo.ProtoReflect.Descriptor instead.
func (*RecordRoundInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{167}
}

func (x *RecordRoundInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordRoundInfo) GetChang() uint32 {
	if x != nil {
		return x.Chang
	}
	return 0
}

func (x *RecordRoundInfo) GetJu() uint32 {
	if x != nil {
		return x.Ju
	}
	return 0
}

func (x *RecordRoundInfo) GetBen() uint32 {
	if x != nil {
		return x.Ben
	}
	return 0
}

func (x *RecordRoundInfo) GetScores() []uint32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *RecordRoundInfo) GetLiqiInfos() []*RecordLiqiInfo {
	if x != nil {
		return x.LiqiInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetGangInfos() []*RecordGangInfo {
	if x != nil {
		return x.GangInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetPeipaiInfos() []*RecordPeiPaiInfo {
	if x != nil {
		return x.PeipaiInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetBabaiInfos() []*RecordBaBeiInfo {
	if x != nil {
		return x.BabaiInfos
	}
	return nil
}

func (x *RecordRoundInfo) GetHulesInfo() *RecordHulesInfo {
	if x != nil {
		return x.HulesInfo
	}
	return nil
}

func (x *RecordRoundInfo) GetLiujuInfo() *RecordLiujuInfo {
	if x != nil {
		return x.LiujuInfo
	}
	return nil
}

func (x *RecordRoundInfo) GetNoTileInfo() *RecordNoTileInfo {
	if x != nil {
		return x.NoTileInfo
	}
	return nil
}

type RecordAnalysisedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundInfos []*RecordRoundInfo `protobuf:"bytes,1,rep,name=round_infos,json=roundInfos,proto3" json:"round_infos,omitempty"`
}

func (x *RecordAnalysisedData) Reset() {
	*x = RecordAnalysisedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordAnalysisedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordAnalysisedData) ProtoMessage() {}

func (x *RecordAnalysisedData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordAnalysisedData.ProtoReflect.Descriptor instead.
func (*RecordAnalysisedData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{168}
}

func (x *RecordAnalysisedData) GetRoundInfos() []*RecordRoundInfo {
	if x != nil {
		return x.RoundInfos
	}
	return nil
}

type NotifyRoomGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUrl      string `protobuf:"bytes,1,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken,proto3" json:"connect_token,omitempty"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
	Location     string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *NotifyRoomGameStart) Reset() {
	*x = NotifyRoomGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomGameStart) ProtoMessage() {}

func (x *NotifyRoomGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomGameStart.ProtoReflect.Descriptor instead.
func (*NotifyRoomGameStart) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{169}
}

func (x *NotifyRoomGameStart) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *NotifyRoomGameStart) GetConnectToken() string {
	if x != nil {
		return x.ConnectToken
	}
	return ""
}

func (x *NotifyRoomGameStart) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *NotifyRoomGameStart) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type NotifyMatchGameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUrl      string `protobuf:"bytes,1,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken,proto3" json:"connect_token,omitempty"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
	MatchModeId  uint32 `protobuf:"varint,4,opt,name=match_mode_id,json=matchModeId,proto3" json:"match_mode_id,omitempty"`
	Location     string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *NotifyMatchGameStart) Reset() {
	*x = NotifyMatchGameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMatchGameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMatchGameStart) ProtoMessage() {}

func (x *NotifyMatchGameStart) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMatchGameStart.ProtoReflect.Descriptor instead.
func (*NotifyMatchGameStart) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{170}
}

func (x *NotifyMatchGameStart) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *NotifyMatchGameStart) GetConnectToken() string {
	if x != nil {
		return x.ConnectToken
	}
	return ""
}

func (x *NotifyMatchGameStart) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

func (x *NotifyMatchGameStart) GetMatchModeId() uint32 {
	if x != nil {
		return x.MatchModeId
	}
	return 0
}

func (x *NotifyMatchGameStart) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type NotifyRoomPlayerReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32                                   `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Ready       bool                                     `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`
	AccountList *NotifyRoomPlayerReady_AccountReadyState `protobuf:"bytes,3,opt,name=account_list,json=accountList,proto3" json:"account_list,omitempty"`
	Seq         uint32                                   `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *NotifyRoomPlayerReady) Reset() {
	*x = NotifyRoomPlayerReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerReady) ProtoMessage() {}

func (x *NotifyRoomPlayerReady) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerReady.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerReady) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{171}
}

func (x *NotifyRoomPlayerReady) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerReady) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *NotifyRoomPlayerReady) GetAccountList() *NotifyRoomPlayerReady_AccountReadyState {
	if x != nil {
		return x.AccountList
	}
	return nil
}

func (x *NotifyRoomPlayerReady) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type NotifyRoomPlayerDressing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32                                         `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Dressing    bool                                           `protobuf:"varint,2,opt,name=dressing,proto3" json:"dressing,omitempty"`
	AccountList *NotifyRoomPlayerDressing_AccountDressingState `protobuf:"bytes,3,opt,name=account_list,json=accountList,proto3" json:"account_list,omitempty"`
	Seq         uint32                                         `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *NotifyRoomPlayerDressing) Reset() {
	*x = NotifyRoomPlayerDressing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerDressing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerDressing) ProtoMessage() {}

func (x *NotifyRoomPlayerDressing) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerDressing.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerDressing) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{172}
}

func (x *NotifyRoomPlayerDressing) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerDressing) GetDressing() bool {
	if x != nil {
		return x.Dressing
	}
	return false
}

func (x *NotifyRoomPlayerDressing) GetAccountList() *NotifyRoomPlayerDressing_AccountDressingState {
	if x != nil {
		return x.AccountList
	}
	return nil
}

func (x *NotifyRoomPlayerDressing) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type NotifyRoomPlayerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateList []*PlayerBaseView `protobuf:"bytes,1,rep,name=update_list,json=updateList,proto3" json:"update_list,omitempty"`
	RemoveList []uint32          `protobuf:"varint,2,rep,packed,name=remove_list,json=removeList,proto3" json:"remove_list,omitempty"`
	OwnerId    uint32            `protobuf:"varint,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	RobotCount uint32            `protobuf:"varint,4,opt,name=robot_count,json=robotCount,proto3" json:"robot_count,omitempty"`
	PlayerList []*PlayerBaseView `protobuf:"bytes,5,rep,name=player_list,json=playerList,proto3" json:"player_list,omitempty"`
	Seq        uint32            `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *NotifyRoomPlayerUpdate) Reset() {
	*x = NotifyRoomPlayerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerUpdate) ProtoMessage() {}

func (x *NotifyRoomPlayerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerUpdate.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{173}
}

func (x *NotifyRoomPlayerUpdate) GetUpdateList() []*PlayerBaseView {
	if x != nil {
		return x.UpdateList
	}
	return nil
}

func (x *NotifyRoomPlayerUpdate) GetRemoveList() []uint32 {
	if x != nil {
		return x.RemoveList
	}
	return nil
}

func (x *NotifyRoomPlayerUpdate) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *NotifyRoomPlayerUpdate) GetRobotCount() uint32 {
	if x != nil {
		return x.RobotCount
	}
	return 0
}

func (x *NotifyRoomPlayerUpdate) GetPlayerList() []*PlayerBaseView {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

func (x *NotifyRoomPlayerUpdate) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type NotifyRoomKickOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyRoomKickOut) Reset() {
	*x = NotifyRoomKickOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomKickOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomKickOut) ProtoMessage() {}

func (x *NotifyRoomKickOut) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomKickOut.ProtoReflect.Descriptor instead.
func (*NotifyRoomKickOut) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{174}
}

type NotifyMatchTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyMatchTimeout) Reset() {
	*x = NotifyMatchTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMatchTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMatchTimeout) ProtoMessage() {}

func (x *NotifyMatchTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMatchTimeout.ProtoReflect.Descriptor instead.
func (*NotifyMatchTimeout) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{175}
}

type NotifyFriendStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId    uint32              `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	ActiveState *AccountActiveState `protobuf:"bytes,2,opt,name=active_state,json=activeState,proto3" json:"active_state,omitempty"`
}

func (x *NotifyFriendStateChange) Reset() {
	*x = NotifyFriendStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyFriendStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFriendStateChange) ProtoMessage() {}

func (x *NotifyFriendStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFriendStateChange.ProtoReflect.Descriptor instead.
func (*NotifyFriendStateChange) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{176}
}

func (x *NotifyFriendStateChange) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NotifyFriendStateChange) GetActiveState() *AccountActiveState {
	if x != nil {
		return x.ActiveState
	}
	return nil
}

type NotifyFriendViewChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint32          `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Base     *PlayerBaseView `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *NotifyFriendViewChange) Reset() {
	*x = NotifyFriendViewChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyFriendViewChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFriendViewChange) ProtoMessage() {}

func (x *NotifyFriendViewChange) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFriendViewChange.ProtoReflect.Descriptor instead.
func (*NotifyFriendViewChange) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{177}
}

func (x *NotifyFriendViewChange) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NotifyFriendViewChange) GetBase() *PlayerBaseView {
	if x != nil {
		return x.Base
	}
	return nil
}

type NotifyFriendChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Type      uint32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Friend    *Friend `protobuf:"bytes,3,opt,name=friend,proto3" json:"friend,omitempty"`
}

func (x *NotifyFriendChange) Reset() {
	*x = NotifyFriendChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyFriendChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFriendChange) ProtoMessage() {}

func (x *NotifyFriendChange) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFriendChange.ProtoReflect.Descriptor instead.
func (*NotifyFriendChange) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{178}
}

func (x *NotifyFriendChange) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyFriendChange) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyFriendChange) GetFriend() *Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type NotifyNewFriendApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ApplyTime uint32 `protobuf:"varint,2,opt,name=apply_time,json=applyTime,proto3" json:"apply_time,omitempty"`
	RemovedId uint32 `protobuf:"varint,3,opt,name=removed_id,json=removedId,proto3" json:"removed_id,omitempty"`
}

func (x *NotifyNewFriendApply) Reset() {
	*x = NotifyNewFriendApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewFriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewFriendApply) ProtoMessage() {}

func (x *NotifyNewFriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewFriendApply.ProtoReflect.Descriptor instead.
func (*NotifyNewFriendApply) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{179}
}

func (x *NotifyNewFriendApply) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyNewFriendApply) GetApplyTime() uint32 {
	if x != nil {
		return x.ApplyTime
	}
	return 0
}

func (x *NotifyNewFriendApply) GetRemovedId() uint32 {
	if x != nil {
		return x.RemovedId
	}
	return 0
}

type NotifyClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  *PlayerBaseView `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Type    uint32          `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Content string          `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NotifyClientMessage) Reset() {
	*x = NotifyClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyClientMessage) ProtoMessage() {}

func (x *NotifyClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyClientMessage.ProtoReflect.Descriptor instead.
func (*NotifyClientMessage) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{180}
}

func (x *NotifyClientMessage) GetSender() *PlayerBaseView {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *NotifyClientMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyClientMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NotifyAccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Update *AccountUpdate `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *NotifyAccountUpdate) Reset() {
	*x = NotifyAccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountUpdate) ProtoMessage() {}

func (x *NotifyAccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAccountUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{181}
}

func (x *NotifyAccountUpdate) GetUpdate() *AccountUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type NotifyAnotherLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyAnotherLogin) Reset() {
	*x = NotifyAnotherLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAnotherLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAnotherLogin) ProtoMessage() {}

func (x *NotifyAnotherLogin) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAnotherLogin.ProtoReflect.Descriptor instead.
func (*NotifyAnotherLogin) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{182}
}

type NotifyAccountLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyAccountLogout) Reset() {
	*x = NotifyAccountLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountLogout) ProtoMessage() {}

func (x *NotifyAccountLogout) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountLogout.ProtoReflect.Descriptor instead.
func (*NotifyAccountLogout) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{183}
}

type NotifyAnnouncementUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcements []*Announcement `protobuf:"bytes,1,rep,name=announcements,proto3" json:"announcements,omitempty"`
	Sort          []uint32        `protobuf:"varint,2,rep,packed,name=sort,proto3" json:"sort,omitempty"`
	Lang          string          `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *NotifyAnnouncementUpdate) Reset() {
	*x = NotifyAnnouncementUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAnnouncementUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAnnouncementUpdate) ProtoMessage() {}

func (x *NotifyAnnouncementUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAnnouncementUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAnnouncementUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{184}
}

func (x *NotifyAnnouncementUpdate) GetAnnouncements() []*Announcement {
	if x != nil {
		return x.Announcements
	}
	return nil
}

func (x *NotifyAnnouncementUpdate) GetSort() []uint32 {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *NotifyAnnouncementUpdate) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type NotifyNewMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail *Mail `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
}

func (x *NotifyNewMail) Reset() {
	*x = NotifyNewMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewMail) ProtoMessage() {}

func (x *NotifyNewMail) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewMail.ProtoReflect.Descriptor instead.
func (*NotifyNewMail) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{185}
}

func (x *NotifyNewMail) GetMail() *Mail {
	if x != nil {
		return x.Mail
	}
	return nil
}

type NotifyDeleteMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailIdList []uint32 `protobuf:"varint,1,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list,omitempty"`
}

func (x *NotifyDeleteMail) Reset() {
	*x = NotifyDeleteMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyDeleteMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyDeleteMail) ProtoMessage() {}

func (x *NotifyDeleteMail) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyDeleteMail.ProtoReflect.Descriptor instead.
func (*NotifyDeleteMail) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{186}
}

func (x *NotifyDeleteMail) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

type NotifyReviveCoinUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasGained bool `protobuf:"varint,1,opt,name=has_gained,json=hasGained,proto3" json:"has_gained,omitempty"`
}

func (x *NotifyReviveCoinUpdate) Reset() {
	*x = NotifyReviveCoinUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyReviveCoinUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyReviveCoinUpdate) ProtoMessage() {}

func (x *NotifyReviveCoinUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyReviveCoinUpdate.ProtoReflect.Descriptor instead.
func (*NotifyReviveCoinUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{187}
}

func (x *NotifyReviveCoinUpdate) GetHasGained() bool {
	if x != nil {
		return x.HasGained
	}
	return false
}

type NotifyDailyTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses        []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
	MaxDailyTaskCount uint32          `protobuf:"varint,2,opt,name=max_daily_task_count,json=maxDailyTaskCount,proto3" json:"max_daily_task_count,omitempty"`
	RefreshCount      uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count,omitempty"`
}

func (x *NotifyDailyTaskUpdate) Reset() {
	*x = NotifyDailyTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyDailyTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyDailyTaskUpdate) ProtoMessage() {}

func (x *NotifyDailyTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyDailyTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyDailyTaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{188}
}

func (x *NotifyDailyTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *NotifyDailyTaskUpdate) GetMaxDailyTaskCount() uint32 {
	if x != nil {
		return x.MaxDailyTaskCount
	}
	return 0
}

func (x *NotifyDailyTaskUpdate) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

type NotifyActivityTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
}

func (x *NotifyActivityTaskUpdate) Reset() {
	*x = NotifyActivityTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityTaskUpdate) ProtoMessage() {}

func (x *NotifyActivityTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyActivityTaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{189}
}

func (x *NotifyActivityTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyActivityPeriodTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
}

func (x *NotifyActivityPeriodTaskUpdate) Reset() {
	*x = NotifyActivityPeriodTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityPeriodTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityPeriodTaskUpdate) ProtoMessage() {}

func (x *NotifyActivityPeriodTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityPeriodTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyActivityPeriodTaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{190}
}

func (x *NotifyActivityPeriodTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyAccountRandomTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
}

func (x *NotifyAccountRandomTaskUpdate) Reset() {
	*x = NotifyAccountRandomTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountRandomTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountRandomTaskUpdate) ProtoMessage() {}

func (x *NotifyAccountRandomTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountRandomTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAccountRandomTaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{191}
}

func (x *NotifyAccountRandomTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

type NotifyAccountChallengeTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses     []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
	Level          uint32          `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	RefreshCount   uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count,omitempty"`
	MatchCount     uint32          `protobuf:"varint,4,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	TicketId       uint32          `protobuf:"varint,5,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	RewardedSeason []uint32        `protobuf:"varint,6,rep,packed,name=rewarded_season,json=rewardedSeason,proto3" json:"rewarded_season,omitempty"`
}

func (x *NotifyAccountChallengeTaskUpdate) Reset() {
	*x = NotifyAccountChallengeTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAccountChallengeTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAccountChallengeTaskUpdate) ProtoMessage() {}

func (x *NotifyAccountChallengeTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAccountChallengeTaskUpdate.ProtoReflect.Descriptor instead.
func (*NotifyAccountChallengeTaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{192}
}

func (x *NotifyAccountChallengeTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *NotifyAccountChallengeTaskUpdate) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *NotifyAccountChallengeTaskUpdate) GetRewardedSeason() []uint32 {
	if x != nil {
		return x.RewardedSeason
	}
	return nil
}

type NotifyNewComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyNewComment) Reset() {
	*x = NotifyNewComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewComment) ProtoMessage() {}

func (x *NotifyNewComment) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewComment.ProtoReflect.Descriptor instead.
func (*NotifyNewComment) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{193}
}

type NotifyRollingNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice *RollingNotice `protobuf:"bytes,1,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *NotifyRollingNotice) Reset() {
	*x = NotifyRollingNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRollingNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRollingNotice) ProtoMessage() {}

func (x *NotifyRollingNotice) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRollingNotice.ProtoReflect.Descriptor instead.
func (*NotifyRollingNotice) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{194}
}

func (x *NotifyRollingNotice) GetNotice() *RollingNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

type NotifyGiftSendRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyGiftSendRefresh) Reset() {
	*x = NotifyGiftSendRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGiftSendRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGiftSendRefresh) ProtoMessage() {}

func (x *NotifyGiftSendRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGiftSendRefresh.ProtoReflect.Descriptor instead.
func (*NotifyGiftSendRefresh) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{195}
}

type NotifyShopUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopInfo *ShopInfo `protobuf:"bytes,1,opt,name=shop_info,json=shopInfo,proto3" json:"shop_info,omitempty"`
}

func (x *NotifyShopUpdate) Reset() {
	*x = NotifyShopUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyShopUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyShopUpdate) ProtoMessage() {}

func (x *NotifyShopUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyShopUpdate.ProtoReflect.Descriptor instead.
func (*NotifyShopUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{196}
}

func (x *NotifyShopUpdate) GetShopInfo() *ShopInfo {
	if x != nil {
		return x.ShopInfo
	}
	return nil
}

type NotifyVipLevelChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiftLimit           uint32  `protobuf:"varint,1,opt,name=gift_limit,json=giftLimit,proto3" json:"gift_limit,omitempty"`
	FriendMaxCount      uint32  `protobuf:"varint,2,opt,name=friend_max_count,json=friendMaxCount,proto3" json:"friend_max_count,omitempty"`
	ZhpFreeRefreshLimit uint32  `protobuf:"varint,3,opt,name=zhp_free_refresh_limit,json=zhpFreeRefreshLimit,proto3" json:"zhp_free_refresh_limit,omitempty"`
	ZhpCostRefreshLimit uint32  `protobuf:"varint,4,opt,name=zhp_cost_refresh_limit,json=zhpCostRefreshLimit,proto3" json:"zhp_cost_refresh_limit,omitempty"`
	BuddyBonus          float32 `protobuf:"fixed32,5,opt,name=buddy_bonus,json=buddyBonus,proto3" json:"buddy_bonus,omitempty"`
	RecordCollectLimit  uint32  `protobuf:"varint,6,opt,name=record_collect_limit,json=recordCollectLimit,proto3" json:"record_collect_limit,omitempty"`
}

func (x *NotifyVipLevelChange) Reset() {
	*x = NotifyVipLevelChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyVipLevelChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyVipLevelChange) ProtoMessage() {}

func (x *NotifyVipLevelChange) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyVipLevelChange.ProtoReflect.Descriptor instead.
func (*NotifyVipLevelChange) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{197}
}

func (x *NotifyVipLevelChange) GetGiftLimit() uint32 {
	if x != nil {
		return x.GiftLimit
	}
	return 0
}

func (x *NotifyVipLevelChange) GetFriendMaxCount() uint32 {
	if x != nil {
		return x.FriendMaxCount
	}
	return 0
}

func (x *NotifyVipLevelChange) GetZhpFreeRefreshLimit() uint32 {
	if x != nil {
		return x.ZhpFreeRefreshLimit
	}
	return 0
}

func (x *NotifyVipLevelChange) GetZhpCostRefreshLimit() uint32 {
	if x != nil {
		return x.ZhpCostRefreshLimit
	}
	return 0
}

func (x *NotifyVipLevelChange) GetBuddyBonus() float32 {
	if x != nil {
		return x.BuddyBonus
	}
	return 0
}

func (x *NotifyVipLevelChange) GetRecordCollectLimit() uint32 {
	if x != nil {
		return x.RecordCollectLimit
	}
	return 0
}

type NotifyServerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *ServerSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *NotifyServerSetting) Reset() {
	*x = NotifyServerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyServerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyServerSetting) ProtoMessage() {}

func (x *NotifyServerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyServerSetting.ProtoReflect.Descriptor instead.
func (*NotifyServerSetting) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{198}
}

func (x *NotifyServerSetting) GetSettings() *ServerSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type NotifyPayResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayResult      uint32                            `protobuf:"varint,1,opt,name=pay_result,json=payResult,proto3" json:"pay_result,omitempty"`
	OrderId        string                            `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	GoodsId        uint32                            `protobuf:"varint,3,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	NewMonthTicket uint32                            `protobuf:"varint,4,opt,name=new_month_ticket,json=newMonthTicket,proto3" json:"new_month_ticket,omitempty"`
	ResourceModify []*NotifyPayResult_ResourceModify `protobuf:"bytes,5,rep,name=resource_modify,json=resourceModify,proto3" json:"resource_modify,omitempty"`
}

func (x *NotifyPayResult) Reset() {
	*x = NotifyPayResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPayResult) ProtoMessage() {}

func (x *NotifyPayResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPayResult.ProtoReflect.Descriptor instead.
func (*NotifyPayResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{199}
}

func (x *NotifyPayResult) GetPayResult() uint32 {
	if x != nil {
		return x.PayResult
	}
	return 0
}

func (x *NotifyPayResult) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *NotifyPayResult) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *NotifyPayResult) GetNewMonthTicket() uint32 {
	if x != nil {
		return x.NewMonthTicket
	}
	return 0
}

func (x *NotifyPayResult) GetResourceModify() []*NotifyPayResult_ResourceModify {
	if x != nil {
		return x.ResourceModify
	}
	return nil
}

type NotifyCustomContestAccountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	AccountId uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Sender    string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Verified  uint32 `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *NotifyCustomContestAccountMsg) Reset() {
	*x = NotifyCustomContestAccountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCustomContestAccountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCustomContestAccountMsg) ProtoMessage() {}

func (x *NotifyCustomContestAccountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCustomContestAccountMsg.ProtoReflect.Descriptor instead.
func (*NotifyCustomContestAccountMsg) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{200}
}

func (x *NotifyCustomContestAccountMsg) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyCustomContestAccountMsg) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyCustomContestAccountMsg) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *NotifyCustomContestAccountMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotifyCustomContestAccountMsg) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

type NotifyCustomContestSystemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId  uint32                      `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Type      uint32                      `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Uuid      string                      `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	GameStart *CustomizedContestGameStart `protobuf:"bytes,4,opt,name=game_start,json=gameStart,proto3" json:"game_start,omitempty"`
	GameEnd   *CustomizedContestGameEnd   `protobuf:"bytes,5,opt,name=game_end,json=gameEnd,proto3" json:"game_end,omitempty"`
}

func (x *NotifyCustomContestSystemMsg) Reset() {
	*x = NotifyCustomContestSystemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCustomContestSystemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCustomContestSystemMsg) ProtoMessage() {}

func (x *NotifyCustomContestSystemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCustomContestSystemMsg.ProtoReflect.Descriptor instead.
func (*NotifyCustomContestSystemMsg) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{201}
}

func (x *NotifyCustomContestSystemMsg) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyCustomContestSystemMsg) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyCustomContestSystemMsg) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NotifyCustomContestSystemMsg) GetGameStart() *CustomizedContestGameStart {
	if x != nil {
		return x.GameStart
	}
	return nil
}

func (x *NotifyCustomContestSystemMsg) GetGameEnd() *CustomizedContestGameEnd {
	if x != nil {
		return x.GameEnd
	}
	return nil
}

type NotifyCustomContestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	State    uint32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *NotifyCustomContestState) Reset() {
	*x = NotifyCustomContestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCustomContestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCustomContestState) ProtoMessage() {}

func (x *NotifyCustomContestState) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCustomContestState.ProtoReflect.Descriptor instead.
func (*NotifyCustomContestState) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{202}
}

func (x *NotifyCustomContestState) GetUniqueId() uint32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *NotifyCustomContestState) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type NotifyActivityChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewActivities []*Activity `protobuf:"bytes,1,rep,name=new_activities,json=newActivities,proto3" json:"new_activities,omitempty"`
	EndActivities []uint32    `protobuf:"varint,2,rep,packed,name=end_activities,json=endActivities,proto3" json:"end_activities,omitempty"`
}

func (x *NotifyActivityChange) Reset() {
	*x = NotifyActivityChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyActivityChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyActivityChange) ProtoMessage() {}

func (x *NotifyActivityChange) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyActivityChange.ProtoReflect.Descriptor instead.
func (*NotifyActivityChange) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{203}
}

func (x *NotifyActivityChange) GetNewActivities() []*Activity {
	if x != nil {
		return x.NewActivities
	}
	return nil
}

func (x *NotifyActivityChange) GetEndActivities() []uint32 {
	if x != nil {
		return x.EndActivities
	}
	return nil
}

type NotifyAFKResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	BanEndTime uint32 `protobuf:"varint,2,opt,name=ban_end_time,json=banEndTime,proto3" json:"ban_end_time,omitempty"`
	GameUuid   string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid,proto3" json:"game_uuid,omitempty"`
}

func (x *NotifyAFKResult) Reset() {
	*x = NotifyAFKResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAFKResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAFKResult) ProtoMessage() {}

func (x *NotifyAFKResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAFKResult.ProtoReflect.Descriptor instead.
func (*NotifyAFKResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{204}
}

func (x *NotifyAFKResult) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyAFKResult) GetBanEndTime() uint32 {
	if x != nil {
		return x.BanEndTime
	}
	return 0
}

func (x *NotifyAFKResult) GetGameUuid() string {
	if x != nil {
		return x.GameUuid
	}
	return ""
}

type ContestGameInfo_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ContestGameInfo_Player) Reset() {
	*x = ContestGameInfo_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestGameInfo_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestGameInfo_Player) ProtoMessage() {}

func (x *ContestGameInfo_Player) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestGameInfo_Player.ProtoReflect.Descriptor instead.
func (*ContestGameInfo_Player) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ContestGameInfo_Player) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ContestGameInfo_Player) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ContestMatchingPlayer_Controller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ContestMatchingPlayer_Controller) Reset() {
	*x = ContestMatchingPlayer_Controller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestMatchingPlayer_Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestMatchingPlayer_Controller) ProtoMessage() {}

func (x *ContestMatchingPlayer_Controller) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestMatchingPlayer_Controller.ProtoReflect.Descriptor instead.
func (*ContestMatchingPlayer_Controller) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ContestMatchingPlayer_Controller) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ContestMatchingPlayer_Controller) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ResSearchAccountByNickname_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ResSearchAccountByNickname_Item) Reset() {
	*x = ResSearchAccountByNickname_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSearchAccountByNickname_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSearchAccountByNickname_Item) ProtoMessage() {}

func (x *ResSearchAccountByNickname_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSearchAccountByNickname_Item.ProtoReflect.Descriptor instead.
func (*ResSearchAccountByNickname_Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ResSearchAccountByNickname_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResSearchAccountByNickname_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ResSearchAccountByEid_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ResSearchAccountByEid_Item) Reset() {
	*x = ResSearchAccountByEid_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSearchAccountByEid_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSearchAccountByEid_Item) ProtoMessage() {}

func (x *ResSearchAccountByEid_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSearchAccountByEid_Item.ProtoReflect.Descriptor instead.
func (*ResSearchAccountByEid_Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{23, 0}
}

func (x *ResSearchAccountByEid_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResSearchAccountByEid_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ReqCreateContestGame_Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	StartPoint uint32 `protobuf:"varint,2,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty"`
	Seat       uint32 `protobuf:"varint,3,opt,name=seat,proto3" json:"seat,omitempty"`
}

func (x *ReqCreateContestGame_Slot) Reset() {
	*x = ReqCreateContestGame_Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateContestGame_Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateContestGame_Slot) ProtoMessage() {}

func (x *ReqCreateContestGame_Slot) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateContestGame_Slot.ProtoReflect.Descriptor instead.
func (*ReqCreateContestGame_Slot) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{30, 0}
}

func (x *ReqCreateContestGame_Slot) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqCreateContestGame_Slot) GetStartPoint() uint32 {
	if x != nil {
		return x.StartPoint
	}
	return 0
}

func (x *ReqCreateContestGame_Slot) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

type ResFetchCustomizedContestGameRecordList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *RecordGame `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	Tag    string      `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ResFetchCustomizedContestGameRecordList_Item) Reset() {
	*x = ResFetchCustomizedContestGameRecordList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCustomizedContestGameRecordList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCustomizedContestGameRecordList_Item) ProtoMessage() {}

func (x *ResFetchCustomizedContestGameRecordList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCustomizedContestGameRecordList_Item.ProtoReflect.Descriptor instead.
func (*ResFetchCustomizedContestGameRecordList_Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{33, 0}
}

func (x *ResFetchCustomizedContestGameRecordList_Item) GetRecord() *RecordGame {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *ResFetchCustomizedContestGameRecordList_Item) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ResCustomizedContestChatInfo_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ResCustomizedContestChatInfo_Item) Reset() {
	*x = ResCustomizedContestChatInfo_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCustomizedContestChatInfo_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCustomizedContestChatInfo_Item) ProtoMessage() {}

func (x *ResCustomizedContestChatInfo_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCustomizedContestChatInfo_Item.ProtoReflect.Descriptor instead.
func (*ResCustomizedContestChatInfo_Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{40, 0}
}

func (x *ResCustomizedContestChatInfo_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResCustomizedContestChatInfo_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ResFetchCurrentRankList_AccountRankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	TotalPoint int32  `protobuf:"varint,3,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	TotalCount uint32 `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ResFetchCurrentRankList_AccountRankData) Reset() {
	*x = ResFetchCurrentRankList_AccountRankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchCurrentRankList_AccountRankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchCurrentRankList_AccountRankData) ProtoMessage() {}

func (x *ResFetchCurrentRankList_AccountRankData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchCurrentRankList_AccountRankData.ProtoReflect.Descriptor instead.
func (*ResFetchCurrentRankList_AccountRankData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{47, 0}
}

func (x *ResFetchCurrentRankList_AccountRankData) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResFetchCurrentRankList_AccountRankData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ResFetchCurrentRankList_AccountRankData) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *ResFetchCurrentRankList_AccountRankData) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ResFetchContestLastModify_ContestLastModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestName    string `protobuf:"bytes,1,opt,name=contest_name,json=contestName,proto3" json:"contest_name,omitempty"`
	ExternalNotice string `protobuf:"bytes,2,opt,name=external_notice,json=externalNotice,proto3" json:"external_notice,omitempty"`
	InternalNotice string `protobuf:"bytes,3,opt,name=internal_notice,json=internalNotice,proto3" json:"internal_notice,omitempty"`
	ManagerNotice  string `protobuf:"bytes,4,opt,name=manager_notice,json=managerNotice,proto3" json:"manager_notice,omitempty"`
	Reason         string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Status         uint32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ResFetchContestLastModify_ContestLastModify) Reset() {
	*x = ResFetchContestLastModify_ContestLastModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestLastModify_ContestLastModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestLastModify_ContestLastModify) ProtoMessage() {}

func (x *ResFetchContestLastModify_ContestLastModify) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestLastModify_ContestLastModify.ProtoReflect.Descriptor instead.
func (*ResFetchContestLastModify_ContestLastModify) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{48, 0}
}

func (x *ResFetchContestLastModify_ContestLastModify) GetContestName() string {
	if x != nil {
		return x.ContestName
	}
	return ""
}

func (x *ResFetchContestLastModify_ContestLastModify) GetExternalNotice() string {
	if x != nil {
		return x.ExternalNotice
	}
	return ""
}

func (x *ResFetchContestLastModify_ContestLastModify) GetInternalNotice() string {
	if x != nil {
		return x.InternalNotice
	}
	return ""
}

func (x *ResFetchContestLastModify_ContestLastModify) GetManagerNotice() string {
	if x != nil {
		return x.ManagerNotice
	}
	return ""
}

func (x *ResFetchContestLastModify_ContestLastModify) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ResFetchContestLastModify_ContestLastModify) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ResFetchContestObserver_Observer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ResFetchContestObserver_Observer) Reset() {
	*x = ResFetchContestObserver_Observer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFetchContestObserver_Observer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFetchContestObserver_Observer) ProtoMessage() {}

func (x *ResFetchContestObserver_Observer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFetchContestObserver_Observer.ProtoReflect.Descriptor instead.
func (*ResFetchContestObserver_Observer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{49, 0}
}

func (x *ResFetchContestObserver_Observer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResFetchContestObserver_Observer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ReqAddContestObserver_Observer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ReqAddContestObserver_Observer) Reset() {
	*x = ReqAddContestObserver_Observer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddContestObserver_Observer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddContestObserver_Observer) ProtoMessage() {}

func (x *ReqAddContestObserver_Observer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddContestObserver_Observer.ProtoReflect.Descriptor instead.
func (*ReqAddContestObserver_Observer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{50, 0}
}

func (x *ReqAddContestObserver_Observer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ReqAddContestObserver_Observer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ResAddContestObserver_Observer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ResAddContestObserver_Observer) Reset() {
	*x = ResAddContestObserver_Observer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAddContestObserver_Observer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAddContestObserver_Observer) ProtoMessage() {}

func (x *ResAddContestObserver_Observer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAddContestObserver_Observer.ProtoReflect.Descriptor instead.
func (*ResAddContestObserver_Observer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{51, 0}
}

func (x *ResAddContestObserver_Observer) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ResAddContestObserver_Observer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type AccountMahjongStatistic_RoundSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	RongCount      uint32 `protobuf:"varint,2,opt,name=rong_count,json=rongCount,proto3" json:"rong_count,omitempty"`
	ZimoCount      uint32 `protobuf:"varint,3,opt,name=zimo_count,json=zimoCount,proto3" json:"zimo_count,omitempty"`
	FangchongCount uint32 `protobuf:"varint,4,opt,name=fangchong_count,json=fangchongCount,proto3" json:"fangchong_count,omitempty"`
}

func (x *AccountMahjongStatistic_RoundSummary) Reset() {
	*x = AccountMahjongStatistic_RoundSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_RoundSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_RoundSummary) ProtoMessage() {}

func (x *AccountMahjongStatistic_RoundSummary) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_RoundSummary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_RoundSummary) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67, 0}
}

func (x *AccountMahjongStatistic_RoundSummary) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountMahjongStatistic_RoundSummary) GetRongCount() uint32 {
	if x != nil {
		return x.RongCount
	}
	return 0
}

func (x *AccountMahjongStatistic_RoundSummary) GetZimoCount() uint32 {
	if x != nil {
		return x.ZimoCount
	}
	return 0
}

func (x *AccountMahjongStatistic_RoundSummary) GetFangchongCount() uint32 {
	if x != nil {
		return x.FangchongCount
	}
	return 0
}

type AccountMahjongStatistic_HuSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DoraRoundCount uint32 `protobuf:"varint,2,opt,name=dora_round_count,json=doraRoundCount,proto3" json:"dora_round_count,omitempty"`
	TotalFan       uint32 `protobuf:"varint,3,opt,name=total_fan,json=totalFan,proto3" json:"total_fan,omitempty"`
}

func (x *AccountMahjongStatistic_HuSummary) Reset() {
	*x = AccountMahjongStatistic_HuSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_HuSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_HuSummary) ProtoMessage() {}

func (x *AccountMahjongStatistic_HuSummary) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_HuSummary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_HuSummary) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67, 1}
}

func (x *AccountMahjongStatistic_HuSummary) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountMahjongStatistic_HuSummary) GetDoraRoundCount() uint32 {
	if x != nil {
		return x.DoraRoundCount
	}
	return 0
}

func (x *AccountMahjongStatistic_HuSummary) GetTotalFan() uint32 {
	if x != nil {
		return x.TotalFan
	}
	return 0
}

type AccountMahjongStatistic_HighestHuRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fanshu  uint32   `protobuf:"varint,1,opt,name=fanshu,proto3" json:"fanshu,omitempty"`
	Doranum uint32   `protobuf:"varint,2,opt,name=doranum,proto3" json:"doranum,omitempty"`
	Title   string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Hands   []string `protobuf:"bytes,4,rep,name=hands,proto3" json:"hands,omitempty"`
	Ming    []string `protobuf:"bytes,5,rep,name=ming,proto3" json:"ming,omitempty"`
	Hupai   string   `protobuf:"bytes,6,opt,name=hupai,proto3" json:"hupai,omitempty"`
	TitleId uint32   `protobuf:"varint,7,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
}

func (x *AccountMahjongStatistic_HighestHuRecord) Reset() {
	*x = AccountMahjongStatistic_HighestHuRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_HighestHuRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_HighestHuRecord) ProtoMessage() {}

func (x *AccountMahjongStatistic_HighestHuRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_HighestHuRecord.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_HighestHuRecord) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67, 2}
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetFanshu() uint32 {
	if x != nil {
		return x.Fanshu
	}
	return 0
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetDoranum() uint32 {
	if x != nil {
		return x.Doranum
	}
	return 0
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetHands() []string {
	if x != nil {
		return x.Hands
	}
	return nil
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetMing() []string {
	if x != nil {
		return x.Ming
	}
	return nil
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetHupai() string {
	if x != nil {
		return x.Hupai
	}
	return ""
}

func (x *AccountMahjongStatistic_HighestHuRecord) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

type AccountMahjongStatistic_Liqi20Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount       uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalLidoraCount uint32 `protobuf:"varint,2,opt,name=total_lidora_count,json=totalLidoraCount,proto3" json:"total_lidora_count,omitempty"`
	AverageHuPoint   uint32 `protobuf:"varint,3,opt,name=average_hu_point,json=averageHuPoint,proto3" json:"average_hu_point,omitempty"`
}

func (x *AccountMahjongStatistic_Liqi20Summary) Reset() {
	*x = AccountMahjongStatistic_Liqi20Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_Liqi20Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_Liqi20Summary) ProtoMessage() {}

func (x *AccountMahjongStatistic_Liqi20Summary) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_Liqi20Summary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_Liqi20Summary) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67, 3}
}

func (x *AccountMahjongStatistic_Liqi20Summary) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountMahjongStatistic_Liqi20Summary) GetTotalLidoraCount() uint32 {
	if x != nil {
		return x.TotalLidoraCount
	}
	return 0
}

func (x *AccountMahjongStatistic_Liqi20Summary) GetAverageHuPoint() uint32 {
	if x != nil {
		return x.AverageHuPoint
	}
	return 0
}

type AccountMahjongStatistic_LiQi10Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalXuanshang uint32 `protobuf:"varint,1,opt,name=total_xuanshang,json=totalXuanshang,proto3" json:"total_xuanshang,omitempty"`
	TotalFanshu    uint32 `protobuf:"varint,2,opt,name=total_fanshu,json=totalFanshu,proto3" json:"total_fanshu,omitempty"`
}

func (x *AccountMahjongStatistic_LiQi10Summary) Reset() {
	*x = AccountMahjongStatistic_LiQi10Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_LiQi10Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_LiQi10Summary) ProtoMessage() {}

func (x *AccountMahjongStatistic_LiQi10Summary) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_LiQi10Summary.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_LiQi10Summary) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67, 4}
}

func (x *AccountMahjongStatistic_LiQi10Summary) GetTotalXuanshang() uint32 {
	if x != nil {
		return x.TotalXuanshang
	}
	return 0
}

func (x *AccountMahjongStatistic_LiQi10Summary) GetTotalFanshu() uint32 {
	if x != nil {
		return x.TotalFanshu
	}
	return 0
}

type AccountMahjongStatistic_GameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank       uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	FinalPoint int32  `protobuf:"varint,2,opt,name=final_point,json=finalPoint,proto3" json:"final_point,omitempty"`
}

func (x *AccountMahjongStatistic_GameResult) Reset() {
	*x = AccountMahjongStatistic_GameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMahjongStatistic_GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMahjongStatistic_GameResult) ProtoMessage() {}

func (x *AccountMahjongStatistic_GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMahjongStatistic_GameResult.ProtoReflect.Descriptor instead.
func (*AccountMahjongStatistic_GameResult) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{67, 5}
}

func (x *AccountMahjongStatistic_GameResult) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *AccountMahjongStatistic_GameResult) GetFinalPoint() int32 {
	if x != nil {
		return x.FinalPoint
	}
	return 0
}

type Account_PlatformDiamond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Account_PlatformDiamond) Reset() {
	*x = Account_PlatformDiamond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_PlatformDiamond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_PlatformDiamond) ProtoMessage() {}

func (x *Account_PlatformDiamond) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_PlatformDiamond.ProtoReflect.Descriptor instead.
func (*Account_PlatformDiamond) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{71, 0}
}

func (x *Account_PlatformDiamond) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Account_PlatformDiamond) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Account_PlatformSkinTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Account_PlatformSkinTicket) Reset() {
	*x = Account_PlatformSkinTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_PlatformSkinTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_PlatformSkinTicket) ProtoMessage() {}

func (x *Account_PlatformSkinTicket) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_PlatformSkinTicket.ProtoReflect.Descriptor instead.
func (*Account_PlatformSkinTicket) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{71, 1}
}

func (x *Account_PlatformSkinTicket) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Account_PlatformSkinTicket) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Account_ChallengeLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season uint32 `protobuf:"varint,1,opt,name=season,proto3" json:"season,omitempty"`
	Level  uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Rank   uint32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *Account_ChallengeLevel) Reset() {
	*x = Account_ChallengeLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_ChallengeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_ChallengeLevel) ProtoMessage() {}

func (x *Account_ChallengeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_ChallengeLevel.ProtoReflect.Descriptor instead.
func (*Account_ChallengeLevel) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{71, 2}
}

func (x *Account_ChallengeLevel) GetSeason() uint32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *Account_ChallengeLevel) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Account_ChallengeLevel) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type Account_AchievementCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rare  uint32 `protobuf:"varint,1,opt,name=rare,proto3" json:"rare,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Account_AchievementCount) Reset() {
	*x = Account_AchievementCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_AchievementCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_AchievementCount) ProtoMessage() {}

func (x *Account_AchievementCount) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_AchievementCount.ProtoReflect.Descriptor instead.
func (*Account_AchievementCount) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{71, 3}
}

func (x *Account_AchievementCount) GetRare() uint32 {
	if x != nil {
		return x.Rare
	}
	return 0
}

func (x *Account_AchievementCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AccountUpdate_NumericalUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Final uint32 `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *AccountUpdate_NumericalUpdate) Reset() {
	*x = AccountUpdate_NumericalUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_NumericalUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_NumericalUpdate) ProtoMessage() {}

func (x *AccountUpdate_NumericalUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_NumericalUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_NumericalUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 0}
}

func (x *AccountUpdate_NumericalUpdate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountUpdate_NumericalUpdate) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

type AccountUpdate_CharacterUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters      []*Character `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters,omitempty"`
	Skins           []uint32     `protobuf:"varint,3,rep,packed,name=skins,proto3" json:"skins,omitempty"`
	FinishedEndings []uint32     `protobuf:"varint,4,rep,packed,name=finished_endings,json=finishedEndings,proto3" json:"finished_endings,omitempty"`
	RewardedEndings []uint32     `protobuf:"varint,5,rep,packed,name=rewarded_endings,json=rewardedEndings,proto3" json:"rewarded_endings,omitempty"`
}

func (x *AccountUpdate_CharacterUpdate) Reset() {
	*x = AccountUpdate_CharacterUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_CharacterUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_CharacterUpdate) ProtoMessage() {}

func (x *AccountUpdate_CharacterUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_CharacterUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_CharacterUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 1}
}

func (x *AccountUpdate_CharacterUpdate) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *AccountUpdate_CharacterUpdate) GetSkins() []uint32 {
	if x != nil {
		return x.Skins
	}
	return nil
}

func (x *AccountUpdate_CharacterUpdate) GetFinishedEndings() []uint32 {
	if x != nil {
		return x.FinishedEndings
	}
	return nil
}

func (x *AccountUpdate_CharacterUpdate) GetRewardedEndings() []uint32 {
	if x != nil {
		return x.RewardedEndings
	}
	return nil
}

type AccountUpdate_AchievementUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses    []*AchievementProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
	RewardedGroup []uint32               `protobuf:"varint,2,rep,packed,name=rewarded_group,json=rewardedGroup,proto3" json:"rewarded_group,omitempty"`
}

func (x *AccountUpdate_AchievementUpdate) Reset() {
	*x = AccountUpdate_AchievementUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AchievementUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AchievementUpdate) ProtoMessage() {}

func (x *AccountUpdate_AchievementUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AchievementUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AchievementUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 2}
}

func (x *AccountUpdate_AchievementUpdate) GetProgresses() []*AchievementProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_AchievementUpdate) GetRewardedGroup() []uint32 {
	if x != nil {
		return x.RewardedGroup
	}
	return nil
}

type AccountUpdate_DailyTaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
	TaskList   []uint32        `protobuf:"varint,2,rep,packed,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
}

func (x *AccountUpdate_DailyTaskUpdate) Reset() {
	*x = AccountUpdate_DailyTaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_DailyTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_DailyTaskUpdate) ProtoMessage() {}

func (x *AccountUpdate_DailyTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_DailyTaskUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_DailyTaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 3}
}

func (x *AccountUpdate_DailyTaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_DailyTaskUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type AccountUpdate_TitleUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTitles    []uint32 `protobuf:"varint,1,rep,packed,name=new_titles,json=newTitles,proto3" json:"new_titles,omitempty"`
	RemoveTitles []uint32 `protobuf:"varint,2,rep,packed,name=remove_titles,json=removeTitles,proto3" json:"remove_titles,omitempty"`
}

func (x *AccountUpdate_TitleUpdate) Reset() {
	*x = AccountUpdate_TitleUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_TitleUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_TitleUpdate) ProtoMessage() {}

func (x *AccountUpdate_TitleUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_TitleUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_TitleUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 4}
}

func (x *AccountUpdate_TitleUpdate) GetNewTitles() []uint32 {
	if x != nil {
		return x.NewTitles
	}
	return nil
}

func (x *AccountUpdate_TitleUpdate) GetRemoveTitles() []uint32 {
	if x != nil {
		return x.RemoveTitles
	}
	return nil
}

type AccountUpdate_TaskUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
	TaskList   []uint32        `protobuf:"varint,2,rep,packed,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
}

func (x *AccountUpdate_TaskUpdate) Reset() {
	*x = AccountUpdate_TaskUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_TaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_TaskUpdate) ProtoMessage() {}

func (x *AccountUpdate_TaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_TaskUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_TaskUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 5}
}

func (x *AccountUpdate_TaskUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_TaskUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type AccountUpdate_AccountChallengeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progresses     []*TaskProgress `protobuf:"bytes,1,rep,name=progresses,proto3" json:"progresses,omitempty"`
	Level          uint32          `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	RefreshCount   uint32          `protobuf:"varint,3,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count,omitempty"`
	MatchCount     uint32          `protobuf:"varint,4,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	TicketId       uint32          `protobuf:"varint,5,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	TaskList       []uint32        `protobuf:"varint,6,rep,packed,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
	RewardedSeason []uint32        `protobuf:"varint,7,rep,packed,name=rewarded_season,json=rewardedSeason,proto3" json:"rewarded_season,omitempty"`
}

func (x *AccountUpdate_AccountChallengeUpdate) Reset() {
	*x = AccountUpdate_AccountChallengeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AccountChallengeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AccountChallengeUpdate) ProtoMessage() {}

func (x *AccountUpdate_AccountChallengeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AccountChallengeUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AccountChallengeUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 6}
}

func (x *AccountUpdate_AccountChallengeUpdate) GetProgresses() []*TaskProgress {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *AccountUpdate_AccountChallengeUpdate) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetRefreshCount() uint32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *AccountUpdate_AccountChallengeUpdate) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

func (x *AccountUpdate_AccountChallengeUpdate) GetRewardedSeason() []uint32 {
	if x != nil {
		return x.RewardedSeason
	}
	return nil
}

type AccountUpdate_AccountABMatchUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId       uint32                                           `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchCount    uint32                                           `protobuf:"varint,2,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	BuyInCount    uint32                                           `protobuf:"varint,3,opt,name=buy_in_count,json=buyInCount,proto3" json:"buy_in_count,omitempty"`
	Point         uint32                                           `protobuf:"varint,4,opt,name=point,proto3" json:"point,omitempty"`
	Rewarded      bool                                             `protobuf:"varint,5,opt,name=rewarded,proto3" json:"rewarded,omitempty"`
	MatchMaxPoint []*AccountUpdate_AccountABMatchUpdate_MatchPoint `protobuf:"bytes,6,rep,name=match_max_point,json=matchMaxPoint,proto3" json:"match_max_point,omitempty"`
	Quit          bool                                             `protobuf:"varint,7,opt,name=quit,proto3" json:"quit,omitempty"`
}

func (x *AccountUpdate_AccountABMatchUpdate) Reset() {
	*x = AccountUpdate_AccountABMatchUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AccountABMatchUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AccountABMatchUpdate) ProtoMessage() {}

func (x *AccountUpdate_AccountABMatchUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AccountABMatchUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AccountABMatchUpdate) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 7}
}

func (x *AccountUpdate_AccountABMatchUpdate) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetBuyInCount() uint32 {
	if x != nil {
		return x.BuyInCount
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate) GetRewarded() bool {
	if x != nil {
		return x.Rewarded
	}
	return false
}

func (x *AccountUpdate_AccountABMatchUpdate) GetMatchMaxPoint() []*AccountUpdate_AccountABMatchUpdate_MatchPoint {
	if x != nil {
		return x.MatchMaxPoint
	}
	return nil
}

func (x *AccountUpdate_AccountABMatchUpdate) GetQuit() bool {
	if x != nil {
		return x.Quit
	}
	return false
}

type AccountUpdate_AccountABMatchUpdate_MatchPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId uint32 `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Point   uint32 `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) Reset() {
	*x = AccountUpdate_AccountABMatchUpdate_MatchPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate_AccountABMatchUpdate_MatchPoint) ProtoMessage() {}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate_AccountABMatchUpdate_MatchPoint.ProtoReflect.Descriptor instead.
func (*AccountUpdate_AccountABMatchUpdate_MatchPoint) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{73, 7, 0}
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *AccountUpdate_AccountABMatchUpdate_MatchPoint) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type GameEndResult_PlayerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat         uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	TotalPoint   int32  `protobuf:"varint,2,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	PartPoint_1  int32  `protobuf:"varint,3,opt,name=part_point_1,json=partPoint1,proto3" json:"part_point_1,omitempty"`
	PartPoint_2  int32  `protobuf:"varint,4,opt,name=part_point_2,json=partPoint2,proto3" json:"part_point_2,omitempty"`
	GradingScore int32  `protobuf:"varint,5,opt,name=grading_score,json=gradingScore,proto3" json:"grading_score,omitempty"`
	Gold         int32  `protobuf:"varint,6,opt,name=gold,proto3" json:"gold,omitempty"`
}

func (x *GameEndResult_PlayerItem) Reset() {
	*x = GameEndResult_PlayerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndResult_PlayerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndResult_PlayerItem) ProtoMessage() {}

func (x *GameEndResult_PlayerItem) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndResult_PlayerItem.ProtoReflect.Descriptor instead.
func (*GameEndResult_PlayerItem) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{84, 0}
}

func (x *GameEndResult_PlayerItem) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetPartPoint_1() int32 {
	if x != nil {
		return x.PartPoint_1
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetPartPoint_2() int32 {
	if x != nil {
		return x.PartPoint_2
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetGradingScore() int32 {
	if x != nil {
		return x.GradingScore
	}
	return 0
}

func (x *GameEndResult_PlayerItem) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type RewardPlusResult_Exchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count    uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Exchange uint32 `protobuf:"varint,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *RewardPlusResult_Exchange) Reset() {
	*x = RewardPlusResult_Exchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPlusResult_Exchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPlusResult_Exchange) ProtoMessage() {}

func (x *RewardPlusResult_Exchange) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPlusResult_Exchange.ProtoReflect.Descriptor instead.
func (*RewardPlusResult_Exchange) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{93, 0}
}

func (x *RewardPlusResult_Exchange) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RewardPlusResult_Exchange) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RewardPlusResult_Exchange) GetExchange() uint32 {
	if x != nil {
		return x.Exchange
	}
	return 0
}

type Mail_I18NContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang    string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Context string `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *Mail_I18NContext) Reset() {
	*x = Mail_I18NContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mail_I18NContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail_I18NContext) ProtoMessage() {}

func (x *Mail_I18NContext) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail_I18NContext.ProtoReflect.Descriptor instead.
func (*Mail_I18NContext) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{95, 0}
}

func (x *Mail_I18NContext) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Mail_I18NContext) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type AccountStatisticByGameMode_RoundEndData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Sum  uint32 `protobuf:"varint,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AccountStatisticByGameMode_RoundEndData) Reset() {
	*x = AccountStatisticByGameMode_RoundEndData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByGameMode_RoundEndData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByGameMode_RoundEndData) ProtoMessage() {}

func (x *AccountStatisticByGameMode_RoundEndData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByGameMode_RoundEndData.ProtoReflect.Descriptor instead.
func (*AccountStatisticByGameMode_RoundEndData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{97, 0}
}

func (x *AccountStatisticByGameMode_RoundEndData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AccountStatisticByGameMode_RoundEndData) GetSum() uint32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AccountStatisticByGameMode_RankScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank     uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	ScoreSum int32  `protobuf:"varint,2,opt,name=score_sum,json=scoreSum,proto3" json:"score_sum,omitempty"`
	Count    uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AccountStatisticByGameMode_RankScore) Reset() {
	*x = AccountStatisticByGameMode_RankScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStatisticByGameMode_RankScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStatisticByGameMode_RankScore) ProtoMessage() {}

func (x *AccountStatisticByGameMode_RankScore) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStatisticByGameMode_RankScore.ProtoReflect.Descriptor instead.
func (*AccountStatisticByGameMode_RankScore) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{97, 1}
}

func (x *AccountStatisticByGameMode_RankScore) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *AccountStatisticByGameMode_RankScore) GetScoreSum() int32 {
	if x != nil {
		return x.ScoreSum
	}
	return 0
}

func (x *AccountStatisticByGameMode_RankScore) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AccountDetailStatisticV2_RankStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalStatistic   *AccountDetailStatisticV2_RankStatistic_RankData `protobuf:"bytes,1,opt,name=total_statistic,json=totalStatistic,proto3" json:"total_statistic,omitempty"`
	MonthStatistic   *AccountDetailStatisticV2_RankStatistic_RankData `protobuf:"bytes,2,opt,name=month_statistic,json=monthStatistic,proto3" json:"month_statistic,omitempty"`
	MonthRefreshTime uint32                                           `protobuf:"varint,3,opt,name=month_refresh_time,json=monthRefreshTime,proto3" json:"month_refresh_time,omitempty"`
}

func (x *AccountDetailStatisticV2_RankStatistic) Reset() {
	*x = AccountDetailStatisticV2_RankStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_RankStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_RankStatistic) ProtoMessage() {}

func (x *AccountDetailStatisticV2_RankStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_RankStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_RankStatistic) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102, 0}
}

func (x *AccountDetailStatisticV2_RankStatistic) GetTotalStatistic() *AccountDetailStatisticV2_RankStatistic_RankData {
	if x != nil {
		return x.TotalStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_RankStatistic) GetMonthStatistic() *AccountDetailStatisticV2_RankStatistic_RankData {
	if x != nil {
		return x.MonthStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_RankStatistic) GetMonthRefreshTime() uint32 {
	if x != nil {
		return x.MonthRefreshTime
	}
	return 0
}

type AccountDetailStatisticV2_CustomizedContestStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalStatistic   *AccountDetailStatistic `protobuf:"bytes,1,opt,name=total_statistic,json=totalStatistic,proto3" json:"total_statistic,omitempty"`
	MonthStatistic   *AccountDetailStatistic `protobuf:"bytes,2,opt,name=month_statistic,json=monthStatistic,proto3" json:"month_statistic,omitempty"`
	MonthRefreshTime uint32                  `protobuf:"varint,3,opt,name=month_refresh_time,json=monthRefreshTime,proto3" json:"month_refresh_time,omitempty"`
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) Reset() {
	*x = AccountDetailStatisticV2_CustomizedContestStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_CustomizedContestStatistic) ProtoMessage() {}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_CustomizedContestStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_CustomizedContestStatistic) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102, 1}
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) GetTotalStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.TotalStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) GetMonthStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.MonthStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_CustomizedContestStatistic) GetMonthRefreshTime() uint32 {
	if x != nil {
		return x.MonthRefreshTime
	}
	return 0
}

type AccountDetailStatisticV2_ChallengeStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllSeason      *AccountDetailStatistic                                   `protobuf:"bytes,1,opt,name=all_season,json=allSeason,proto3" json:"all_season,omitempty"`
	SeasonDataList []*AccountDetailStatisticV2_ChallengeStatistic_SeasonData `protobuf:"bytes,2,rep,name=season_data_list,json=seasonDataList,proto3" json:"season_data_list,omitempty"`
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) Reset() {
	*x = AccountDetailStatisticV2_ChallengeStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_ChallengeStatistic) ProtoMessage() {}

func (x *AccountDetailStatisticV2_ChallengeStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_ChallengeStatistic.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_ChallengeStatistic) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102, 2}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) GetAllSeason() *AccountDetailStatistic {
	if x != nil {
		return x.AllSeason
	}
	return nil
}

func (x *AccountDetailStatisticV2_ChallengeStatistic) GetSeasonDataList() []*AccountDetailStatisticV2_ChallengeStatistic_SeasonData {
	if x != nil {
		return x.SeasonDataList
	}
	return nil
}

type AccountDetailStatisticV2_RankStatistic_RankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllLevelStatistic *AccountDetailStatistic                                          `protobuf:"bytes,1,opt,name=all_level_statistic,json=allLevelStatistic,proto3" json:"all_level_statistic,omitempty"`
	LevelDataList     []*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData `protobuf:"bytes,2,rep,name=level_data_list,json=levelDataList,proto3" json:"level_data_list,omitempty"`
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) Reset() {
	*x = AccountDetailStatisticV2_RankStatistic_RankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_RankStatistic_RankData) ProtoMessage() {}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_RankStatistic_RankData.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_RankStatistic_RankData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102, 0, 0}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) GetAllLevelStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.AllLevelStatistic
	}
	return nil
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData) GetLevelDataList() []*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData {
	if x != nil {
		return x.LevelDataList
	}
	return nil
}

type AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankLevel uint32                  `protobuf:"varint,1,opt,name=rank_level,json=rankLevel,proto3" json:"rank_level,omitempty"`
	Statistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=statistic,proto3" json:"statistic,omitempty"`
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) Reset() {
	*x = AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) ProtoMessage() {}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102, 0, 0, 0}
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) GetRankLevel() uint32 {
	if x != nil {
		return x.RankLevel
	}
	return 0
}

func (x *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) GetStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

type AccountDetailStatisticV2_ChallengeStatistic_SeasonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId  uint32                  `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Statistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=statistic,proto3" json:"statistic,omitempty"`
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) Reset() {
	*x = AccountDetailStatisticV2_ChallengeStatistic_SeasonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailStatisticV2_ChallengeStatistic_SeasonData) ProtoMessage() {}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailStatisticV2_ChallengeStatistic_SeasonData.ProtoReflect.Descriptor instead.
func (*AccountDetailStatisticV2_ChallengeStatistic_SeasonData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{102, 2, 0}
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) GetSeasonId() uint32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *AccountDetailStatisticV2_ChallengeStatistic_SeasonData) GetStatistic() *AccountDetailStatistic {
	if x != nil {
		return x.Statistic
	}
	return nil
}

type ZHPShop_RefreshCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ZHPShop_RefreshCount) Reset() {
	*x = ZHPShop_RefreshCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZHPShop_RefreshCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZHPShop_RefreshCount) ProtoMessage() {}

func (x *ZHPShop_RefreshCount) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZHPShop_RefreshCount.ProtoReflect.Descriptor instead.
func (*ZHPShop_RefreshCount) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{125, 0}
}

func (x *ZHPShop_RefreshCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ZHPShop_RefreshCount) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PaymentSettingV2_PaymentMaintain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime        uint32 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	GoodsClickAction uint32 `protobuf:"varint,3,opt,name=goods_click_action,json=goodsClickAction,proto3" json:"goods_click_action,omitempty"`
	GoodsClickText   string `protobuf:"bytes,4,opt,name=goods_click_text,json=goodsClickText,proto3" json:"goods_click_text,omitempty"`
}

func (x *PaymentSettingV2_PaymentMaintain) Reset() {
	*x = PaymentSettingV2_PaymentMaintain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSettingV2_PaymentMaintain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSettingV2_PaymentMaintain) ProtoMessage() {}

func (x *PaymentSettingV2_PaymentMaintain) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSettingV2_PaymentMaintain.ProtoReflect.Descriptor instead.
func (*PaymentSettingV2_PaymentMaintain) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{130, 0}
}

func (x *PaymentSettingV2_PaymentMaintain) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PaymentSettingV2_PaymentMaintain) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PaymentSettingV2_PaymentMaintain) GetGoodsClickAction() uint32 {
	if x != nil {
		return x.GoodsClickAction
	}
	return 0
}

func (x *PaymentSettingV2_PaymentMaintain) GetGoodsClickText() string {
	if x != nil {
		return x.GoodsClickText
	}
	return ""
}

type PaymentSettingV2_PaymentSettingUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform         string                            `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	IsShow           bool                              `protobuf:"varint,2,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	GoodsClickAction uint32                            `protobuf:"varint,3,opt,name=goods_click_action,json=goodsClickAction,proto3" json:"goods_click_action,omitempty"`
	GoodsClickText   string                            `protobuf:"bytes,4,opt,name=goods_click_text,json=goodsClickText,proto3" json:"goods_click_text,omitempty"`
	Maintain         *PaymentSettingV2_PaymentMaintain `protobuf:"bytes,5,opt,name=maintain,proto3" json:"maintain,omitempty"`
}

func (x *PaymentSettingV2_PaymentSettingUnit) Reset() {
	*x = PaymentSettingV2_PaymentSettingUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSettingV2_PaymentSettingUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSettingV2_PaymentSettingUnit) ProtoMessage() {}

func (x *PaymentSettingV2_PaymentSettingUnit) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSettingV2_PaymentSettingUnit.ProtoReflect.Descriptor instead.
func (*PaymentSettingV2_PaymentSettingUnit) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{130, 1}
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetGoodsClickAction() uint32 {
	if x != nil {
		return x.GoodsClickAction
	}
	return 0
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetGoodsClickText() string {
	if x != nil {
		return x.GoodsClickText
	}
	return ""
}

func (x *PaymentSettingV2_PaymentSettingUnit) GetMaintain() *PaymentSettingV2_PaymentMaintain {
	if x != nil {
		return x.Maintain
	}
	return nil
}

type PaymentSetting_WechatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableCreate         bool   `protobuf:"varint,1,opt,name=disable_create,json=disableCreate,proto3" json:"disable_create,omitempty"`
	PaymentSourcePlatform uint32 `protobuf:"varint,2,opt,name=payment_source_platform,json=paymentSourcePlatform,proto3" json:"payment_source_platform,omitempty"`
	EnableCredit          bool   `protobuf:"varint,3,opt,name=enable_credit,json=enableCredit,proto3" json:"enable_credit,omitempty"`
}

func (x *PaymentSetting_WechatData) Reset() {
	*x = PaymentSetting_WechatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSetting_WechatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSetting_WechatData) ProtoMessage() {}

func (x *PaymentSetting_WechatData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSetting_WechatData.ProtoReflect.Descriptor instead.
func (*PaymentSetting_WechatData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{131, 0}
}

func (x *PaymentSetting_WechatData) GetDisableCreate() bool {
	if x != nil {
		return x.DisableCreate
	}
	return false
}

func (x *PaymentSetting_WechatData) GetPaymentSourcePlatform() uint32 {
	if x != nil {
		return x.PaymentSourcePlatform
	}
	return 0
}

func (x *PaymentSetting_WechatData) GetEnableCredit() bool {
	if x != nil {
		return x.EnableCredit
	}
	return false
}

type PaymentSetting_AlipayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableCreate         bool   `protobuf:"varint,1,opt,name=disable_create,json=disableCreate,proto3" json:"disable_create,omitempty"`
	PaymentSourcePlatform uint32 `protobuf:"varint,2,opt,name=payment_source_platform,json=paymentSourcePlatform,proto3" json:"payment_source_platform,omitempty"`
}

func (x *PaymentSetting_AlipayData) Reset() {
	*x = PaymentSetting_AlipayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSetting_AlipayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSetting_AlipayData) ProtoMessage() {}

func (x *PaymentSetting_AlipayData) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSetting_AlipayData.ProtoReflect.Descriptor instead.
func (*PaymentSetting_AlipayData) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{131, 1}
}

func (x *PaymentSetting_AlipayData) GetDisableCreate() bool {
	if x != nil {
		return x.DisableCreate
	}
	return false
}

func (x *PaymentSetting_AlipayData) GetPaymentSourcePlatform() uint32 {
	if x != nil {
		return x.PaymentSourcePlatform
	}
	return 0
}

type RecordGame_AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Seat        uint32        `protobuf:"varint,2,opt,name=seat,proto3" json:"seat,omitempty"`
	Nickname    string        `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarId    uint32        `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Character   *Character    `protobuf:"bytes,5,opt,name=character,proto3" json:"character,omitempty"`
	Title       uint32        `protobuf:"varint,6,opt,name=title,proto3" json:"title,omitempty"`
	Level       *AccountLevel `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	Level3      *AccountLevel `protobuf:"bytes,8,opt,name=level3,proto3" json:"level3,omitempty"`
	AvatarFrame uint32        `protobuf:"varint,9,opt,name=avatar_frame,json=avatarFrame,proto3" json:"avatar_frame,omitempty"`
	Verified    uint32        `protobuf:"varint,10,opt,name=verified,proto3" json:"verified,omitempty"`
	Views       []*ViewSlot   `protobuf:"bytes,11,rep,name=views,proto3" json:"views,omitempty"`
}

func (x *RecordGame_AccountInfo) Reset() {
	*x = RecordGame_AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGame_AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGame_AccountInfo) ProtoMessage() {}

func (x *RecordGame_AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGame_AccountInfo.ProtoReflect.Descriptor instead.
func (*RecordGame_AccountInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{141, 0}
}

func (x *RecordGame_AccountInfo) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RecordGame_AccountInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *RecordGame_AccountInfo) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetLevel() *AccountLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *RecordGame_AccountInfo) GetLevel3() *AccountLevel {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *RecordGame_AccountInfo) GetAvatarFrame() uint32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetVerified() uint32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

func (x *RecordGame_AccountInfo) GetViews() []*ViewSlot {
	if x != nil {
		return x.Views
	}
	return nil
}

type CustomizedContestGameStart_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *CustomizedContestGameStart_Item) Reset() {
	*x = CustomizedContestGameStart_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameStart_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameStart_Item) ProtoMessage() {}

func (x *CustomizedContestGameStart_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameStart_Item.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameStart_Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{142, 0}
}

func (x *CustomizedContestGameStart_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CustomizedContestGameStart_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type CustomizedContestGameEnd_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	TotalPoint int32  `protobuf:"varint,3,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
}

func (x *CustomizedContestGameEnd_Item) Reset() {
	*x = CustomizedContestGameEnd_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizedContestGameEnd_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizedContestGameEnd_Item) ProtoMessage() {}

func (x *CustomizedContestGameEnd_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizedContestGameEnd_Item.ProtoReflect.Descriptor instead.
func (*CustomizedContestGameEnd_Item) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{143, 0}
}

func (x *CustomizedContestGameEnd_Item) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CustomizedContestGameEnd_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CustomizedContestGameEnd_Item) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

type GameRoundHuData_HuPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile string `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile,omitempty"`
	Seat uint32 `protobuf:"varint,2,opt,name=seat,proto3" json:"seat,omitempty"`
	Liqi uint32 `protobuf:"varint,3,opt,name=liqi,proto3" json:"liqi,omitempty"`
}

func (x *GameRoundHuData_HuPai) Reset() {
	*x = GameRoundHuData_HuPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundHuData_HuPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundHuData_HuPai) ProtoMessage() {}

func (x *GameRoundHuData_HuPai) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundHuData_HuPai.ProtoReflect.Descriptor instead.
func (*GameRoundHuData_HuPai) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{148, 0}
}

func (x *GameRoundHuData_HuPai) GetTile() string {
	if x != nil {
		return x.Tile
	}
	return ""
}

func (x *GameRoundHuData_HuPai) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameRoundHuData_HuPai) GetLiqi() uint32 {
	if x != nil {
		return x.Liqi
	}
	return 0
}

type GameRoundHuData_Fan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Fan   uint32 `protobuf:"varint,3,opt,name=fan,proto3" json:"fan,omitempty"`
}

func (x *GameRoundHuData_Fan) Reset() {
	*x = GameRoundHuData_Fan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoundHuData_Fan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoundHuData_Fan) ProtoMessage() {}

func (x *GameRoundHuData_Fan) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoundHuData_Fan.ProtoReflect.Descriptor instead.
func (*GameRoundHuData_Fan) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{148, 1}
}

func (x *GameRoundHuData_Fan) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameRoundHuData_Fan) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GameRoundHuData_Fan) GetFan() uint32 {
	if x != nil {
		return x.Fan
	}
	return 0
}

type GameFinalSnapshot_CalculateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitPoint        uint32  `protobuf:"varint,1,opt,name=init_point,json=initPoint,proto3" json:"init_point,omitempty"`
	Jingsuanyuandian uint32  `protobuf:"varint,2,opt,name=jingsuanyuandian,proto3" json:"jingsuanyuandian,omitempty"`
	RankPoints       []int32 `protobuf:"varint,3,rep,packed,name=rank_points,json=rankPoints,proto3" json:"rank_points,omitempty"`
}

func (x *GameFinalSnapshot_CalculateParam) Reset() {
	*x = GameFinalSnapshot_CalculateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_CalculateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_CalculateParam) ProtoMessage() {}

func (x *GameFinalSnapshot_CalculateParam) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_CalculateParam.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_CalculateParam) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{152, 0}
}

func (x *GameFinalSnapshot_CalculateParam) GetInitPoint() uint32 {
	if x != nil {
		return x.InitPoint
	}
	return 0
}

func (x *GameFinalSnapshot_CalculateParam) GetJingsuanyuandian() uint32 {
	if x != nil {
		return x.Jingsuanyuandian
	}
	return 0
}

func (x *GameFinalSnapshot_CalculateParam) GetRankPoints() []int32 {
	if x != nil {
		return x.RankPoints
	}
	return nil
}

type GameFinalSnapshot_GameSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           uint32           `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	AccountId      uint32           `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	NotifyEndpoint *NetworkEndpoint `protobuf:"bytes,3,opt,name=notify_endpoint,json=notifyEndpoint,proto3" json:"notify_endpoint,omitempty"`
	ClientAddress  string           `protobuf:"bytes,4,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	IsConnected    bool             `protobuf:"varint,5,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
}

func (x *GameFinalSnapshot_GameSeat) Reset() {
	*x = GameFinalSnapshot_GameSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_GameSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_GameSeat) ProtoMessage() {}

func (x *GameFinalSnapshot_GameSeat) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_GameSeat.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_GameSeat) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{152, 1}
}

func (x *GameFinalSnapshot_GameSeat) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameFinalSnapshot_GameSeat) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GameFinalSnapshot_GameSeat) GetNotifyEndpoint() *NetworkEndpoint {
	if x != nil {
		return x.NotifyEndpoint
	}
	return nil
}

func (x *GameFinalSnapshot_GameSeat) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

func (x *GameFinalSnapshot_GameSeat) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

type GameFinalSnapshot_FinalPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat         uint32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	TotalPoint   int32  `protobuf:"varint,2,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	PartPoint_1  int32  `protobuf:"varint,3,opt,name=part_point_1,json=partPoint1,proto3" json:"part_point_1,omitempty"`
	PartPoint_2  int32  `protobuf:"varint,4,opt,name=part_point_2,json=partPoint2,proto3" json:"part_point_2,omitempty"`
	GradingScore int32  `protobuf:"varint,5,opt,name=grading_score,json=gradingScore,proto3" json:"grading_score,omitempty"`
	Gold         int32  `protobuf:"varint,6,opt,name=gold,proto3" json:"gold,omitempty"`
}

func (x *GameFinalSnapshot_FinalPlayer) Reset() {
	*x = GameFinalSnapshot_FinalPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_FinalPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_FinalPlayer) ProtoMessage() {}

func (x *GameFinalSnapshot_FinalPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_FinalPlayer.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_FinalPlayer) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{152, 2}
}

func (x *GameFinalSnapshot_FinalPlayer) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetTotalPoint() int32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetPartPoint_1() int32 {
	if x != nil {
		return x.PartPoint_1
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetPartPoint_2() int32 {
	if x != nil {
		return x.PartPoint_2
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetGradingScore() int32 {
	if x != nil {
		return x.GradingScore
	}
	return 0
}

func (x *GameFinalSnapshot_FinalPlayer) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type GameFinalSnapshot_AFKInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealTileCount uint32 `protobuf:"varint,1,opt,name=deal_tile_count,json=dealTileCount,proto3" json:"deal_tile_count,omitempty"`
	MoqieCount    uint32 `protobuf:"varint,2,opt,name=moqie_count,json=moqieCount,proto3" json:"moqie_count,omitempty"`
	Seat          uint32 `protobuf:"varint,3,opt,name=seat,proto3" json:"seat,omitempty"`
}

func (x *GameFinalSnapshot_AFKInfo) Reset() {
	*x = GameFinalSnapshot_AFKInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFinalSnapshot_AFKInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinalSnapshot_AFKInfo) ProtoMessage() {}

func (x *GameFinalSnapshot_AFKInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinalSnapshot_AFKInfo.ProtoReflect.Descriptor instead.
func (*GameFinalSnapshot_AFKInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{152, 3}
}

func (x *GameFinalSnapshot_AFKInfo) GetDealTileCount() uint32 {
	if x != nil {
		return x.DealTileCount
	}
	return 0
}

func (x *GameFinalSnapshot_AFKInfo) GetMoqieCount() uint32 {
	if x != nil {
		return x.MoqieCount
	}
	return 0
}

func (x *GameFinalSnapshot_AFKInfo) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

type ContestDetailRuleV2_ExtraRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequiredLevel uint32 `protobuf:"varint,1,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	MaxGameCount  uint32 `protobuf:"varint,2,opt,name=max_game_count,json=maxGameCount,proto3" json:"max_game_count,omitempty"`
}

func (x *ContestDetailRuleV2_ExtraRule) Reset() {
	*x = ContestDetailRuleV2_ExtraRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestDetailRuleV2_ExtraRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestDetailRuleV2_ExtraRule) ProtoMessage() {}

func (x *ContestDetailRuleV2_ExtraRule) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestDetailRuleV2_ExtraRule.ProtoReflect.Descriptor instead.
func (*ContestDetailRuleV2_ExtraRule) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{155, 0}
}

func (x *ContestDetailRuleV2_ExtraRule) GetRequiredLevel() uint32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

func (x *ContestDetailRuleV2_ExtraRule) GetMaxGameCount() uint32 {
	if x != nil {
		return x.MaxGameCount
	}
	return 0
}

type RecordHuleInfo_RecordFanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint32 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	Id  uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RecordHuleInfo_RecordFanInfo) Reset() {
	*x = RecordHuleInfo_RecordFanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHuleInfo_RecordFanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHuleInfo_RecordFanInfo) ProtoMessage() {}

func (x *RecordHuleInfo_RecordFanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHuleInfo_RecordFanInfo.ProtoReflect.Descriptor instead.
func (*RecordHuleInfo_RecordFanInfo) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{159, 0}
}

func (x *RecordHuleInfo_RecordFanInfo) GetVal() uint32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *RecordHuleInfo_RecordFanInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NotifyRoomPlayerReady_AccountReadyState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Ready     bool   `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *NotifyRoomPlayerReady_AccountReadyState) Reset() {
	*x = NotifyRoomPlayerReady_AccountReadyState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerReady_AccountReadyState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerReady_AccountReadyState) ProtoMessage() {}

func (x *NotifyRoomPlayerReady_AccountReadyState) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerReady_AccountReadyState.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerReady_AccountReadyState) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{171, 0}
}

func (x *NotifyRoomPlayerReady_AccountReadyState) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerReady_AccountReadyState) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type NotifyRoomPlayerDressing_AccountDressingState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Dressing  bool   `protobuf:"varint,2,opt,name=dressing,proto3" json:"dressing,omitempty"`
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) Reset() {
	*x = NotifyRoomPlayerDressing_AccountDressingState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRoomPlayerDressing_AccountDressingState) ProtoMessage() {}

func (x *NotifyRoomPlayerDressing_AccountDressingState) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRoomPlayerDressing_AccountDressingState.ProtoReflect.Descriptor instead.
func (*NotifyRoomPlayerDressing_AccountDressingState) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{172, 0}
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NotifyRoomPlayerDressing_AccountDressingState) GetDressing() bool {
	if x != nil {
		return x.Dressing
	}
	return false
}

type NotifyPayResult_ResourceModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Final uint32 `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *NotifyPayResult_ResourceModify) Reset() {
	*x = NotifyPayResult_ResourceModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dhs_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPayResult_ResourceModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPayResult_ResourceModify) ProtoMessage() {}

func (x *NotifyPayResult_ResourceModify) ProtoReflect() protoreflect.Message {
	mi := &file_dhs_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPayResult_ResourceModify.ProtoReflect.Descriptor instead.
func (*NotifyPayResult_ResourceModify) Descriptor() ([]byte, []int) {
	return file_dhs_proto_rawDescGZIP(), []int{199, 0}
}

func (x *NotifyPayResult_ResourceModify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyPayResult_ResourceModify) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotifyPayResult_ResourceModify) GetFinal() uint32 {
	if x != nil {
		return x.Final
	}
	return 0
}

var File_dhs_proto protoreflect.FileDescriptor

var file_dhs_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x68, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x6c, 0x71, 0x22,
	0x8a, 0x05, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5a, 0x6f, 0x6e,
	0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe3, 0x01, 0x0a,
	0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x43, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x71,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x1a, 0x47, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x67, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x56, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x1b, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x22,
	0xe0, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x70, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61,
	0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d,
	0x6f, 0x6e, 0x64, 0x22, 0x39, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x30,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x22, 0x50, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x22, 0x2f, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xfb, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5a, 0x6f,
	0x6e, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x1a,
	0x52, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x0d, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x41, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x45, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x04, 0x65, 0x69, 0x64, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x45, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x43, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x45,
	0x69, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x41, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x20, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x66, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x95, 0x01, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x63, 0x6b, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xcf,
	0x02, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x4c, 0x69, 0x76, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x68, 0x61, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x69, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x1a, 0x5a, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x22, 0x54, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x27, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0xfe, 0x01, 0x0a, 0x27, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x51, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x40, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0x30, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x52, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x20, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x74, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x71,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x22, 0xfd, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x41, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xb1, 0x01, 0x0a, 0x25, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x25, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x2d, 0x0a, 0x17, 0x52,
	0x65, 0x71, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0xb2, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c,
	0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48,
	0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x6e,
	0x6b, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x8e, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc6, 0x02, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x12, 0x47, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x1a, 0xdf, 0x01,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xc5, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x09,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x1a, 0x45, 0x0a, 0x08, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x1a, 0x45, 0x0a, 0x08, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x52,
	0x65, 0x73, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x1a, 0x45, 0x0a, 0x08, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x18, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x22, 0x60, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50,
	0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x73, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4b, 0x69, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x33, 0x32, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x33, 0x32, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x31, 0x0a, 0x07, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x0b, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x09,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x71, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x71, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x29, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x0d, 0x41, 0x6e,
	0x74, 0x69, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xad, 0x0a, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x13, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x42, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x75, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x48, 0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x48, 0x75, 0x12, 0x4a, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x5f, 0x68, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x75,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48,
	0x75, 0x12, 0x5a, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x32, 0x30, 0x5f, 0x68,
	0x75, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x71,
	0x69, 0x32, 0x30, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x32, 0x30, 0x48, 0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x5a, 0x0a,
	0x14, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x31, 0x30, 0x5f, 0x68, 0x75, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x51, 0x69, 0x31, 0x30, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x31, 0x30,
	0x48, 0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x15, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x5f, 0x31, 0x30, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x31, 0x30, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x1a, 0x96, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x6f, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x7a, 0x69, 0x6d, 0x6f, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x7a, 0x69, 0x6d, 0x6f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66,
	0x61, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x73, 0x0a,
	0x09, 0x48, 0x75, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x6f, 0x72, 0x61, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66,
	0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x61, 0x6e, 0x1a, 0xb4, 0x01, 0x0a, 0x0f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x75,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6e, 0x73, 0x68, 0x75,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x6e, 0x73, 0x68, 0x75, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x6f, 0x72, 0x61, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x64, 0x6f, 0x72, 0x61, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68,
	0x61, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x70, 0x61,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x75, 0x70, 0x61, 0x69, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x88, 0x01, 0x0a, 0x0d, 0x4c, 0x69,
	0x71, 0x69, 0x32, 0x30, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x64, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x75, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x48, 0x75, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x5b, 0x0a, 0x0d, 0x4c, 0x69, 0x51, 0x69, 0x31, 0x30, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x78,
	0x75, 0x61, 0x6e, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x58, 0x75, 0x61, 0x6e, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x6e, 0x73, 0x68, 0x75, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x6e, 0x73, 0x68,
	0x75, 0x1a, 0x41, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a,
	0x10, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x39, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x68,
	0x6a, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x37, 0x0a, 0x08, 0x56,
	0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0xdb, 0x09, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x61, 0x6e, 0x74, 0x69, 0x5f, 0x61, 0x64, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x6f, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x46, 0x0a,
	0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
	0x64, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x69, 0x61,
	0x6d, 0x6f, 0x6e, 0x64, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x69,
	0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a,
	0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x1b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73,
	0x12, 0x49, 0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x37, 0x0a, 0x0f, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3a, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x6b, 0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x52, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x3c, 0x0a, 0x10, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xd8, 0x10, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x75, 0x6d,
	0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x62, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x61, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x03, 0x62, 0x61, 0x67, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x69,
	0x4c, 0x69, 0x61, 0x6e, 0x52, 0x07, 0x73, 0x68, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x12, 0x40, 0x0a,
	0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x33, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x10, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x66, 0x6c, 0x69, 0x70, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x4e, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x4e, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x46, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x61, 0x62, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x07, 0x61, 0x62, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x37, 0x0a, 0x0f,
	0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x1a, 0xac, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6e, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x1a, 0x73, 0x0a, 0x11, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x60, 0x0a, 0x0f, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x51, 0x0a, 0x0b, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09,
	0x6e, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x1a, 0x5b,
	0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x89, 0x02, 0x0a, 0x16,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0xd4, 0x02, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x62, 0x75, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x12, 0x59, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x42, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x71,
	0x75, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x71, 0x75, 0x69, 0x74, 0x1a,
	0x3d, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x61,
	0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x55, 0x69,
	0x64, 0x22, 0x73, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x24, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xda, 0x04, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x39,
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x62, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x22, 0xe0, 0x02, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x87, 0x02, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a,
	0x13, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x69, 0x78, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x61, 0x69, 0x78, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x65,
	0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xac, 0x0e, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x41, 0x64, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66,
	0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x6a, 0x69,
	0x66, 0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x4a, 0x69,
	0x66, 0x65, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x61, 0x6e, 0x62, 0x69, 0x61, 0x6e, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x61,
	0x6e, 0x62, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69,
	0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x62, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x31, 0x12, 0x22,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x32, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66,
	0x75, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66,
	0x75, 0x5f, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x46, 0x61, 0x66, 0x75, 0x33, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c,
	0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x71, 0x69, 0x65, 0x73,
	0x68, 0x61, 0x6e, 0x67, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x68, 0x61, 0x76, 0x65, 0x51, 0x69, 0x65, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x6d,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x62,
	0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x68, 0x61, 0x76, 0x65, 0x42, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x2d, 0x0a, 0x13,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64,
	0x6f, 0x72, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x47,
	0x61, 0x6e, 0x67, 0x42, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x3b, 0x0a, 0x1a, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x17, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x72, 0x61, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x6c, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65,
	0x5f, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x68, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x29, 0x0a, 0x11, 0x68, 0x61,
	0x76, 0x65, 0x5f, 0x67, 0x61, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6e, 0x67, 0x4c,
	0x69, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69,
	0x66, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e, 0x64, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x66, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e,
	0x64, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x61, 0x6e,
	0x67, 0x73, 0x61, 0x6e, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61,
	0x76, 0x65, 0x53, 0x69, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x61, 0x6e, 0x6c, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x6a, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x6a, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6a,
	0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x69, 0x75, 0x70, 0x61, 0x69, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x4a, 0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e,
	0x67, 0x6a, 0x69, 0x75, 0x70, 0x61, 0x69, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f,
	0x73, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x68, 0x65, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x53, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x68, 0x65, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x74,
	0x69, 0x61, 0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65,
	0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x65, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c,
	0x65, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x68, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x65, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12,
	0x35, 0x0a, 0x16, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c,
	0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x68, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e,
	0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69,
	0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x65, 0x5f,
	0x79, 0x69, 0x66, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x76, 0x65,
	0x59, 0x69, 0x66, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6e,
	0x72, 0x75, 0x78, 0x69, 0x72, 0x75, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61,
	0x76, 0x65, 0x4e, 0x61, 0x6e, 0x72, 0x75, 0x78, 0x69, 0x72, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x6a,
	0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79,
	0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x6d, 0x61, 0x5f, 0x32, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x33, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x33, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x34, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x34, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69,
	0x61, 0x6e, 0x6a, 0x69, 0x65, 0x74, 0x69, 0x73, 0x68, 0x69, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x62, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x65, 0x74, 0x69, 0x73, 0x68, 0x69, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x69, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x73, 0x75, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x68, 0x61, 0x76, 0x65, 0x5a, 0x69, 0x6d, 0x6f, 0x73, 0x75, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x79, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x59, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x61, 0x6e, 0x66, 0x75, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x61, 0x6e, 0x66, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x79, 0x69, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x75, 0x79, 0x69, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61, 0x33, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x33, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x69,
	0x75, 0x63, 0x68, 0x61, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6a, 0x69, 0x75, 0x63, 0x68, 0x61, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x75, 0x79, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x75, 0x79, 0x75, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x69, 0x6a, 0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x69, 0x6a,
	0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x22, 0xeb, 0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a, 0xbe,
	0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x22,
	0x6f, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3f, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x22, 0x66, 0x0a, 0x03, 0x42, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c, 0x71, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x09,
	0x42, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4c, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x15, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x47, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x28,
	0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x4c,
	0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x86, 0x01, 0x0a,
	0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd0, 0x03, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x49, 0x31, 0x38, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x31,
	0x38, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x31,
	0x38, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x4d, 0x61,
	0x69, 0x6c, 0x2e, 0x49, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x31, 0x38, 0x6e, 0x1a, 0x3b, 0x0a, 0x0b, 0x49,
	0x31, 0x38, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf0, 0x05, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d,
	0x12, 0x2e, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x67,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x6f, 0x6c, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x53, 0x75,
	0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x64,
	0x69, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x64,
	0x61, 0x64, 0x69, 0x61, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x48, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x69,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6c, 0x69, 0x71, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x22,
	0x0a, 0x0d, 0x78, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x78, 0x75, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x69,
	0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e,
	0x67, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x5f,
	0x73, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x61, 0x72, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x1a, 0x34, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a, 0x52, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x53, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x15, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79,
	0x46, 0x61, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x90, 0x01, 0x0a,
	0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x61, 0x6e, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2b,
	0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x42, 0x79, 0x46, 0x61, 0x6e, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x22,
	0xe1, 0x01, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79, 0x46, 0x61, 0x6e, 0x52,
	0x03, 0x66, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x69, 0x75, 0x6a,
	0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x39, 0x0a, 0x0c, 0x66, 0x61, 0x6e, 0x5f,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x61, 0x6e, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x52, 0x0b, 0x66, 0x61, 0x6e, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x42, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x22, 0x97, 0x0c, 0x0a, 0x18,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x12, 0x4e, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0d, 0x72, 0x61,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x79, 0x0a, 0x1c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x1a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x52, 0x0a, 0x17, 0x6c, 0x65, 0x69, 0x73, 0x75, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x15, 0x6c, 0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x6b, 0x0a, 0x19, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x17,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0xa7, 0x04, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x5c, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x5c, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x4a, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x69, 0x0a, 0x0f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x56, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x68, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x6b, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x61,
	0x6e, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x1a, 0xd4, 0x01, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x12, 0x43, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x9a, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x39, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x09, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x10, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x56, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x63, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x22, 0x3a, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x68, 0x69, 0x4c, 0x69, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xa5, 0x02, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x27, 0x0a,
	0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22,
	0x70, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x22, 0x5e, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x76, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3d,
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a,
	0x12, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x69, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c,
	0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x10, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0xa2, 0x01, 0x0a, 0x0c,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x53, 0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xc5, 0x01,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x6b, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x31, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x07, 0x5a, 0x48, 0x50,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x75,
	0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a,
	0x62, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6c, 0x71, 0x2e, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x60, 0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x03, 0x7a, 0x68, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c,
	0x71, 0x2e, 0x5a, 0x48, 0x50, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x03, 0x7a, 0x68, 0x70, 0x12, 0x2e,
	0x0a, 0x0b, 0x62, 0x75, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3b, 0x0a,
	0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x12, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x32,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x52, 0x10, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x22, 0x97,
	0x04, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x56, 0x32, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x1a, 0xa3, 0x01, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x65,
	0x78, 0x74, 0x1a, 0xe3, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x2c,
	0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x32, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x08,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x22, 0xf9, 0x03, 0x0a, 0x0e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x71, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x1a, 0x90, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x1a, 0x6b, 0x0a, 0x0a, 0x41, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x22, 0x38, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9f,
	0x01, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x7c, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56, 0x32, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x68, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x66, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98,
	0x01, 0x0a, 0x09, 0x46, 0x61, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x61, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x66, 0x61, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x15, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x5b, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0xc9, 0x02, 0x0a,
	0x19, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0xdd, 0x03, 0x0a, 0x17, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd9, 0x04, 0x0a, 0x0a, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x36, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0xf1, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x1a, 0x41, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x1a, 0x62, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x79, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x47, 0x0a, 0x0e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x67,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x9e, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x67,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x67, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xc8, 0x04, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x75,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x05, 0x68, 0x75, 0x70, 0x61, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x48, 0x75, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x75, 0x50, 0x61, 0x69, 0x52, 0x05,
	0x68, 0x75, 0x70, 0x61, 0x69, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x48, 0x75, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x61, 0x6e, 0x52, 0x04, 0x66, 0x61,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x78, 0x75, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x15,
	0x0a, 0x06, 0x66, 0x75, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x75, 0x53, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x79, 0x61, 0x6b, 0x75, 0x6d, 0x61, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x79, 0x61,
	0x6b, 0x75, 0x6d, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69,
	0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x44,
	0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x5f, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6c, 0x69, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x62, 0x65, 0x69, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x62, 0x61, 0x62, 0x65, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x78, 0x75, 0x61, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x78, 0x75, 0x61, 0x6e, 0x53, 0x68, 0x61,
	0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x05, 0x48, 0x75, 0x50, 0x61, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x71, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69, 0x1a, 0x3d, 0x0a, 0x03,
	0x46, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x22, 0xfa, 0x01, 0x0a, 0x15,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x71, 0x69, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x75, 0x6c, 0x75, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x61, 0x6e, 0x5f, 0x7a, 0x68, 0x75, 0x61, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x61, 0x6e, 0x5a, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x02, 0x68, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x75,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x02, 0x68, 0x75, 0x22, 0x6e, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x64, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x6a, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xe1,
	0x09, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x71,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x12, 0x46, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x61, 0x66, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x71, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x41, 0x46, 0x4b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x66, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x7c, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79,
	0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6a,
	0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x1a, 0xc5, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0xbf, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x31, 0x12,
	0x20, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x32, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x32, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x1a, 0x66, 0x0a, 0x07, 0x41, 0x46,
	0x4b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x64, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x71, 0x69, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x22, 0x7d, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x82, 0x0c, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x69,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x6e, 0x64, 0x69, 0x61,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x6a, 0x69, 0x66, 0x65, 0x69, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x4a, 0x69, 0x66, 0x65, 0x69, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x69, 0x61, 0x6e, 0x62, 0x69, 0x61, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x61, 0x6e, 0x62, 0x69, 0x61, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x69, 0x62, 0x61, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x69,
	0x71, 0x69, 0x62, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x62, 0x61, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x62, 0x61, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x61, 0x66, 0x75, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x31, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x32, 0x12, 0x22, 0x0a, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x66, 0x75, 0x5f, 0x33, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x66, 0x75, 0x33,
	0x12, 0x2b, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76,
	0x65, 0x4c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x31, 0x0a,
	0x14, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x71, 0x69, 0x65, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x6d, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x61, 0x76,
	0x65, 0x51, 0x69, 0x65, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f,
	0x72, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x42, 0x69,
	0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x2d, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x67,
	0x61, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6e, 0x67, 0x42, 0x69, 0x61,
	0x6f, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f,
	0x72, 0x61, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6d, 0x69, 0x6e, 0x67, 0x44,
	0x6f, 0x72, 0x61, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x5f, 0x64, 0x6f,
	0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x65, 0x4c, 0x69,
	0x44, 0x6f, 0x72, 0x61, 0x12, 0x29, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6e,
	0x67, 0x5f, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x68, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x44, 0x6f, 0x72, 0x61, 0x12,
	0x2b, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x66, 0x65, 0x6e, 0x67, 0x6c, 0x69,
	0x61, 0x6e, 0x64, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x76, 0x65,
	0x53, 0x69, 0x66, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x61, 0x6e, 0x64, 0x61, 0x12, 0x29, 0x0a, 0x10,
	0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x61, 0x6e, 0x6c, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x67, 0x61,
	0x6e, 0x67, 0x73, 0x61, 0x6e, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f,
	0x73, 0x69, 0x6a, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x53, 0x69, 0x6a, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x68, 0x69,
	0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6a, 0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e,
	0x67, 0x6a, 0x69, 0x75, 0x70, 0x61, 0x69, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68,
	0x61, 0x76, 0x65, 0x4a, 0x69, 0x75, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x69, 0x75, 0x70, 0x61,
	0x69, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x61, 0x6e, 0x6a, 0x69, 0x61,
	0x68, 0x65, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65,
	0x53, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x68, 0x65, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61,
	0x76, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x68, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x12, 0x2f, 0x0a,
	0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x76, 0x65,
	0x48, 0x65, 0x6c, 0x65, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x29,
	0x0a, 0x10, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x6c, 0x65, 0x7a, 0x68, 0x6f, 0x6e, 0x67,
	0x6a, 0x75, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x48, 0x65,
	0x6c, 0x65, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x12, 0x35, 0x0a, 0x16, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x68, 0x61, 0x76, 0x65, 0x54,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67,
	0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69,
	0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a, 0x75, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68,
	0x61, 0x76, 0x65, 0x54, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x6a,
	0x75, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x79, 0x69, 0x66, 0x61, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x76, 0x65, 0x59, 0x69, 0x66, 0x61, 0x12, 0x25,
	0x0a, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x72, 0x75, 0x78, 0x69, 0x72, 0x75,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x76, 0x65, 0x4e, 0x61, 0x6e, 0x72,
	0x75, 0x78, 0x69, 0x72, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61,
	0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x6a, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x64, 0x69, 0x61,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f, 0x32,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d,
	0x61, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61, 0x5f,
	0x33, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x6d, 0x61, 0x33, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x6d, 0x61,
	0x5f, 0x34, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x6d, 0x61, 0x34, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x65, 0x74,
	0x69, 0x73, 0x68, 0x69, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x69, 0x61, 0x6e,
	0x6a, 0x69, 0x65, 0x74, 0x69, 0x73, 0x68, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x69, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x7a, 0x69, 0x6d, 0x6f,
	0x73, 0x75, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x76, 0x65, 0x5a,
	0x69, 0x6d, 0x6f, 0x73, 0x75, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x79, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x6e, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x59, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75,
	0x79, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67,
	0x75, 0x79, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x69, 0x6a, 0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x69, 0x6a,
	0x69, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x12, 0x32,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x52, 0x75, 0x6c, 0x65, 0x1a, 0x58, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf5,
	0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x69, 0x64, 0x75, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x64, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68,
	0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x65, 0x79, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x68, 0x61, 0x76, 0x65, 0x79, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69, 0x6d, 0x61,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x66, 0x75, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x6f, 0x72,
	0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62,
	0x69, 0x61, 0x6f, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x79, 0x69, 0x6d, 0x61, 0x6e, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x5a, 0x69, 0x6d, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x75,
	0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x75, 0x5a,
	0x69, 0x6d, 0x6f, 0x22, 0x73, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54,
	0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x74, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xea, 0x04, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x7a, 0x69, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x69, 0x6e, 0x6a, 0x69, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x71, 0x69, 0x6e, 0x6a, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x71, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x71, 0x69,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x6f, 0x72, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x5f, 0x64, 0x6f, 0x72,
	0x61, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x44, 0x6f, 0x72, 0x61,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x79, 0x69, 0x6d, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66,
	0x61, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x66, 0x75, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d,
	0x6f, 0x5f, 0x71, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x51, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x7a, 0x69, 0x6d, 0x6f, 0x5f, 0x78, 0x69, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5a, 0x69, 0x6d, 0x6f, 0x58, 0x69, 0x61,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x64,
	0x69, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61, 0x64, 0x69, 0x61,
	0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6a, 0x75, 0x65, 0x5f, 0x7a, 0x68, 0x61, 0x6e,
	0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4a, 0x75, 0x65, 0x5a, 0x68,
	0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x78, 0x75, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x31, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48,
	0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x68, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x75, 0x6a, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x6c, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x6d, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x69, 0x75,
	0x6a, 0x75, 0x6d, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22,
	0xa0, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x71, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x11, 0x0a, 0x04,
	0x69, 0x73, 0x5f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x69, 0x73, 0x57, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x7a, 0x68, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x5a, 0x68, 0x65, 0x6e, 0x54, 0x69, 0x6e,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x78, 0x75, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x75, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x61, 0x69, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x44, 0x6f, 0x72, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x75, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x78, 0x75, 0x6e, 0x22, 0x71, 0x0a, 0x0f, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x61, 0x42, 0x65, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x12, 0x18, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x7a, 0x69, 0x5f, 0x6d, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x5a, 0x69, 0x4d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x43, 0x68, 0x6f, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x65, 0x69, 0x22, 0x70, 0x0a, 0x10,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x69, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x72, 0x5f, 0x64, 0x6f, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x44, 0x6f, 0x72, 0x61, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x69, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x65, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xea,
	0x03, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x6a, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6a, 0x75, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x69, 0x71, 0x69, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x71, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x6c, 0x69, 0x71, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x67, 0x61, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x67, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x0c,
	0x70, 0x65, 0x69, 0x70, 0x61, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65,
	0x69, 0x50, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x65, 0x69, 0x70, 0x61, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x62, 0x61, 0x62, 0x61, 0x69, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61, 0x42, 0x65, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x62, 0x61, 0x62, 0x61, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x68,
	0x75, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x75, 0x6c, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x68, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x0a, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x75, 0x6a, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x69, 0x75, 0x6a, 0x75, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6e, 0x6f, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x6e, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x14, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x13, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xf8, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x4e, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x1a, 0x48, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x90, 0x02, 0x0a, 0x18,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x71, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x1a, 0x51, 0x0a, 0x14, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0xf1,
	0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x22, 0x13, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6f, 0x6d,
	0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x71, 0x0a,
	0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x71,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x5d, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x6b, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x71, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x73, 0x0a, 0x14,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x49,
	0x64, 0x22, 0x6f, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x40, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x22, 0x7a, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a,
	0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x2d, 0x0a,
	0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x1c,
	0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6c,
	0x71, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x34, 0x0a, 0x10,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c,
	0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x37, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x76, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x61, 0x73, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x68, 0x61, 0x73, 0x47, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x15,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a,
	0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x1e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22,
	0x51, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x20, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x71,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x40, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x22, 0x17, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x69, 0x66, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x10, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x14, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x7a,
	0x68, 0x70, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x7a, 0x68, 0x70,
	0x46, 0x72, 0x65, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x33, 0x0a, 0x16, 0x7a, 0x68, 0x70, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x7a, 0x68, 0x70, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x64, 0x64, 0x79, 0x5f, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x75, 0x64, 0x64,
	0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x2e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xab, 0x02, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x71,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x1a,
	0x4c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0xa9, 0x01,
	0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x1c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37,
	0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x46, 0x4b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x2a, 0x3d, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x55, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x43, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x03, 0x32,
	0xb9, 0x16, 0x0a, 0x1b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12,
	0x4b, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x5a, 0x0a, 0x18,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x41, 0x75, 0x74, 0x68, 0x12, 0x5d, 0x0a, 0x19, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x1f, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0d,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6c,
	0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x11, 0x65, 0x78, 0x69, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x17, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x45, 0x69, 0x64, 0x12, 0x19, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x45, 0x69, 0x64, 0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x45,
	0x69, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x23, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x13,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x63,
	0x6b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x10, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x1a, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x73, 0x0a, 0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x17, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1e, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a,
	0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x4a,
	0x0a, 0x12, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a,
	0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x24, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x4c, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x43, 0x0a, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x1a, 0x20, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x69, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x6c, 0x71, 0x2e,
	0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x29, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x34, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x14, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x61, 0x75, 0x73, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x42, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x16, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x0d, 0x2e,
	0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x42, 0x0a, 0x14, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x1b, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x4a, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x19, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x15, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6c, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x2e, 0x6c,
	0x71, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e, 0x6c, 0x71,
	0x2e, 0x52, 0x65, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x64,
	0x68, 0x73, 0x2f, 0x64, 0x68, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dhs_proto_rawDescOnce sync.Once
	file_dhs_proto_rawDescData = file_dhs_proto_rawDesc
)

func file_dhs_proto_rawDescGZIP() []byte {
	file_dhs_proto_rawDescOnce.Do(func() {
		file_dhs_proto_rawDescData = protoimpl.X.CompressGZIP(file_dhs_proto_rawDescData)
	})
	return file_dhs_proto_rawDescData
}

var file_dhs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dhs_proto_msgTypes = make([]protoimpl.MessageInfo, 266)
var file_dhs_proto_goTypes = []interface{}{
	(GamePlayerState)(0),                                        // 0: lq.GamePlayerState
	(*CustomizedContest)(nil),                                   // 1: lq.CustomizedContest
	(*ContestGameInfo)(nil),                                     // 2: lq.ContestGameInfo
	(*ContestPlayerInfo)(nil),                                   // 3: lq.ContestPlayerInfo
	(*ContestMatchingPlayer)(nil),                               // 4: lq.ContestMatchingPlayer
	(*ReqContestManageLogin)(nil),                               // 5: lq.ReqContestManageLogin
	(*ResContestManageLogin)(nil),                               // 6: lq.ResContestManageLogin
	(*ReqContestManageOauth2Auth)(nil),                          // 7: lq.ReqContestManageOauth2Auth
	(*ResContestManageOauth2Auth)(nil),                          // 8: lq.ResContestManageOauth2Auth
	(*ReqContestManageOauth2Login)(nil),                         // 9: lq.ReqContestManageOauth2Login
	(*ResContestManageOauth2Login)(nil),                         // 10: lq.ResContestManageOauth2Login
	(*ResFetchRelatedContestList)(nil),                          // 11: lq.ResFetchRelatedContestList
	(*ReqCreateCustomizedContest)(nil),                          // 12: lq.ReqCreateCustomizedContest
	(*ResCreateCustomizedContest)(nil),                          // 13: lq.ResCreateCustomizedContest
	(*ReqDeleteCustomizedContest)(nil),                          // 14: lq.ReqDeleteCustomizedContest
	(*ReqProlongContest)(nil),                                   // 15: lq.ReqProlongContest
	(*ResProlongContest)(nil),                                   // 16: lq.ResProlongContest
	(*ReqManageContest)(nil),                                    // 17: lq.ReqManageContest
	(*ResManageContest)(nil),                                    // 18: lq.ResManageContest
	(*ResFetchContestGameRule)(nil),                             // 19: lq.ResFetchContestGameRule
	(*ReqUpdateContestGameRule)(nil),                            // 20: lq.ReqUpdateContestGameRule
	(*ReqSearchAccountByNickname)(nil),                          // 21: lq.ReqSearchAccountByNickname
	(*ResSearchAccountByNickname)(nil),                          // 22: lq.ResSearchAccountByNickname
	(*ReqSearchAccountByEid)(nil),                               // 23: lq.ReqSearchAccountByEid
	(*ResSearchAccountByEid)(nil),                               // 24: lq.ResSearchAccountByEid
	(*ResFetchCustomizedContestPlayer)(nil),                     // 25: lq.ResFetchCustomizedContestPlayer
	(*ReqUpdateCustomizedContestPlayer)(nil),                    // 26: lq.ReqUpdateCustomizedContestPlayer
	(*ResUpdateCustomizedContestPlayer)(nil),                    // 27: lq.ResUpdateCustomizedContestPlayer
	(*ResStartManageGame)(nil),                                  // 28: lq.ResStartManageGame
	(*ReqLockGamePlayer)(nil),                                   // 29: lq.ReqLockGamePlayer
	(*ReqUnlockGamePlayer)(nil),                                 // 30: lq.ReqUnlockGamePlayer
	(*ReqCreateContestGame)(nil),                                // 31: lq.ReqCreateContestGame
	(*ResCreateContestGame)(nil),                                // 32: lq.ResCreateContestGame
	(*ReqFetchCustomizedContestGameRecordList)(nil),             // 33: lq.ReqFetchCustomizedContestGameRecordList
	(*ResFetchCustomizedContestGameRecordList)(nil),             // 34: lq.ResFetchCustomizedContestGameRecordList
	(*ReqRemoveContestGameRecord)(nil),                          // 35: lq.ReqRemoveContestGameRecord
	(*ReqFetchContestNotice)(nil),                               // 36: lq.ReqFetchContestNotice
	(*ResFetchContestNotice)(nil),                               // 37: lq.ResFetchContestNotice
	(*ReqUpdateCustomizedContestNotice)(nil),                    // 38: lq.ReqUpdateCustomizedContestNotice
	(*ResFetchCustomizedContestManager)(nil),                    // 39: lq.ResFetchCustomizedContestManager
	(*ReqUpdateCustomizedContestManager)(nil),                   // 40: lq.ReqUpdateCustomizedContestManager
	(*ResCustomizedContestChatInfo)(nil),                        // 41: lq.ResCustomizedContestChatInfo
	(*ReqUpdateCustomizedContestChatSetting)(nil),               // 42: lq.ReqUpdateCustomizedContestChatSetting
	(*ResUpdateCustomizedContestChatSetting)(nil),               // 43: lq.ResUpdateCustomizedContestChatSetting
	(*ReqUpdateGameTag)(nil),                                    // 44: lq.ReqUpdateGameTag
	(*ReqTerminateContestGame)(nil),                             // 45: lq.ReqTerminateContestGame
	(*ReqPauseContestGame)(nil),                                 // 46: lq.ReqPauseContestGame
	(*ReqResumeContestGame)(nil),                                // 47: lq.ReqResumeContestGame
	(*ResFetchCurrentRankList)(nil),                             // 48: lq.ResFetchCurrentRankList
	(*ResFetchContestLastModify)(nil),                           // 49: lq.ResFetchContestLastModify
	(*ResFetchContestObserver)(nil),                             // 50: lq.ResFetchContestObserver
	(*ReqAddContestObserver)(nil),                               // 51: lq.ReqAddContestObserver
	(*ResAddContestObserver)(nil),                               // 52: lq.ResAddContestObserver
	(*ReqRemoveContestObserver)(nil),                            // 53: lq.ReqRemoveContestObserver
	(*ResFetchContestChatHistory)(nil),                          // 54: lq.ResFetchContestChatHistory
	(*NotifyContestMatchingPlayer)(nil),                         // 55: lq.NotifyContestMatchingPlayer
	(*NotifyContestMatchingPlayerLock)(nil),                     // 56: lq.NotifyContestMatchingPlayerLock
	(*NotifyContestGameStart)(nil),                              // 57: lq.NotifyContestGameStart
	(*NotifyContestGameEnd)(nil),                                // 58: lq.NotifyContestGameEnd
	(*NotifyContestNoticeUpdate)(nil),                           // 59: lq.NotifyContestNoticeUpdate
	(*NotifyContestManagerKick)(nil),                            // 60: lq.NotifyContestManagerKick
	(*Error)(nil),                                               // 61: lq.Error
	(*Wrapper)(nil),                                             // 62: lq.Wrapper
	(*NetworkEndpoint)(nil),                                     // 63: lq.NetworkEndpoint
	(*ReqCommon)(nil),                                           // 64: lq.ReqCommon
	(*ResCommon)(nil),                                           // 65: lq.ResCommon
	(*ResAccountUpdate)(nil),                                    // 66: lq.ResAccountUpdate
	(*AntiAddiction)(nil),                                       // 67: lq.AntiAddiction
	(*AccountMahjongStatistic)(nil),                             // 68: lq.AccountMahjongStatistic
	(*AccountStatisticData)(nil),                                // 69: lq.AccountStatisticData
	(*AccountLevel)(nil),                                        // 70: lq.AccountLevel
	(*ViewSlot)(nil),                                            // 71: lq.ViewSlot
	(*Account)(nil),                                             // 72: lq.Account
	(*AccountOwnerData)(nil),                                    // 73: lq.AccountOwnerData
	(*AccountUpdate)(nil),                                       // 74: lq.AccountUpdate
	(*GameMetaData)(nil),                                        // 75: lq.GameMetaData
	(*AccountPlayingGame)(nil),                                  // 76: lq.AccountPlayingGame
	(*AccountCacheView)(nil),                                    // 77: lq.AccountCacheView
	(*PlayerBaseView)(nil),                                      // 78: lq.PlayerBaseView
	(*PlayerGameView)(nil),                                      // 79: lq.PlayerGameView
	(*GameSetting)(nil),                                         // 80: lq.GameSetting
	(*GameMode)(nil),                                            // 81: lq.GameMode
	(*GameTestingEnvironmentSet)(nil),                           // 82: lq.GameTestingEnvironmentSet
	(*GameDetailRule)(nil),                                      // 83: lq.GameDetailRule
	(*Room)(nil),                                                // 84: lq.Room
	(*GameEndResult)(nil),                                       // 85: lq.GameEndResult
	(*GameConnectInfo)(nil),                                     // 86: lq.GameConnectInfo
	(*ItemGainRecord)(nil),                                      // 87: lq.ItemGainRecord
	(*ItemGainRecords)(nil),                                     // 88: lq.ItemGainRecords
	(*Item)(nil),                                                // 89: lq.Item
	(*Bag)(nil),                                                 // 90: lq.Bag
	(*BagUpdate)(nil),                                           // 91: lq.BagUpdate
	(*RewardSlot)(nil),                                          // 92: lq.RewardSlot
	(*OpenResult)(nil),                                          // 93: lq.OpenResult
	(*RewardPlusResult)(nil),                                    // 94: lq.RewardPlusResult
	(*ExecuteReward)(nil),                                       // 95: lq.ExecuteReward
	(*Mail)(nil),                                                // 96: lq.Mail
	(*AchievementProgress)(nil),                                 // 97: lq.AchievementProgress
	(*AccountStatisticByGameMode)(nil),                          // 98: lq.AccountStatisticByGameMode
	(*AccountStatisticByFan)(nil),                               // 99: lq.AccountStatisticByFan
	(*AccountFanAchieved)(nil),                                  // 100: lq.AccountFanAchieved
	(*AccountDetailStatistic)(nil),                              // 101: lq.AccountDetailStatistic
	(*AccountDetailStatisticByCategory)(nil),                    // 102: lq.AccountDetailStatisticByCategory
	(*AccountDetailStatisticV2)(nil),                            // 103: lq.AccountDetailStatisticV2
	(*AccountShiLian)(nil),                                      // 104: lq.AccountShiLian
	(*ClientDeviceInfo)(nil),                                    // 105: lq.ClientDeviceInfo
	(*ClientVersionInfo)(nil),                                   // 106: lq.ClientVersionInfo
	(*Announcement)(nil),                                        // 107: lq.Announcement
	(*TaskProgress)(nil),                                        // 108: lq.TaskProgress
	(*GameConfig)(nil),                                          // 109: lq.GameConfig
	(*AccountActiveState)(nil),                                  // 110: lq.AccountActiveState
	(*Friend)(nil),                                              // 111: lq.Friend
	(*GameLiveUnit)(nil),                                        // 112: lq.GameLiveUnit
	(*GameLiveSegment)(nil),                                     // 113: lq.GameLiveSegment
	(*GameLiveSegmentUri)(nil),                                  // 114: lq.GameLiveSegmentUri
	(*GameLiveHead)(nil),                                        // 115: lq.GameLiveHead
	(*GameNewRoundState)(nil),                                   // 116: lq.GameNewRoundState
	(*GameEndAction)(nil),                                       // 117: lq.GameEndAction
	(*GameNoopAction)(nil),                                      // 118: lq.GameNoopAction
	(*CommentItem)(nil),                                         // 119: lq.CommentItem
	(*RollingNotice)(nil),                                       // 120: lq.RollingNotice
	(*BillingGoods)(nil),                                        // 121: lq.BillingGoods
	(*BillShortcut)(nil),                                        // 122: lq.BillShortcut
	(*BillingProduct)(nil),                                      // 123: lq.BillingProduct
	(*Character)(nil),                                           // 124: lq.Character
	(*BuyRecord)(nil),                                           // 125: lq.BuyRecord
	(*ZHPShop)(nil),                                             // 126: lq.ZHPShop
	(*MonthTicketInfo)(nil),                                     // 127: lq.MonthTicketInfo
	(*ShopInfo)(nil),                                            // 128: lq.ShopInfo
	(*ChangeNicknameRecord)(nil),                                // 129: lq.ChangeNicknameRecord
	(*ServerSettings)(nil),                                      // 130: lq.ServerSettings
	(*PaymentSettingV2)(nil),                                    // 131: lq.PaymentSettingV2
	(*PaymentSetting)(nil),                                      // 132: lq.PaymentSetting
	(*AccountSetting)(nil),                                      // 133: lq.AccountSetting
	(*ChestData)(nil),                                           // 134: lq.ChestData
	(*ChestDataV2)(nil),                                         // 135: lq.ChestDataV2
	(*FaithData)(nil),                                           // 136: lq.FaithData
	(*CustomizedContestBase)(nil),                               // 137: lq.CustomizedContestBase
	(*CustomizedContestExtend)(nil),                             // 138: lq.CustomizedContestExtend
	(*CustomizedContestAbstract)(nil),                           // 139: lq.CustomizedContestAbstract
	(*CustomizedContestDetail)(nil),                             // 140: lq.CustomizedContestDetail
	(*CustomizedContestPlayerReport)(nil),                       // 141: lq.CustomizedContestPlayerReport
	(*RecordGame)(nil),                                          // 142: lq.RecordGame
	(*CustomizedContestGameStart)(nil),                          // 143: lq.CustomizedContestGameStart
	(*CustomizedContestGameEnd)(nil),                            // 144: lq.CustomizedContestGameEnd
	(*Activity)(nil),                                            // 145: lq.Activity
	(*ExchangeRecord)(nil),                                      // 146: lq.ExchangeRecord
	(*ActivityAccumulatedPointData)(nil),                        // 147: lq.ActivityAccumulatedPointData
	(*ActivityRankPointData)(nil),                               // 148: lq.ActivityRankPointData
	(*GameRoundHuData)(nil),                                     // 149: lq.GameRoundHuData
	(*GameRoundPlayerResult)(nil),                               // 150: lq.GameRoundPlayerResult
	(*GameRoundPlayer)(nil),                                     // 151: lq.GameRoundPlayer
	(*GameRoundSnapshot)(nil),                                   // 152: lq.GameRoundSnapshot
	(*GameFinalSnapshot)(nil),                                   // 153: lq.GameFinalSnapshot
	(*RecordCollectedData)(nil),                                 // 154: lq.RecordCollectedData
	(*ContestDetailRule)(nil),                                   // 155: lq.ContestDetailRule
	(*ContestDetailRuleV2)(nil),                                 // 156: lq.ContestDetailRuleV2
	(*GameRuleSetting)(nil),                                     // 157: lq.GameRuleSetting
	(*RecordTingPaiInfo)(nil),                                   // 158: lq.RecordTingPaiInfo
	(*RecordNoTilePlayerInfo)(nil),                              // 159: lq.RecordNoTilePlayerInfo
	(*RecordHuleInfo)(nil),                                      // 160: lq.RecordHuleInfo
	(*RecordHulesInfo)(nil),                                     // 161: lq.RecordHulesInfo
	(*RecordLiujuInfo)(nil),                                     // 162: lq.RecordLiujuInfo
	(*RecordNoTileInfo)(nil),                                    // 163: lq.RecordNoTileInfo
	(*RecordLiqiInfo)(nil),                                      // 164: lq.RecordLiqiInfo
	(*RecordGangInfo)(nil),                                      // 165: lq.RecordGangInfo
	(*RecordBaBeiInfo)(nil),                                     // 166: lq.RecordBaBeiInfo
	(*RecordPeiPaiInfo)(nil),                                    // 167: lq.RecordPeiPaiInfo
	(*RecordRoundInfo)(nil),                                     // 168: lq.RecordRoundInfo
	(*RecordAnalysisedData)(nil),                                // 169: lq.RecordAnalysisedData
	(*NotifyRoomGameStart)(nil),                                 // 170: lq.NotifyRoomGameStart
	(*NotifyMatchGameStart)(nil),                                // 171: lq.NotifyMatchGameStart
	(*NotifyRoomPlayerReady)(nil),                               // 172: lq.NotifyRoomPlayerReady
	(*NotifyRoomPlayerDressing)(nil),                            // 173: lq.NotifyRoomPlayerDressing
	(*NotifyRoomPlayerUpdate)(nil),                              // 174: lq.NotifyRoomPlayerUpdate
	(*NotifyRoomKickOut)(nil),                                   // 175: lq.NotifyRoomKickOut
	(*NotifyMatchTimeout)(nil),                                  // 176: lq.NotifyMatchTimeout
	(*NotifyFriendStateChange)(nil),                             // 177: lq.NotifyFriendStateChange
	(*NotifyFriendViewChange)(nil),                              // 178: lq.NotifyFriendViewChange
	(*NotifyFriendChange)(nil),                                  // 179: lq.NotifyFriendChange
	(*NotifyNewFriendApply)(nil),                                // 180: lq.NotifyNewFriendApply
	(*NotifyClientMessage)(nil),                                 // 181: lq.NotifyClientMessage
	(*NotifyAccountUpdate)(nil),                                 // 182: lq.NotifyAccountUpdate
	(*NotifyAnotherLogin)(nil),                                  // 183: lq.NotifyAnotherLogin
	(*NotifyAccountLogout)(nil),                                 // 184: lq.NotifyAccountLogout
	(*NotifyAnnouncementUpdate)(nil),                            // 185: lq.NotifyAnnouncementUpdate
	(*NotifyNewMail)(nil),                                       // 186: lq.NotifyNewMail
	(*NotifyDeleteMail)(nil),                                    // 187: lq.NotifyDeleteMail
	(*NotifyReviveCoinUpdate)(nil),                              // 188: lq.NotifyReviveCoinUpdate
	(*NotifyDailyTaskUpdate)(nil),                               // 189: lq.NotifyDailyTaskUpdate
	(*NotifyActivityTaskUpdate)(nil),                            // 190: lq.NotifyActivityTaskUpdate
	(*NotifyActivityPeriodTaskUpdate)(nil),                      // 191: lq.NotifyActivityPeriodTaskUpdate
	(*NotifyAccountRandomTaskUpdate)(nil),                       // 192: lq.NotifyAccountRandomTaskUpdate
	(*NotifyAccountChallengeTaskUpdate)(nil),                    // 193: lq.NotifyAccountChallengeTaskUpdate
	(*NotifyNewComment)(nil),                                    // 194: lq.NotifyNewComment
	(*NotifyRollingNotice)(nil),                                 // 195: lq.NotifyRollingNotice
	(*NotifyGiftSendRefresh)(nil),                               // 196: lq.NotifyGiftSendRefresh
	(*NotifyShopUpdate)(nil),                                    // 197: lq.NotifyShopUpdate
	(*NotifyVipLevelChange)(nil),                                // 198: lq.NotifyVipLevelChange
	(*NotifyServerSetting)(nil),                                 // 199: lq.NotifyServerSetting
	(*NotifyPayResult)(nil),                                     // 200: lq.NotifyPayResult
	(*NotifyCustomContestAccountMsg)(nil),                       // 201: lq.NotifyCustomContestAccountMsg
	(*NotifyCustomContestSystemMsg)(nil),                        // 202: lq.NotifyCustomContestSystemMsg
	(*NotifyCustomContestState)(nil),                            // 203: lq.NotifyCustomContestState
	(*NotifyActivityChange)(nil),                                // 204: lq.NotifyActivityChange
	(*NotifyAFKResult)(nil),                                     // 205: lq.NotifyAFKResult
	(*ContestGameInfo_Player)(nil),                              // 206: lq.ContestGameInfo.Player
	(*ContestMatchingPlayer_Controller)(nil),                    // 207: lq.ContestMatchingPlayer.Controller
	(*ResSearchAccountByNickname_Item)(nil),                     // 208: lq.ResSearchAccountByNickname.Item
	(*ResSearchAccountByEid_Item)(nil),                          // 209: lq.ResSearchAccountByEid.Item
	(*ReqCreateContestGame_Slot)(nil),                           // 210: lq.ReqCreateContestGame.Slot
	(*ResFetchCustomizedContestGameRecordList_Item)(nil),        // 211: lq.ResFetchCustomizedContestGameRecordList.Item
	(*ResCustomizedContestChatInfo_Item)(nil),                   // 212: lq.ResCustomizedContestChatInfo.Item
	(*ResFetchCurrentRankList_AccountRankData)(nil),             // 213: lq.ResFetchCurrentRankList.AccountRankData
	(*ResFetchContestLastModify_ContestLastModify)(nil),         // 214: lq.ResFetchContestLastModify.ContestLastModify
	(*ResFetchContestObserver_Observer)(nil),                    // 215: lq.ResFetchContestObserver.Observer
	(*ReqAddContestObserver_Observer)(nil),                      // 216: lq.ReqAddContestObserver.Observer
	(*ResAddContestObserver_Observer)(nil),                      // 217: lq.ResAddContestObserver.Observer
	(*AccountMahjongStatistic_RoundSummary)(nil),                // 218: lq.AccountMahjongStatistic.RoundSummary
	(*AccountMahjongStatistic_HuSummary)(nil),                   // 219: lq.AccountMahjongStatistic.HuSummary
	(*AccountMahjongStatistic_HighestHuRecord)(nil),             // 220: lq.AccountMahjongStatistic.HighestHuRecord
	(*AccountMahjongStatistic_Liqi20Summary)(nil),               // 221: lq.AccountMahjongStatistic.Liqi20Summary
	(*AccountMahjongStatistic_LiQi10Summary)(nil),               // 222: lq.AccountMahjongStatistic.LiQi10Summary
	(*AccountMahjongStatistic_GameResult)(nil),                  // 223: lq.AccountMahjongStatistic.GameResult
	(*Account_PlatformDiamond)(nil),                             // 224: lq.Account.PlatformDiamond
	(*Account_PlatformSkinTicket)(nil),                          // 225: lq.Account.PlatformSkinTicket
	(*Account_ChallengeLevel)(nil),                              // 226: lq.Account.ChallengeLevel
	(*Account_AchievementCount)(nil),                            // 227: lq.Account.AchievementCount
	(*AccountUpdate_NumericalUpdate)(nil),                       // 228: lq.AccountUpdate.NumericalUpdate
	(*AccountUpdate_CharacterUpdate)(nil),                       // 229: lq.AccountUpdate.CharacterUpdate
	(*AccountUpdate_AchievementUpdate)(nil),                     // 230: lq.AccountUpdate.AchievementUpdate
	(*AccountUpdate_DailyTaskUpdate)(nil),                       // 231: lq.AccountUpdate.DailyTaskUpdate
	(*AccountUpdate_TitleUpdate)(nil),                           // 232: lq.AccountUpdate.TitleUpdate
	(*AccountUpdate_TaskUpdate)(nil),                            // 233: lq.AccountUpdate.TaskUpdate
	(*AccountUpdate_AccountChallengeUpdate)(nil),                // 234: lq.AccountUpdate.AccountChallengeUpdate
	(*AccountUpdate_AccountABMatchUpdate)(nil),                  // 235: lq.AccountUpdate.AccountABMatchUpdate
	(*AccountUpdate_AccountABMatchUpdate_MatchPoint)(nil),       // 236: lq.AccountUpdate.AccountABMatchUpdate.MatchPoint
	(*GameEndResult_PlayerItem)(nil),                            // 237: lq.GameEndResult.PlayerItem
	(*RewardPlusResult_Exchange)(nil),                           // 238: lq.RewardPlusResult.Exchange
	(*Mail_I18NContext)(nil),                                    // 239: lq.Mail.I18nContext
	(*AccountStatisticByGameMode_RoundEndData)(nil),             // 240: lq.AccountStatisticByGameMode.RoundEndData
	(*AccountStatisticByGameMode_RankScore)(nil),                // 241: lq.AccountStatisticByGameMode.RankScore
	(*AccountDetailStatisticV2_RankStatistic)(nil),              // 242: lq.AccountDetailStatisticV2.RankStatistic
	(*AccountDetailStatisticV2_CustomizedContestStatistic)(nil), // 243: lq.AccountDetailStatisticV2.CustomizedContestStatistic
	(*AccountDetailStatisticV2_ChallengeStatistic)(nil),         // 244: lq.AccountDetailStatisticV2.ChallengeStatistic
	(*AccountDetailStatisticV2_RankStatistic_RankData)(nil),     // 245: lq.AccountDetailStatisticV2.RankStatistic.RankData
	(*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData)(nil), // 246: lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData
	(*AccountDetailStatisticV2_ChallengeStatistic_SeasonData)(nil),        // 247: lq.AccountDetailStatisticV2.ChallengeStatistic.SeasonData
	(*ZHPShop_RefreshCount)(nil),                                          // 248: lq.ZHPShop.RefreshCount
	(*PaymentSettingV2_PaymentMaintain)(nil),                              // 249: lq.PaymentSettingV2.PaymentMaintain
	(*PaymentSettingV2_PaymentSettingUnit)(nil),                           // 250: lq.PaymentSettingV2.PaymentSettingUnit
	(*PaymentSetting_WechatData)(nil),                                     // 251: lq.PaymentSetting.WechatData
	(*PaymentSetting_AlipayData)(nil),                                     // 252: lq.PaymentSetting.AlipayData
	(*RecordGame_AccountInfo)(nil),                                        // 253: lq.RecordGame.AccountInfo
	(*CustomizedContestGameStart_Item)(nil),                               // 254: lq.CustomizedContestGameStart.Item
	(*CustomizedContestGameEnd_Item)(nil),                                 // 255: lq.CustomizedContestGameEnd.Item
	(*GameRoundHuData_HuPai)(nil),                                         // 256: lq.GameRoundHuData.HuPai
	(*GameRoundHuData_Fan)(nil),                                           // 257: lq.GameRoundHuData.Fan
	(*GameFinalSnapshot_CalculateParam)(nil),                              // 258: lq.GameFinalSnapshot.CalculateParam
	(*GameFinalSnapshot_GameSeat)(nil),                                    // 259: lq.GameFinalSnapshot.GameSeat
	(*GameFinalSnapshot_FinalPlayer)(nil),                                 // 260: lq.GameFinalSnapshot.FinalPlayer
	(*GameFinalSnapshot_AFKInfo)(nil),                                     // 261: lq.GameFinalSnapshot.AFKInfo
	(*ContestDetailRuleV2_ExtraRule)(nil),                                 // 262: lq.ContestDetailRuleV2.ExtraRule
	(*RecordHuleInfo_RecordFanInfo)(nil),                                  // 263: lq.RecordHuleInfo.RecordFanInfo
	(*NotifyRoomPlayerReady_AccountReadyState)(nil),                       // 264: lq.NotifyRoomPlayerReady.AccountReadyState
	(*NotifyRoomPlayerDressing_AccountDressingState)(nil),                 // 265: lq.NotifyRoomPlayerDressing.AccountDressingState
	(*NotifyPayResult_ResourceModify)(nil),                                // 266: lq.NotifyPayResult.ResourceModify
}
var file_dhs_proto_depIdxs = []int32{
	206, // 0: lq.ContestGameInfo.players:type_name -> lq.ContestGameInfo.Player
	207, // 1: lq.ContestMatchingPlayer.controller:type_name -> lq.ContestMatchingPlayer.Controller
	61,  // 2: lq.ResContestManageLogin.error:type_name -> lq.Error
	61,  // 3: lq.ResContestManageOauth2Auth.error:type_name -> lq.Error
	61,  // 4: lq.ResContestManageOauth2Login.error:type_name -> lq.Error
	61,  // 5: lq.ResFetchRelatedContestList.error:type_name -> lq.Error
	1,   // 6: lq.ResFetchRelatedContestList.contests:type_name -> lq.CustomizedContest
	157, // 7: lq.ReqCreateCustomizedContest.game_rule_setting:type_name -> lq.GameRuleSetting
	61,  // 8: lq.ResCreateCustomizedContest.error:type_name -> lq.Error
	1,   // 9: lq.ResCreateCustomizedContest.contest:type_name -> lq.CustomizedContest
	61,  // 10: lq.ResProlongContest.error:type_name -> lq.Error
	61,  // 11: lq.ResManageContest.error:type_name -> lq.Error
	1,   // 12: lq.ResManageContest.contest:type_name -> lq.CustomizedContest
	61,  // 13: lq.ResFetchContestGameRule.error:type_name -> lq.Error
	157, // 14: lq.ResFetchContestGameRule.game_rule_setting:type_name -> lq.GameRuleSetting
	157, // 15: lq.ReqUpdateContestGameRule.game_rule_setting:type_name -> lq.GameRuleSetting
	61,  // 16: lq.ResSearchAccountByNickname.error:type_name -> lq.Error
	208, // 17: lq.ResSearchAccountByNickname.search_result:type_name -> lq.ResSearchAccountByNickname.Item
	61,  // 18: lq.ResSearchAccountByEid.error:type_name -> lq.Error
	209, // 19: lq.ResSearchAccountByEid.search_result:type_name -> lq.ResSearchAccountByEid.Item
	61,  // 20: lq.ResFetchCustomizedContestPlayer.error:type_name -> lq.Error
	3,   // 21: lq.ResFetchCustomizedContestPlayer.players:type_name -> lq.ContestPlayerInfo
	61,  // 22: lq.ResUpdateCustomizedContestPlayer.error:type_name -> lq.Error
	61,  // 23: lq.ResStartManageGame.error:type_name -> lq.Error
	4,   // 24: lq.ResStartManageGame.players:type_name -> lq.ContestMatchingPlayer
	2,   // 25: lq.ResStartManageGame.games:type_name -> lq.ContestGameInfo
	210, // 26: lq.ReqCreateContestGame.slots:type_name -> lq.ReqCreateContestGame.Slot
	61,  // 27: lq.ResCreateContestGame.error:type_name -> lq.Error
	61,  // 28: lq.ResFetchCustomizedContestGameRecordList.error:type_name -> lq.Error
	211, // 29: lq.ResFetchCustomizedContestGameRecordList.record_list:type_name -> lq.ResFetchCustomizedContestGameRecordList.Item
	61,  // 30: lq.ResFetchContestNotice.error:type_name -> lq.Error
	61,  // 31: lq.ResFetchCustomizedContestManager.error:type_name -> lq.Error
	3,   // 32: lq.ResFetchCustomizedContestManager.players:type_name -> lq.ContestPlayerInfo
	61,  // 33: lq.ResCustomizedContestChatInfo.error:type_name -> lq.Error
	212, // 34: lq.ResCustomizedContestChatInfo.chat_limit_roster:type_name -> lq.ResCustomizedContestChatInfo.Item
	61,  // 35: lq.ResUpdateCustomizedContestChatSetting.error:type_name -> lq.Error
	61,  // 36: lq.ResFetchCurrentRankList.error:type_name -> lq.Error
	213, // 37: lq.ResFetchCurrentRankList.rank_list:type_name -> lq.ResFetchCurrentRankList.AccountRankData
	214, // 38: lq.ResFetchContestLastModify.modify:type_name -> lq.ResFetchContestLastModify.ContestLastModify
	61,  // 39: lq.ResFetchContestObserver.error:type_name -> lq.Error
	215, // 40: lq.ResFetchContestObserver.observers:type_name -> lq.ResFetchContestObserver.Observer
	216, // 41: lq.ReqAddContestObserver.observers:type_name -> lq.ReqAddContestObserver.Observer
	61,  // 42: lq.ResAddContestObserver.error:type_name -> lq.Error
	217, // 43: lq.ResAddContestObserver.success:type_name -> lq.ResAddContestObserver.Observer
	61,  // 44: lq.ResFetchContestChatHistory.error:type_name -> lq.Error
	2,   // 45: lq.NotifyContestGameStart.game_info:type_name -> lq.ContestGameInfo
	61,  // 46: lq.ResCommon.error:type_name -> lq.Error
	61,  // 47: lq.ResAccountUpdate.error:type_name -> lq.Error
	74,  // 48: lq.ResAccountUpdate.update:type_name -> lq.AccountUpdate
	218, // 49: lq.AccountMahjongStatistic.recent_round:type_name -> lq.AccountMahjongStatistic.RoundSummary
	219, // 50: lq.AccountMahjongStatistic.recent_hu:type_name -> lq.AccountMahjongStatistic.HuSummary
	220, // 51: lq.AccountMahjongStatistic.highest_hu:type_name -> lq.AccountMahjongStatistic.HighestHuRecord
	221, // 52: lq.AccountMahjongStatistic.recent_20_hu_summary:type_name -> lq.AccountMahjongStatistic.Liqi20Summary
	222, // 53: lq.AccountMahjongStatistic.recent_10_hu_summary:type_name -> lq.AccountMahjongStatistic.LiQi10Summary
	223, // 54: lq.AccountMahjongStatistic.recent_10_game_result:type_name -> lq.AccountMahjongStatistic.GameResult
	68,  // 55: lq.AccountStatisticData.statistic:type_name -> lq.AccountMahjongStatistic
	67,  // 56: lq.Account.anti_addiction:type_name -> lq.AntiAddiction
	224, // 57: lq.Account.platform_diamond:type_name -> lq.Account.PlatformDiamond
	70,  // 58: lq.Account.level:type_name -> lq.AccountLevel
	70,  // 59: lq.Account.level3:type_name -> lq.AccountLevel
	225, // 60: lq.Account.platform_skin_ticket:type_name -> lq.Account.PlatformSkinTicket
	226, // 61: lq.Account.challenge_levels:type_name -> lq.Account.ChallengeLevel
	227, // 62: lq.Account.achievement_count:type_name -> lq.Account.AchievementCount
	228, // 63: lq.AccountUpdate.numerical:type_name -> lq.AccountUpdate.NumericalUpdate
	229, // 64: lq.AccountUpdate.character:type_name -> lq.AccountUpdate.CharacterUpdate
	91,  // 65: lq.AccountUpdate.bag:type_name -> lq.BagUpdate
	230, // 66: lq.AccountUpdate.achievement:type_name -> lq.AccountUpdate.AchievementUpdate
	104, // 67: lq.AccountUpdate.shilian:type_name -> lq.AccountShiLian
	231, // 68: lq.AccountUpdate.daily_task:type_name -> lq.AccountUpdate.DailyTaskUpdate
	232, // 69: lq.AccountUpdate.title:type_name -> lq.AccountUpdate.TitleUpdate
	233, // 70: lq.AccountUpdate.activity_task:type_name -> lq.AccountUpdate.TaskUpdate
	233, // 71: lq.AccountUpdate.activity_flip_task:type_name -> lq.AccountUpdate.TaskUpdate
	233, // 72: lq.AccountUpdate.activity_period_task:type_name -> lq.AccountUpdate.TaskUpdate
	233, // 73: lq.AccountUpdate.activity_random_task:type_name -> lq.AccountUpdate.TaskUpdate
	234, // 74: lq.AccountUpdate.challenge:type_name -> lq.AccountUpdate.AccountChallengeUpdate
	235, // 75: lq.AccountUpdate.ab_match:type_name -> lq.AccountUpdate.AccountABMatchUpdate
	75,  // 76: lq.AccountPlayingGame.meta:type_name -> lq.GameMetaData
	70,  // 77: lq.AccountCacheView.level:type_name -> lq.AccountLevel
	76,  // 78: lq.AccountCacheView.playing_game:type_name -> lq.AccountPlayingGame
	70,  // 79: lq.AccountCacheView.level3:type_name -> lq.AccountLevel
	70,  // 80: lq.PlayerBaseView.level:type_name -> lq.AccountLevel
	70,  // 81: lq.PlayerBaseView.level3:type_name -> lq.AccountLevel
	70,  // 82: lq.PlayerGameView.level:type_name -> lq.AccountLevel
	124, // 83: lq.PlayerGameView.character:type_name -> lq.Character
	70,  // 84: lq.PlayerGameView.level3:type_name -> lq.AccountLevel
	71,  // 85: lq.PlayerGameView.views:type_name -> lq.ViewSlot
	83,  // 86: lq.GameMode.detail_rule:type_name -> lq.GameDetailRule
	82,  // 87: lq.GameMode.testing_environment:type_name -> lq.GameTestingEnvironmentSet
	80,  // 88: lq.GameMode.game_setting:type_name -> lq.GameSetting
	81,  // 89: lq.Room.mode:type_name -> lq.GameMode
	79,  // 90: lq.Room.persons:type_name -> lq.PlayerGameView
	237, // 91: lq.GameEndResult.players:type_name -> lq.GameEndResult.PlayerItem
	87,  // 92: lq.ItemGainRecords.records:type_name -> lq.ItemGainRecord
	89,  // 93: lq.Bag.items:type_name -> lq.Item
	88,  // 94: lq.Bag.daily_gain_record:type_name -> lq.ItemGainRecords
	89,  // 95: lq.BagUpdate.update_items:type_name -> lq.Item
	88,  // 96: lq.BagUpdate.update_daily_gain_record:type_name -> lq.ItemGainRecords
	92,  // 97: lq.OpenResult.reward:type_name -> lq.RewardSlot
	92,  // 98: lq.OpenResult.replace:type_name -> lq.RewardSlot
	238, // 99: lq.RewardPlusResult.exchange:type_name -> lq.RewardPlusResult.Exchange
	92,  // 100: lq.ExecuteReward.reward:type_name -> lq.RewardSlot
	92,  // 101: lq.ExecuteReward.replace:type_name -> lq.RewardSlot
	92,  // 102: lq.Mail.attachments:type_name -> lq.RewardSlot
	239, // 103: lq.Mail.title_i18n:type_name -> lq.Mail.I18nContext
	239, // 104: lq.Mail.content_i18n:type_name -> lq.Mail.I18nContext
	240, // 105: lq.AccountStatisticByGameMode.round_end:type_name -> lq.AccountStatisticByGameMode.RoundEndData
	241, // 106: lq.AccountStatisticByGameMode.rank_score:type_name -> lq.AccountStatisticByGameMode.RankScore
	99,  // 107: lq.AccountFanAchieved.fan:type_name -> lq.AccountStatisticByFan
	98,  // 108: lq.AccountDetailStatistic.game_mode:type_name -> lq.AccountStatisticByGameMode
	99,  // 109: lq.AccountDetailStatistic.fan:type_name -> lq.AccountStatisticByFan
	100, // 110: lq.AccountDetailStatistic.fan_achieved:type_name -> lq.AccountFanAchieved
	101, // 111: lq.AccountDetailStatisticByCategory.detail_statistic:type_name -> lq.AccountDetailStatistic
	101, // 112: lq.AccountDetailStatisticV2.friend_room_statistic:type_name -> lq.AccountDetailStatistic
	242, // 113: lq.AccountDetailStatisticV2.rank_statistic:type_name -> lq.AccountDetailStatisticV2.RankStatistic
	243, // 114: lq.AccountDetailStatisticV2.customized_contest_statistic:type_name -> lq.AccountDetailStatisticV2.CustomizedContestStatistic
	101, // 115: lq.AccountDetailStatisticV2.leisure_match_statistic:type_name -> lq.AccountDetailStatistic
	244, // 116: lq.AccountDetailStatisticV2.challenge_match_statistic:type_name -> lq.AccountDetailStatisticV2.ChallengeStatistic
	81,  // 117: lq.GameConfig.mode:type_name -> lq.GameMode
	75,  // 118: lq.GameConfig.meta:type_name -> lq.GameMetaData
	76,  // 119: lq.AccountActiveState.playing:type_name -> lq.AccountPlayingGame
	78,  // 120: lq.Friend.base:type_name -> lq.PlayerBaseView
	110, // 121: lq.Friend.state:type_name -> lq.AccountActiveState
	112, // 122: lq.GameLiveSegment.actions:type_name -> lq.GameLiveUnit
	109, // 123: lq.GameLiveHead.game_config:type_name -> lq.GameConfig
	79,  // 124: lq.GameLiveHead.players:type_name -> lq.PlayerGameView
	78,  // 125: lq.CommentItem.commenter:type_name -> lq.PlayerBaseView
	121, // 126: lq.BillingProduct.goods:type_name -> lq.BillingGoods
	71,  // 127: lq.Character.views:type_name -> lq.ViewSlot
	125, // 128: lq.ZHPShop.buy_records:type_name -> lq.BuyRecord
	248, // 129: lq.ZHPShop.free_refresh:type_name -> lq.ZHPShop.RefreshCount
	248, // 130: lq.ZHPShop.cost_refresh:type_name -> lq.ZHPShop.RefreshCount
	126, // 131: lq.ShopInfo.zhp:type_name -> lq.ZHPShop
	125, // 132: lq.ShopInfo.buy_records:type_name -> lq.BuyRecord
	132, // 133: lq.ServerSettings.payment_setting:type_name -> lq.PaymentSetting
	131, // 134: lq.ServerSettings.payment_setting_v2:type_name -> lq.PaymentSettingV2
	250, // 135: lq.PaymentSettingV2.payment_platforms:type_name -> lq.PaymentSettingV2.PaymentSettingUnit
	251, // 136: lq.PaymentSetting.wechat:type_name -> lq.PaymentSetting.WechatData
	252, // 137: lq.PaymentSetting.alipay:type_name -> lq.PaymentSetting.AlipayData
	81,  // 138: lq.CustomizedContestDetail.game_mode:type_name -> lq.GameMode
	109, // 139: lq.RecordGame.config:type_name -> lq.GameConfig
	253, // 140: lq.RecordGame.accounts:type_name -> lq.RecordGame.AccountInfo
	85,  // 141: lq.RecordGame.result:type_name -> lq.GameEndResult
	254, // 142: lq.CustomizedContestGameStart.players:type_name -> lq.CustomizedContestGameStart.Item
	255, // 143: lq.CustomizedContestGameEnd.players:type_name -> lq.CustomizedContestGameEnd.Item
	256, // 144: lq.GameRoundHuData.hupai:type_name -> lq.GameRoundHuData.HuPai
	257, // 145: lq.GameRoundHuData.fans:type_name -> lq.GameRoundHuData.Fan
	149, // 146: lq.GameRoundPlayerResult.hu:type_name -> lq.GameRoundHuData
	150, // 147: lq.GameRoundPlayer.result:type_name -> lq.GameRoundPlayerResult
	151, // 148: lq.GameRoundSnapshot.players:type_name -> lq.GameRoundPlayer
	81,  // 149: lq.GameFinalSnapshot.mode:type_name -> lq.GameMode
	75,  // 150: lq.GameFinalSnapshot.meta:type_name -> lq.GameMetaData
	258, // 151: lq.GameFinalSnapshot.calculate_param:type_name -> lq.GameFinalSnapshot.CalculateParam
	259, // 152: lq.GameFinalSnapshot.seats:type_name -> lq.GameFinalSnapshot.GameSeat
	152, // 153: lq.GameFinalSnapshot.rounds:type_name -> lq.GameRoundSnapshot
	79,  // 154: lq.GameFinalSnapshot.account_views:type_name -> lq.PlayerGameView
	260, // 155: lq.GameFinalSnapshot.final_players:type_name -> lq.GameFinalSnapshot.FinalPlayer
	261, // 156: lq.GameFinalSnapshot.afk_info:type_name -> lq.GameFinalSnapshot.AFKInfo
	155, // 157: lq.ContestDetailRuleV2.game_rule:type_name -> lq.ContestDetailRule
	262, // 158: lq.ContestDetailRuleV2.extra_rule:type_name -> lq.ContestDetailRuleV2.ExtraRule
	156, // 159: lq.GameRuleSetting.detail_rule_v2:type_name -> lq.ContestDetailRuleV2
	158, // 160: lq.RecordNoTilePlayerInfo.tings:type_name -> lq.RecordTingPaiInfo
	263, // 161: lq.RecordHuleInfo.fans:type_name -> lq.RecordHuleInfo.RecordFanInfo
	160, // 162: lq.RecordHulesInfo.hules:type_name -> lq.RecordHuleInfo
	159, // 163: lq.RecordNoTileInfo.players:type_name -> lq.RecordNoTilePlayerInfo
	164, // 164: lq.RecordRoundInfo.liqi_infos:type_name -> lq.RecordLiqiInfo
	165, // 165: lq.RecordRoundInfo.gang_infos:type_name -> lq.RecordGangInfo
	167, // 166: lq.RecordRoundInfo.peipai_infos:type_name -> lq.RecordPeiPaiInfo
	166, // 167: lq.RecordRoundInfo.babai_infos:type_name -> lq.RecordBaBeiInfo
	161, // 168: lq.RecordRoundInfo.hules_info:type_name -> lq.RecordHulesInfo
	162, // 169: lq.RecordRoundInfo.liuju_info:type_name -> lq.RecordLiujuInfo
	163, // 170: lq.RecordRoundInfo.no_tile_info:type_name -> lq.RecordNoTileInfo
	168, // 171: lq.RecordAnalysisedData.round_infos:type_name -> lq.RecordRoundInfo
	264, // 172: lq.NotifyRoomPlayerReady.account_list:type_name -> lq.NotifyRoomPlayerReady.AccountReadyState
	265, // 173: lq.NotifyRoomPlayerDressing.account_list:type_name -> lq.NotifyRoomPlayerDressing.AccountDressingState
	78,  // 174: lq.NotifyRoomPlayerUpdate.update_list:type_name -> lq.PlayerBaseView
	78,  // 175: lq.NotifyRoomPlayerUpdate.player_list:type_name -> lq.PlayerBaseView
	110, // 176: lq.NotifyFriendStateChange.active_state:type_name -> lq.AccountActiveState
	78,  // 177: lq.NotifyFriendViewChange.base:type_name -> lq.PlayerBaseView
	111, // 178: lq.NotifyFriendChange.friend:type_name -> lq.Friend
	78,  // 179: lq.NotifyClientMessage.sender:type_name -> lq.PlayerBaseView
	74,  // 180: lq.NotifyAccountUpdate.update:type_name -> lq.AccountUpdate
	107, // 181: lq.NotifyAnnouncementUpdate.announcements:type_name -> lq.Announcement
	96,  // 182: lq.NotifyNewMail.mail:type_name -> lq.Mail
	108, // 183: lq.NotifyDailyTaskUpdate.progresses:type_name -> lq.TaskProgress
	108, // 184: lq.NotifyActivityTaskUpdate.progresses:type_name -> lq.TaskProgress
	108, // 185: lq.NotifyActivityPeriodTaskUpdate.progresses:type_name -> lq.TaskProgress
	108, // 186: lq.NotifyAccountRandomTaskUpdate.progresses:type_name -> lq.TaskProgress
	108, // 187: lq.NotifyAccountChallengeTaskUpdate.progresses:type_name -> lq.TaskProgress
	120, // 188: lq.NotifyRollingNotice.notice:type_name -> lq.RollingNotice
	128, // 189: lq.NotifyShopUpdate.shop_info:type_name -> lq.ShopInfo
	130, // 190: lq.NotifyServerSetting.settings:type_name -> lq.ServerSettings
	266, // 191: lq.NotifyPayResult.resource_modify:type_name -> lq.NotifyPayResult.ResourceModify
	143, // 192: lq.NotifyCustomContestSystemMsg.game_start:type_name -> lq.CustomizedContestGameStart
	144, // 193: lq.NotifyCustomContestSystemMsg.game_end:type_name -> lq.CustomizedContestGameEnd
	145, // 194: lq.NotifyActivityChange.new_activities:type_name -> lq.Activity
	142, // 195: lq.ResFetchCustomizedContestGameRecordList.Item.record:type_name -> lq.RecordGame
	124, // 196: lq.AccountUpdate.CharacterUpdate.characters:type_name -> lq.Character
	97,  // 197: lq.AccountUpdate.AchievementUpdate.progresses:type_name -> lq.AchievementProgress
	108, // 198: lq.AccountUpdate.DailyTaskUpdate.progresses:type_name -> lq.TaskProgress
	108, // 199: lq.AccountUpdate.TaskUpdate.progresses:type_name -> lq.TaskProgress
	108, // 200: lq.AccountUpdate.AccountChallengeUpdate.progresses:type_name -> lq.TaskProgress
	236, // 201: lq.AccountUpdate.AccountABMatchUpdate.match_max_point:type_name -> lq.AccountUpdate.AccountABMatchUpdate.MatchPoint
	245, // 202: lq.AccountDetailStatisticV2.RankStatistic.total_statistic:type_name -> lq.AccountDetailStatisticV2.RankStatistic.RankData
	245, // 203: lq.AccountDetailStatisticV2.RankStatistic.month_statistic:type_name -> lq.AccountDetailStatisticV2.RankStatistic.RankData
	101, // 204: lq.AccountDetailStatisticV2.CustomizedContestStatistic.total_statistic:type_name -> lq.AccountDetailStatistic
	101, // 205: lq.AccountDetailStatisticV2.CustomizedContestStatistic.month_statistic:type_name -> lq.AccountDetailStatistic
	101, // 206: lq.AccountDetailStatisticV2.ChallengeStatistic.all_season:type_name -> lq.AccountDetailStatistic
	247, // 207: lq.AccountDetailStatisticV2.ChallengeStatistic.season_data_list:type_name -> lq.AccountDetailStatisticV2.ChallengeStatistic.SeasonData
	101, // 208: lq.AccountDetailStatisticV2.RankStatistic.RankData.all_level_statistic:type_name -> lq.AccountDetailStatistic
	246, // 209: lq.AccountDetailStatisticV2.RankStatistic.RankData.level_data_list:type_name -> lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData
	101, // 210: lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData.statistic:type_name -> lq.AccountDetailStatistic
	101, // 211: lq.AccountDetailStatisticV2.ChallengeStatistic.SeasonData.statistic:type_name -> lq.AccountDetailStatistic
	249, // 212: lq.PaymentSettingV2.PaymentSettingUnit.maintain:type_name -> lq.PaymentSettingV2.PaymentMaintain
	124, // 213: lq.RecordGame.AccountInfo.character:type_name -> lq.Character
	70,  // 214: lq.RecordGame.AccountInfo.level:type_name -> lq.AccountLevel
	70,  // 215: lq.RecordGame.AccountInfo.level3:type_name -> lq.AccountLevel
	71,  // 216: lq.RecordGame.AccountInfo.views:type_name -> lq.ViewSlot
	63,  // 217: lq.GameFinalSnapshot.GameSeat.notify_endpoint:type_name -> lq.NetworkEndpoint
	5,   // 218: lq.CustomizedContestManagerApi.loginContestManager:input_type -> lq.ReqContestManageLogin
	7,   // 219: lq.CustomizedContestManagerApi.oauth2AuthContestManager:input_type -> lq.ReqContestManageOauth2Auth
	9,   // 220: lq.CustomizedContestManagerApi.oauth2LoginContestManager:input_type -> lq.ReqContestManageOauth2Login
	64,  // 221: lq.CustomizedContestManagerApi.logoutContestManager:input_type -> lq.ReqCommon
	64,  // 222: lq.CustomizedContestManagerApi.fetchRelatedContestList:input_type -> lq.ReqCommon
	12,  // 223: lq.CustomizedContestManagerApi.createContest:input_type -> lq.ReqCreateCustomizedContest
	14,  // 224: lq.CustomizedContestManagerApi.deleteContest:input_type -> lq.ReqDeleteCustomizedContest
	15,  // 225: lq.CustomizedContestManagerApi.prolongContest:input_type -> lq.ReqProlongContest
	17,  // 226: lq.CustomizedContestManagerApi.manageContest:input_type -> lq.ReqManageContest
	64,  // 227: lq.CustomizedContestManagerApi.fetchContestInfo:input_type -> lq.ReqCommon
	64,  // 228: lq.CustomizedContestManagerApi.exitManageContest:input_type -> lq.ReqCommon
	64,  // 229: lq.CustomizedContestManagerApi.fetchContestGameRule:input_type -> lq.ReqCommon
	20,  // 230: lq.CustomizedContestManagerApi.updateContestGameRule:input_type -> lq.ReqUpdateContestGameRule
	21,  // 231: lq.CustomizedContestManagerApi.searchAccountByNickname:input_type -> lq.ReqSearchAccountByNickname
	23,  // 232: lq.CustomizedContestManagerApi.searchAccountByEid:input_type -> lq.ReqSearchAccountByEid
	64,  // 233: lq.CustomizedContestManagerApi.fetchContestPlayer:input_type -> lq.ReqCommon
	26,  // 234: lq.CustomizedContestManagerApi.updateContestPlayer:input_type -> lq.ReqUpdateCustomizedContestPlayer
	64,  // 235: lq.CustomizedContestManagerApi.startManageGame:input_type -> lq.ReqCommon
	64,  // 236: lq.CustomizedContestManagerApi.stopManageGame:input_type -> lq.ReqCommon
	29,  // 237: lq.CustomizedContestManagerApi.lockGamePlayer:input_type -> lq.ReqLockGamePlayer
	30,  // 238: lq.CustomizedContestManagerApi.unlockGamePlayer:input_type -> lq.ReqUnlockGamePlayer
	31,  // 239: lq.CustomizedContestManagerApi.createContestGame:input_type -> lq.ReqCreateContestGame
	33,  // 240: lq.CustomizedContestManagerApi.fetchContestGameRecords:input_type -> lq.ReqFetchCustomizedContestGameRecordList
	35,  // 241: lq.CustomizedContestManagerApi.removeContestGameRecord:input_type -> lq.ReqRemoveContestGameRecord
	36,  // 242: lq.CustomizedContestManagerApi.fetchContestNotice:input_type -> lq.ReqFetchContestNotice
	38,  // 243: lq.CustomizedContestManagerApi.updateContestNotice:input_type -> lq.ReqUpdateCustomizedContestNotice
	64,  // 244: lq.CustomizedContestManagerApi.fetchContestManager:input_type -> lq.ReqCommon
	40,  // 245: lq.CustomizedContestManagerApi.updateContestManager:input_type -> lq.ReqUpdateCustomizedContestManager
	64,  // 246: lq.CustomizedContestManagerApi.fetchChatSetting:input_type -> lq.ReqCommon
	42,  // 247: lq.CustomizedContestManagerApi.updateChatSetting:input_type -> lq.ReqUpdateCustomizedContestChatSetting
	44,  // 248: lq.CustomizedContestManagerApi.updateGameTag:input_type -> lq.ReqUpdateGameTag
	45,  // 249: lq.CustomizedContestManagerApi.terminateGame:input_type -> lq.ReqTerminateContestGame
	46,  // 250: lq.CustomizedContestManagerApi.pauseGame:input_type -> lq.ReqPauseContestGame
	47,  // 251: lq.CustomizedContestManagerApi.resumeGame:input_type -> lq.ReqResumeContestGame
	64,  // 252: lq.CustomizedContestManagerApi.fetchCurrentRankList:input_type -> lq.ReqCommon
	64,  // 253: lq.CustomizedContestManagerApi.fetchContestLastModify:input_type -> lq.ReqCommon
	64,  // 254: lq.CustomizedContestManagerApi.fetchContestObserver:input_type -> lq.ReqCommon
	51,  // 255: lq.CustomizedContestManagerApi.addContestObserver:input_type -> lq.ReqAddContestObserver
	53,  // 256: lq.CustomizedContestManagerApi.removeContestObserver:input_type -> lq.ReqRemoveContestObserver
	64,  // 257: lq.CustomizedContestManagerApi.fetchContestChatHistory:input_type -> lq.ReqCommon
	6,   // 258: lq.CustomizedContestManagerApi.loginContestManager:output_type -> lq.ResContestManageLogin
	8,   // 259: lq.CustomizedContestManagerApi.oauth2AuthContestManager:output_type -> lq.ResContestManageOauth2Auth
	10,  // 260: lq.CustomizedContestManagerApi.oauth2LoginContestManager:output_type -> lq.ResContestManageOauth2Login
	65,  // 261: lq.CustomizedContestManagerApi.logoutContestManager:output_type -> lq.ResCommon
	11,  // 262: lq.CustomizedContestManagerApi.fetchRelatedContestList:output_type -> lq.ResFetchRelatedContestList
	13,  // 263: lq.CustomizedContestManagerApi.createContest:output_type -> lq.ResCreateCustomizedContest
	65,  // 264: lq.CustomizedContestManagerApi.deleteContest:output_type -> lq.ResCommon
	16,  // 265: lq.CustomizedContestManagerApi.prolongContest:output_type -> lq.ResProlongContest
	18,  // 266: lq.CustomizedContestManagerApi.manageContest:output_type -> lq.ResManageContest
	18,  // 267: lq.CustomizedContestManagerApi.fetchContestInfo:output_type -> lq.ResManageContest
	65,  // 268: lq.CustomizedContestManagerApi.exitManageContest:output_type -> lq.ResCommon
	19,  // 269: lq.CustomizedContestManagerApi.fetchContestGameRule:output_type -> lq.ResFetchContestGameRule
	65,  // 270: lq.CustomizedContestManagerApi.updateContestGameRule:output_type -> lq.ResCommon
	22,  // 271: lq.CustomizedContestManagerApi.searchAccountByNickname:output_type -> lq.ResSearchAccountByNickname
	24,  // 272: lq.CustomizedContestManagerApi.searchAccountByEid:output_type -> lq.ResSearchAccountByEid
	25,  // 273: lq.CustomizedContestManagerApi.fetchContestPlayer:output_type -> lq.ResFetchCustomizedContestPlayer
	65,  // 274: lq.CustomizedContestManagerApi.updateContestPlayer:output_type -> lq.ResCommon
	28,  // 275: lq.CustomizedContestManagerApi.startManageGame:output_type -> lq.ResStartManageGame
	65,  // 276: lq.CustomizedContestManagerApi.stopManageGame:output_type -> lq.ResCommon
	65,  // 277: lq.CustomizedContestManagerApi.lockGamePlayer:output_type -> lq.ResCommon
	65,  // 278: lq.CustomizedContestManagerApi.unlockGamePlayer:output_type -> lq.ResCommon
	32,  // 279: lq.CustomizedContestManagerApi.createContestGame:output_type -> lq.ResCreateContestGame
	34,  // 280: lq.CustomizedContestManagerApi.fetchContestGameRecords:output_type -> lq.ResFetchCustomizedContestGameRecordList
	65,  // 281: lq.CustomizedContestManagerApi.removeContestGameRecord:output_type -> lq.ResCommon
	37,  // 282: lq.CustomizedContestManagerApi.fetchContestNotice:output_type -> lq.ResFetchContestNotice
	65,  // 283: lq.CustomizedContestManagerApi.updateContestNotice:output_type -> lq.ResCommon
	39,  // 284: lq.CustomizedContestManagerApi.fetchContestManager:output_type -> lq.ResFetchCustomizedContestManager
	65,  // 285: lq.CustomizedContestManagerApi.updateContestManager:output_type -> lq.ResCommon
	41,  // 286: lq.CustomizedContestManagerApi.fetchChatSetting:output_type -> lq.ResCustomizedContestChatInfo
	43,  // 287: lq.CustomizedContestManagerApi.updateChatSetting:output_type -> lq.ResUpdateCustomizedContestChatSetting
	65,  // 288: lq.CustomizedContestManagerApi.updateGameTag:output_type -> lq.ResCommon
	65,  // 289: lq.CustomizedContestManagerApi.terminateGame:output_type -> lq.ResCommon
	65,  // 290: lq.CustomizedContestManagerApi.pauseGame:output_type -> lq.ResCommon
	65,  // 291: lq.CustomizedContestManagerApi.resumeGame:output_type -> lq.ResCommon
	48,  // 292: lq.CustomizedContestManagerApi.fetchCurrentRankList:output_type -> lq.ResFetchCurrentRankList
	49,  // 293: lq.CustomizedContestManagerApi.fetchContestLastModify:output_type -> lq.ResFetchContestLastModify
	50,  // 294: lq.CustomizedContestManagerApi.fetchContestObserver:output_type -> lq.ResFetchContestObserver
	52,  // 295: lq.CustomizedContestManagerApi.addContestObserver:output_type -> lq.ResAddContestObserver
	65,  // 296: lq.CustomizedContestManagerApi.removeContestObserver:output_type -> lq.ResCommon
	54,  // 297: lq.CustomizedContestManagerApi.fetchContestChatHistory:output_type -> lq.ResFetchContestChatHistory
	258, // [258:298] is the sub-list for method output_type
	218, // [218:258] is the sub-list for method input_type
	218, // [218:218] is the sub-list for extension type_name
	218, // [218:218] is the sub-list for extension extendee
	0,   // [0:218] is the sub-list for field type_name
}

func init() { file_dhs_proto_init() }
func file_dhs_proto_init() {
	if File_dhs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dhs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestMatchingPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqContestManageLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResContestManageLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqContestManageOauth2Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResContestManageOauth2Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqContestManageOauth2Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResContestManageOauth2Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchRelatedContestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteCustomizedContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqProlongContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResProlongContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqManageContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResManageContest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestGameRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateContestGameRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSearchAccountByNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSearchAccountByNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSearchAccountByEid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSearchAccountByEid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCustomizedContestPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateCustomizedContestPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResStartManageGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLockGamePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUnlockGamePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateContestGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateContestGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchCustomizedContestGameRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestGameRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRemoveContestGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFetchContestNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCustomizedContestNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCustomizedContestManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCustomizedContestChatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCustomizedContestChatSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateCustomizedContestChatSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateGameTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTerminateContestGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPauseContestGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqResumeContestGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCurrentRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestLastModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddContestObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAddContestObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRemoveContestObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestChatHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyContestMatchingPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyContestMatchingPlayerLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyContestGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyContestGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyContestNoticeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyContestManagerKick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiAddiction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountOwnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountPlayingGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCacheView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBaseView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameTestingEnvironmentSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConnectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGainRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGainRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BagUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPlusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByGameMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByFan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountFanAchieved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountShiLian); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientVersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Announcement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountActiveState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveSegmentUri); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLiveHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNewRoundState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNoopAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollingNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillShortcut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZHPShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthTicketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNicknameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSettingV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChestDataV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaithData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestAbstract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestPlayerReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityAccumulatedPointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRankPointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundHuData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundPlayerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordCollectedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestDetailRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestDetailRuleV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRuleSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordTingPaiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoTilePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHulesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLiujuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoTileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLiqiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGangInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordBaBeiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPeiPaiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRoundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordAnalysisedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMatchGameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerDressing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomKickOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMatchTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyFriendStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyFriendViewChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyFriendChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewFriendApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAnotherLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAnnouncementUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyDeleteMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyReviveCoinUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyDailyTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityPeriodTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountRandomTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAccountChallengeTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRollingNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGiftSendRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyShopUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyVipLevelChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyServerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyPayResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCustomContestAccountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCustomContestSystemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCustomContestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyActivityChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAFKResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestGameInfo_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestMatchingPlayer_Controller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSearchAccountByNickname_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSearchAccountByEid_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateContestGame_Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCustomizedContestGameRecordList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCustomizedContestChatInfo_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchCurrentRankList_AccountRankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestLastModify_ContestLastModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFetchContestObserver_Observer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddContestObserver_Observer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAddContestObserver_Observer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_RoundSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_HuSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_HighestHuRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_Liqi20Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_LiQi10Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMahjongStatistic_GameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_PlatformDiamond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_PlatformSkinTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_ChallengeLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_AchievementCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_NumericalUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_CharacterUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AchievementUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_DailyTaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_TitleUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_TaskUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AccountChallengeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AccountABMatchUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate_AccountABMatchUpdate_MatchPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndResult_PlayerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPlusResult_Exchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mail_I18NContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByGameMode_RoundEndData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStatisticByGameMode_RankScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_RankStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_CustomizedContestStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_ChallengeStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_RankStatistic_RankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailStatisticV2_ChallengeStatistic_SeasonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZHPShop_RefreshCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSettingV2_PaymentMaintain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSettingV2_PaymentSettingUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSetting_WechatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSetting_AlipayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGame_AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameStart_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizedContestGameEnd_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundHuData_HuPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoundHuData_Fan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_CalculateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_GameSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_FinalPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFinalSnapshot_AFKInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContestDetailRuleV2_ExtraRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHuleInfo_RecordFanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerReady_AccountReadyState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRoomPlayerDressing_AccountDressingState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dhs_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyPayResult_ResourceModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dhs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   266,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dhs_proto_goTypes,
		DependencyIndexes: file_dhs_proto_depIdxs,
		EnumInfos:         file_dhs_proto_enumTypes,
		MessageInfos:      file_dhs_proto_msgTypes,
	}.Build()
	File_dhs_proto = out.File
	file_dhs_proto_rawDesc = nil
	file_dhs_proto_goTypes = nil
	file_dhs_proto_depIdxs = nil
}
